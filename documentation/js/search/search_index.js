var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.523,1,1.145]],["body/components/AppComponent.html",[0,0.856,1,1.874,2,1.52,3,0.242,4,0.213,5,1.424,6,1.424,7,1.424,8,1.424,9,0.186,10,2.85,11,1.424,12,2.863,13,2.863,14,3.927,15,1.962,16,5.292,17,1.962,18,4.626,19,0.981,20,2.85,21,2.303,22,3.38,23,0.712,24,3.358,25,0.759,26,0.024,27,1.051,28,0.467,29,0.759,30,0.536,31,0.504,32,1.251,33,1.262,34,2.516,35,1.758,36,0.333,37,1.424,38,3.358,39,1.251,40,0.242,41,1.618,42,1.262,43,2.266,44,1.037,45,2.516,46,3.466,47,2.85,48,2.516,49,1.524,50,1.524,51,2.251,52,2.847,53,4.492,54,1.524,55,4.626,56,3.358,57,2.85,58,2.85,59,2.85,60,3.358,61,0.916,62,1.837,63,1.962,64,1.424,65,2.418,66,1.424,67,1.424,68,1.037,69,1.444,70,1.962,71,1.037,72,2.244,73,1.037,74,1.424,75,1.037,76,1.251,77,1.424,78,1.103,79,1.037,80,1.251,81,1.424,82,1.103,83,1.174,84,1.103,85,1.174,86,1.103,87,1.424,88,1.424,89,1.424,90,0.011,91,0.016,92,0.011]],["title/modules/AppModule.html",[93,0.951,94,2.353]],["body/modules/AppModule.html",[1,2.207,2,1.073,3,0.235,4,0.207,9,0.181,26,0.025,30,0.614,31,0.49,32,1.216,36,0.235,39,1.69,40,0.235,61,0.891,75,1.893,76,1.216,79,1.893,80,1.216,86,2.014,90,0.011,91,0.015,92,0.011,93,1.238,94,4.729,95,1.69,96,1.482,97,2.538,98,2.731,99,2.208,100,1.482,101,2.772,102,2.772,103,2.772,104,2.772,105,3.772,106,3.772,107,3.772,108,2.781,109,2.376,110,1.71,111,1.482,112,3.266,113,2.208,114,4.538,115,3.852,116,2.447,117,2.208,118,3.266,119,3.266,120,2.01,121,3.266,122,1.216,123,3.266,124,3.266,125,2.204,126,3.266,127,3.266,128,2.447,129,2.204,130,3.266,131,2.204,132,2.772,133,3.266,134,2.204,135,2.772,136,3.266,137,4.538,138,3.266,139,3.266,140,3.266,141,2.772]],["title/modules/AppRoutingModule.html",[93,0.951,105,2.146]],["body/modules/AppRoutingModule.html",[0,0.919,2,1.18,3,0.258,4,0.228,9,0.199,26,0.025,30,0.588,31,0.539,33,0.98,36,0.258,39,1.337,40,0.258,68,1.495,71,1.495,73,1.495,75,1.495,76,2.041,79,1.495,80,1.337,83,1.256,85,1.256,90,0.012,91,0.016,92,0.012,93,0.98,95,1.337,99,1.747,100,1.629,105,2.98,113,1.747,117,2.356,131,2.423,132,3.048,134,2.423,135,3.048,142,3.591,143,3.591,144,3.101,145,2.98,146,1.337,147,3.957,148,3.591,149,3.591,150,5.479,151,2.423,152,3.048,153,2.423,154,2.69,155,2.423,156,2.423,157,1.88,158,3.048,159,2.423,160,0.98,161,4.483,162,1.88,163,5.479,164,3.591,165,3.591,166,4.11,167,3.591,168,3.591,169,3.591,170,3.591,171,3.591,172,3.591,173,3.591,174,3.591,175,3.591,176,3.591,177,3.591]],["title/guards/AuthGuard.html",[147,2.353,178,2.612]],["body/guards/AuthGuard.html",[3,0.301,4,0.265,9,0.231,19,1.134,21,2.491,23,1.134,25,0.944,26,0.024,27,0.829,28,0.581,29,0.944,30,0.529,31,0.627,33,1.46,35,2.188,36,0.301,40,0.301,41,1.871,42,1.46,43,3.61,44,1.822,45,3.13,90,0.014,91,0.018,92,0.014,146,1.556,147,3.61,157,3.445,166,5.584,179,4.178,180,5.009,181,3.546,182,0.537,183,1.757,184,4.178,185,4.178,186,4.178,187,2.603,188,1.29,189,2.427,190,1.757,191,1.461,192,2.427,193,2.571,194,4.178,195,4.178,196,2.188]],["title/modules/CoreModule.html",[93,0.951,106,2.146]],["body/modules/CoreModule.html",[3,0.281,4,0.248,9,0.216,21,2.406,26,0.025,30,0.599,31,0.586,36,0.281,40,0.281,61,1.065,90,0.013,91,0.017,92,0.013,93,1.397,95,1.454,96,1.771,97,2.491,98,2.044,99,2.779,100,1.771,106,4.297,109,2.68,110,2.044,111,1.771,113,1.899,117,2.491,197,3.313,198,3.313,199,3.143,200,2.931,201,3.656,202,3.143,203,3.903,204,3.15,205,2.209,206,5.118,207,2.402,208,3.313,209,3.903,210,3.903,211,3.903,212,3.903,213,2.634,214,2.634,215,3.903,216,3.903]],["title/injectables/ErrorService.html",[190,1.145,199,1.696]],["body/injectables/ErrorService.html",[3,0.265,4,0.234,9,0.204,19,1.177,23,1.045,25,0.833,26,0.024,27,0.732,28,0.513,29,0.833,30,0.498,31,0.553,36,0.265,40,0.265,44,1.138,90,0.012,91,0.017,92,0.012,182,0.474,183,1.619,188,1.138,190,1.619,192,2.236,199,2.398,207,2.269,217,1.93,218,3.129,219,2.519,220,4.928,221,3.686,222,4.928,223,6.356,224,3.686,225,4.928,226,4.928,227,4.928,228,4.928,229,3.692,230,3.326,231,4.928,232,4.928,233,4.928,234,3.78,235,1.672,236,3.686,237,1.794,238,2.086,239,4.928,240,3.686,241,3.686,242,3.129,243,3.129,244,3.686,245,4.928,246,3.686,247,3.686,248,3.686,249,3.686,250,4.928,251,4.928,252,3.686,253,4.928,254,4.183,255,4.928,256,2.269,257,3.686,258,3.686,259,3.686,260,3.686,261,3.686,262,2.488,263,3.686,264,2.488,265,3.686,266,3.686,267,3.686,268,3.686,269,3.686,270,3.686,271,3.686]],["title/interfaces/Event.html",[69,0.951,272,1.384]],["body/interfaces/Event.html",[3,0.324,4,0.286,9,0.249,22,2.354,26,0.024,28,0.932,40,0.324,69,1.665,90,0.015,91,0.019,92,0.015,182,0.578,235,2.982,272,2.225,273,2.544,274,3.815,275,2.766,276,1.437,277,4.787,278,4.588,279,3.109,280,5.423,281,4.312,282,2.653]],["title/components/EventDetailComponent.html",[0,0.523,68,1.076]],["body/components/EventDetailComponent.html",[0,0.614,1,0.573,2,0.928,3,0.125,4,0.111,5,0.739,6,0.739,7,0.739,8,0.739,9,0.096,11,0.739,12,2.478,13,2.478,15,1.198,17,1.198,19,0.599,21,1.888,23,1.188,25,0.805,26,0.025,27,0.893,28,0.705,29,0.805,30,0.473,31,0.262,33,0.476,35,0.913,36,0.203,37,0.739,39,0.649,40,0.125,41,1.846,42,1.441,43,1.906,44,1.389,45,1.306,49,0.791,50,1.281,51,1.374,54,1.281,61,0.476,62,1.121,63,1.198,64,0.739,65,1.736,66,0.739,67,0.739,68,1.264,69,1.894,70,1.198,71,0.538,72,1.51,73,0.538,74,0.739,75,0.538,76,0.649,77,0.739,78,0.573,79,0.538,80,0.649,81,0.739,82,0.573,83,0.61,84,0.573,85,0.61,86,0.573,87,0.739,88,0.739,89,0.739,90,0.006,91,0.01,92,0.006,146,0.649,153,3.868,157,2.654,160,0.771,182,0.224,183,0.928,188,1.389,189,0.791,191,0.987,192,2.3,193,1.738,196,0.913,200,2.3,201,2.869,235,1.281,238,1.598,276,0.724,278,1.906,279,2.891,281,1.176,282,1.675,283,3.868,284,1.306,285,1.615,286,2.667,287,3.021,288,2.397,289,3.56,290,3.021,291,2.397,292,3.474,293,3.474,294,4.497,295,1.992,296,1.743,297,3.474,298,2.824,299,2.397,300,2.824,301,1.743,302,3.369,303,2.397,304,2.397,305,2.397,306,1.857,307,1.743,308,2.824,309,2.824,310,1.743,311,2.397,312,2.116,313,2.397,314,2.824,315,1.743,316,2.397,317,2.824,318,2.397,319,1.743,320,1.743,321,1.743,322,1.743,323,0.791,324,0.848,325,1.176,326,1.073,327,0.913,328,1.743,329,1.743,330,1.743,331,1.743,332,1.743,333,1.48,334,1.743,335,1.743,336,1.743,337,1.743,338,2.824,339,1.743,340,1.743,341,3.021,342,1.073,343,1.743,344,1.176,345,3.56,346,3.066,347,2.397,348,2.397,349,2.397,350,2.397,351,2.397,352,2.397,353,1.281,354,1.306,355,1.992,356,1.281,357,1.374,358,0.791,359,1.48,360,1.864,361,2.521,362,1.073,363,0.987,364,1.073,365,2.856,366,2.545,367,2.397,368,1.306,369,1.743,370,1.906,371,1.738,372,1.306,373,2.015,374,1.738,375,1.306,376,1.743,377,0.987,378,1.176,379,1.48,380,1.743,381,1.743,382,1.743,383,0.913,384,1.743,385,1.598,386,1.48,387,1.48,388,1.479,389,1.743,390,1.906,391,1.738,392,1.176,393,1.743,394,2.397,395,1.48,396,0.913,397,0.987,398,0.987,399,1.743]],["title/components/EventFormComponent.html",[0,0.523,71,1.076]],["body/components/EventFormComponent.html",[0,0.653,1,0.638,2,1.011,3,0.14,4,0.123,5,0.823,6,0.823,7,0.823,8,0.823,9,0.107,11,0.823,12,2.551,13,2.551,15,1.305,17,1.305,19,0.652,23,1.164,25,0.439,26,0.025,27,0.759,28,0.66,29,0.439,30,0.507,31,0.291,33,0.53,36,0.222,37,0.823,39,0.723,40,0.14,41,1.851,42,1.581,44,1.466,49,0.88,50,1.396,51,0.944,54,1.396,61,0.53,62,1.222,63,1.305,64,0.823,65,1.846,66,0.823,67,0.823,68,0.599,69,1.806,70,1.305,71,1.344,72,1.622,73,0.599,74,0.823,75,0.599,76,0.723,77,0.823,78,0.638,79,0.599,80,0.723,81,0.823,82,0.638,83,0.679,84,0.638,85,0.679,86,0.638,87,0.823,88,0.823,89,0.823,90,0.007,91,0.01,92,0.007,146,0.723,155,3.816,157,2.772,160,1.498,162,1.612,182,0.249,183,1.011,188,1.181,191,1.076,200,2.401,202,2.752,213,1.31,219,1.735,235,0.88,275,1.894,276,0.789,277,1.454,278,1.31,279,2.31,280,1.647,281,1.31,282,0.723,283,3.816,285,1.735,290,3.247,295,2.118,297,3.695,299,3.247,306,1.735,323,0.88,324,0.944,325,1.31,326,1.194,327,1.016,333,4.661,342,1.194,344,2.077,346,2.306,353,1.396,355,1.498,356,1.396,357,1.498,358,0.88,360,2.003,361,2.486,363,1.098,364,1.194,370,1.31,371,1.894,372,1.454,377,1.742,383,1.016,385,1.742,386,1.647,387,1.647,388,1.016,396,1.016,397,1.098,398,1.098,400,1.31,401,4.429,402,2.866,403,2.306,404,3.825,405,3.262,406,3.262,407,1.454,408,2.866,409,3.262,410,2.613,411,1.647,412,3.078,413,3.078,414,2.613,415,1.454,416,1.941,417,2.077,418,2.306,419,3.078,420,2.866,421,1.941,422,1.647,423,1.941,424,1.454,425,1.194,426,1.454,427,1.941,428,1.941,429,2.306,430,3.078,431,1.941,432,3.078,433,1.941,434,3.078,435,1.941,436,3.078,437,1.941,438,3.078,439,3.078,440,3.078,441,3.078,442,1.941,443,1.454,444,3.262,445,1.941,446,1.941,447,1.941,448,1.941,449,1.31,450,1.941,451,1.941,452,3.078,453,1.941,454,2.077,455,1.941,456,1.941,457,1.941,458,1.941,459,1.941,460,1.941,461,1.941,462,1.941,463,3.247,464,1.098,465,1.941,466,1.941,467,1.454,468,1.454,469,1.941,470,1.941,471,1.941,472,1.941,473,1.941,474,1.941,475,1.941,476,1.941]],["title/components/EventListComponent.html",[0,0.523,73,1.076]],["body/components/EventListComponent.html",[0,0.702,1,0.539,2,0.883,3,0.118,4,0.104,5,0.695,6,0.695,7,0.695,8,0.695,9,0.091,11,0.695,12,2.435,13,2.435,15,1.139,17,1.139,19,0.569,21,2.046,22,2.587,23,1.239,25,0.607,26,0.025,27,0.783,28,0.743,29,0.607,30,0.504,31,0.246,32,0.611,33,0.447,35,0.859,36,0.193,37,0.695,39,0.611,40,0.118,41,0.94,42,0.733,44,1.219,49,0.744,50,1.219,51,2.404,52,1.654,54,0.744,57,2.281,58,2.281,59,1.392,61,0.447,62,1.067,63,1.139,64,0.695,65,1.674,66,0.695,67,0.695,68,0.506,69,1.832,70,1.139,71,0.506,72,1.447,73,1.219,74,0.695,75,0.506,76,0.611,77,0.695,78,0.539,79,0.506,80,0.611,81,0.695,82,0.539,83,0.573,84,0.539,85,0.573,86,0.539,87,0.695,88,0.695,89,0.695,90,0.006,91,0.009,92,0.006,122,1.271,151,4.005,160,1.077,162,2.946,182,0.211,183,0.883,188,1.345,189,1.791,191,0.94,200,2.123,208,1.392,219,1.549,235,1.219,237,0.798,238,0.928,276,0.689,277,1.229,278,2.303,283,4.005,285,1.549,295,1.921,306,1.976,325,1.107,326,1.009,327,0.859,341,2.281,342,1.009,347,2.281,348,2.281,349,2.281,350,2.281,351,2.281,352,2.281,353,1.219,354,1.229,355,0.798,356,1.219,357,0.798,358,1.549,360,0.859,361,1.787,362,1.009,363,0.928,365,2.7,366,2.648,367,3.35,372,1.229,373,2.234,374,1.654,377,0.928,378,1.107,383,0.859,385,2.465,388,0.859,391,1.009,396,0.859,417,1.813,449,1.107,454,1.813,464,0.928,467,1.229,477,1.392,478,2.897,479,3.263,480,3.413,481,2.687,482,2.557,483,3.413,484,3.413,485,3.413,486,2.897,487,3.35,488,3.947,489,3.35,490,2.687,491,1.64,492,2.687,493,1.64,494,2.687,495,1.64,496,3.697,497,2.281,498,1.64,499,2.281,500,2.013,501,2.281,502,1.64,503,2.687,504,1.64,505,2.687,506,2.687,507,1.64,508,1.64,509,1.64,510,3.697,511,1.64,512,1.64,513,1.64,514,1.392,515,1.64,516,3.947,517,1.64,518,1.64,519,1.392,520,1.107,521,1.64,522,1.64,523,1.392,524,1.64,525,1.64,526,2.687,527,1.64,528,2.687,529,1.64,530,1.64,531,1.64,532,2.687,533,2.687,534,2.687,535,2.013,536,2.687,537,2.281,538,1.64,539,1.64,540,2.687,541,2.687,542,3.413,543,1.64,544,1.392,545,1.64,546,1.229,547,1.392,548,1.64,549,1.64,550,1.64,551,2.687,552,0.798,553,0.859,554,1.64,555,1.64,556,1.64,557,1.392,558,1.64,559,1.64,560,1.64,561,1.64,562,1.654,563,1.64,564,1.64,565,1.64,566,1.64,567,1.64,568,1.64,569,1.64,570,1.64,571,1.64,572,1.64,573,1.64,574,1.813,575,1.64,576,1.64,577,1.64,578,1.392,579,1.392,580,1.64,581,1.64]],["title/injectables/EventService.html",[190,1.145,200,1.582]],["body/injectables/EventService.html",[3,0.164,4,0.145,9,0.126,19,0.739,23,1.19,25,1.22,26,0.025,27,1.071,28,0.712,29,1.22,30,0.519,31,0.342,36,0.164,40,0.164,41,1.219,42,0.951,69,1.898,90,0.008,91,0.012,92,0.008,160,1.472,162,1.825,182,0.293,183,1.145,188,1.666,190,1.145,192,2.837,199,2.733,200,1.581,207,1.401,214,1.536,217,1.192,230,2.352,235,2.321,237,1.108,238,2.895,262,4.272,275,2.145,279,3.043,282,2.257,291,2.958,292,2.958,302,2.611,303,2.958,304,4.917,305,4.917,326,1.401,454,2.352,463,2.958,479,3.555,487,4.028,496,4.58,553,2.825,582,1.932,583,3.485,584,1.696,585,3.485,586,1.705,587,3.555,588,2.276,589,3.485,590,2.276,591,3.485,592,2.276,593,3.485,594,2.276,595,2.276,596,3.485,597,2.276,598,3.485,599,3.485,600,2.276,601,4.745,602,4.207,603,1.536,604,1.705,605,1.536,606,1.401,607,1.932,608,4.207,609,1.932,610,2.276,611,4.685,612,4.042,613,2.276,614,3.641,615,4.042,616,4.042,617,2.276,618,3.173,619,2.276,620,1.932,621,2.276,622,2.276]],["title/modules/EventsModule.html",[93,0.951,107,2.146]],["body/modules/EventsModule.html",[2,1.326,3,0.291,4,0.256,9,0.223,26,0.024,30,0.584,31,0.606,36,0.291,40,0.291,61,1.101,68,2.013,69,1.584,71,2.013,73,2.013,90,0.014,91,0.018,92,0.014,93,1.428,95,1.948,96,1.831,97,2.824,98,2.113,99,1.964,100,1.831,107,4.275,108,2.957,109,2.739,110,2.113,111,1.831,113,2.546,117,2.546,120,2.484,151,2.723,152,3.426,153,2.723,154,3.024,155,2.723,156,2.723,162,2.113,204,3.22,205,2.284,623,3.426,624,3.426,625,4.036,626,4.036]],["title/classes/GetFilteredEvents.html",[36,0.251,584,1.696]],["body/classes/GetFilteredEvents.html",[3,0.291,4,0.257,9,0.224,19,0.857,23,1.232,25,0.915,26,0.024,27,0.803,28,0.936,29,0.915,30,0.363,32,1.507,36,0.418,40,0.478,42,1.737,90,0.014,91,0.018,92,0.014,160,1.586,182,0.52,191,2.149,219,2.377,276,1.344,282,2.289,323,1.835,324,1.969,552,3.098,584,2.828,627,2.49,628,2.29,629,4.014,630,2.73,631,5.239,632,4.046,633,3.576,634,2.73,635,3.225,636,2.49,637,3.225,638,2.49,639,3.922,640,2.966,641,2.966,642,2.29]],["title/classes/GetFilteredEventsError.html",[36,0.251,641,1.973]],["body/classes/GetFilteredEventsError.html",[3,0.293,4,0.259,9,0.225,19,0.864,23,1.236,25,0.921,26,0.024,27,0.809,28,0.937,29,0.921,30,0.365,32,1.518,36,0.42,40,0.479,42,1.741,90,0.014,91,0.018,92,0.014,160,1.591,182,0.524,191,2.155,219,2.388,276,1.35,282,1.518,323,1.849,324,1.983,552,3.105,584,2.562,627,2.508,628,2.307,629,4.022,630,2.75,633,3.24,634,2.75,635,3.24,636,2.508,637,3.589,638,2.508,639,3.935,640,2.98,641,3.301,642,2.307,643,5.264,644,4.075]],["title/classes/GetFilteredEventsSuccess.html",[36,0.251,640,1.973]],["body/classes/GetFilteredEventsSuccess.html",[3,0.293,4,0.259,9,0.225,19,0.864,23,1.236,25,0.921,26,0.024,27,0.809,28,0.937,29,0.921,30,0.365,32,1.518,36,0.42,40,0.479,42,1.741,90,0.014,91,0.018,92,0.014,160,1.591,182,0.524,191,2.155,219,2.388,276,1.35,282,1.518,323,1.849,324,1.983,552,3.105,584,2.562,627,2.508,628,2.307,629,4.022,630,2.75,633,3.24,634,2.75,635,3.589,636,2.508,637,3.24,638,2.508,639,3.935,640,3.301,641,2.98,642,2.307,645,5.264,646,4.075]],["title/components/HomePageComponent.html",[0,0.523,75,1.076]],["body/components/HomePageComponent.html",[0,0.796,1,0.937,2,1.354,3,0.205,4,0.181,5,1.209,6,1.209,7,1.209,8,1.209,9,0.158,11,1.209,12,2.78,13,2.78,15,1.748,17,1.748,19,1.026,23,0.604,26,0.024,27,0.818,30,0.434,31,0.428,33,0.778,36,0.297,37,1.209,39,1.062,40,0.205,49,1.293,50,1.87,51,2.355,52,1.754,53,2.42,61,0.778,62,1.637,63,1.748,64,1.209,65,2.249,66,1.209,67,1.209,68,0.88,69,1.321,70,1.748,71,0.88,72,2.052,73,0.88,74,1.209,75,1.637,76,2.416,77,1.209,78,0.937,79,0.88,80,1.975,81,1.209,82,0.937,83,0.997,84,0.937,85,0.997,86,0.937,87,1.209,88,1.209,89,1.209,90,0.01,91,0.014,92,0.01,134,2.781,162,3.07,256,1.754,264,1.924,281,2.781,285,1.293,353,1.87,355,2.005,356,1.293,357,2.355,358,2.406,359,2.42,360,2.534,361,2.158,363,1.613,364,1.754,365,2.777,366,3.001,368,2.136,373,2.739,374,1.754,378,1.924,383,2.158,385,3.184,388,1.493,390,3.266,391,2.979,394,2.42,396,2.158,397,2.332,398,2.332,464,1.613,467,2.136,468,2.136,535,2.136,553,2.158,562,1.754,574,2.781,578,2.42,579,2.42,647,3.498,648,2.42,649,4.84,650,4.121,651,2.851,652,4.121,653,4.121,654,4.121,655,4.121,656,4.121,657,4.121,658,4.121,659,4.121,660,2.851,661,3.498,662,4.108,663,2.851,664,2.851,665,2.851,666,2.851,667,2.851,668,2.851,669,2.851,670,2.851,671,2.851,672,2.851,673,2.851,674,2.851,675,2.851,676,2.851,677,2.851,678,2.851]],["title/injectables/ImagesService.html",[190,1.145,201,1.973]],["body/injectables/ImagesService.html",[3,0.293,4,0.258,9,0.225,19,1.114,23,1.114,25,0.919,26,0.024,27,0.807,28,0.566,29,0.919,30,0.572,31,0.61,36,0.293,40,0.293,41,1.838,42,1.434,90,0.014,91,0.018,92,0.014,160,1.109,182,0.523,183,1.727,188,1.255,190,1.727,192,2.643,199,3.234,201,2.975,207,2.502,214,2.743,217,2.129,230,3.547,237,1.978,242,3.451,262,3.931,279,1.978,293,5.227,311,4.461,312,3.938,313,4.461,553,2.129,586,3.046,587,4.614,602,3.938,603,2.743,604,3.046,605,2.743,611,3.938,614,2.743,615,3.046,616,3.046,618,3.046,679,3.451,680,4.065,681,4.065,682,4.065,683,4.065,684,4.065]],["title/injectables/LayoutEffects.html",[129,2.353,190,1.145]],["body/injectables/LayoutEffects.html",[3,0.28,4,0.247,9,0.215,19,1.082,23,1.082,25,0.878,26,0.025,27,0.771,28,0.874,29,0.878,30,0.564,31,0.583,36,0.28,40,0.28,41,1.784,42,1.392,90,0.013,91,0.017,92,0.013,128,2.91,129,3.443,182,0.499,190,1.676,200,2.983,217,2.034,234,2.888,237,1.89,276,1.308,323,1.762,324,1.89,325,2.621,584,2.773,603,2.621,605,2.621,614,3.443,629,3.724,636,3.14,638,3.14,642,3.651,685,3.297,686,3.885,687,3.885,688,5.103,689,5.103,690,5.103,691,5.103,692,5.103,693,4.331,694,5.103,695,3.297,696,5.698,697,3.885,698,3.885,699,3.885,700,3.297]],["title/classes/Logged.html",[36,0.251,187,1.696]],["body/classes/Logged.html",[3,0.324,4,0.286,9,0.249,19,0.955,23,1.295,25,1.019,26,0.024,27,0.895,28,0.933,29,1.019,30,0.404,32,1.679,36,0.324,40,0.44,42,1.667,90,0.015,91,0.019,92,0.015,160,1.23,182,0.579,187,3.264,189,2.901,191,1.962,219,2.546,276,1.439,323,2.045,324,2.193,552,2.974,627,2.774,629,3.936,630,3.041,639,3.041,642,2.551,701,3.041,702,5.611,703,4.507,704,3.826]],["title/components/LoginFormComponent.html",[0,0.523,78,1.145]],["body/components/LoginFormComponent.html",[0,0.717,1,0.757,2,1.156,3,0.166,4,0.146,5,0.977,6,0.977,7,0.977,8,0.977,9,0.127,11,0.977,12,2.659,13,2.659,15,1.492,17,1.492,19,0.746,21,2.101,23,1.195,25,0.521,26,0.024,27,0.847,28,0.664,29,0.521,30,0.506,31,0.346,33,1.794,35,1.207,36,0.253,37,0.977,39,0.858,40,0.166,41,1.492,42,1.48,44,1.086,49,1.046,50,1.596,51,1.121,54,1.046,61,0.629,62,1.397,63,1.492,64,0.977,65,2.025,66,0.977,67,0.977,68,0.712,69,1.164,70,1.492,71,0.712,72,1.81,73,0.712,74,0.977,75,0.712,76,0.858,77,0.977,78,1.569,79,0.712,80,0.858,81,0.977,82,0.757,83,0.806,84,0.757,85,1.492,86,0.757,87,0.977,88,0.977,89,0.977,90,0.008,91,0.012,92,0.008,146,0.858,157,2.953,182,0.296,183,1.156,188,1.318,191,1.23,202,2.9,213,1.555,219,1.936,256,1.418,276,0.902,282,1.31,285,1.936,295,2.324,306,1.936,344,1.555,353,1.596,355,1.712,356,1.046,357,1.712,358,1.596,360,1.842,361,2.235,363,1.304,364,1.418,365,1.842,370,1.555,371,1.418,373,1.304,374,1.418,375,1.727,377,1.991,383,1.207,385,1.991,388,1.207,390,1.555,391,1.418,392,1.555,396,1.207,397,1.304,398,1.304,400,1.555,401,4.465,402,3.197,403,2.636,405,3.578,406,3.578,407,1.727,408,3.197,409,3.578,415,1.727,417,2.374,418,2.636,420,3.197,422,1.956,424,1.727,425,1.418,426,1.727,429,1.727,443,1.727,444,2.636,464,1.304,500,2.636,562,1.418,574,1.555,693,1.956,705,4.936,706,4.357,707,4.267,708,5.144,709,3.518,710,3.518,711,1.956,712,2.304,713,2.304,714,2.304,715,2.165,716,1.956,717,1.555,718,2.304,719,2.304,720,3.518,721,2.304,722,1.956,723,1.956,724,2.304,725,1.956,726,2.304,727,2.986,728,1.727,729,1.727,730,1.727,731,1.956,732,1.956,733,1.956,734,1.956,735,1.956,736,1.956,737,2.304,738,1.956,739,2.304]],["title/modules/LoginModule.html",[93,0.951,740,2.353]],["body/modules/LoginModule.html",[0,0.629,3,0.302,4,0.266,9,0.232,26,0.025,30,0.577,31,0.629,33,1.462,36,0.302,40,0.302,61,1.143,78,2.199,90,0.014,91,0.018,92,0.014,93,1.462,95,1.56,96,1.9,97,2.875,98,2.193,99,2.038,100,1.9,108,2.987,109,2.806,110,2.193,111,1.9,113,2.607,117,2.607,120,2.578,144,3.344,145,2.578,146,1.56,156,2.827,160,1.143,161,2.827,204,3.298,205,2.371,706,3.138,740,4.573,741,3.555,742,3.555,743,4.188,744,4.188,745,3.138]],["title/components/PageNotFoundComponent.html",[0,0.523,79,1.076]],["body/components/PageNotFoundComponent.html",[0,0.872,1,1.155,2,1.568,3,0.253,4,0.223,5,1.49,6,1.49,7,1.49,8,1.49,9,0.194,11,1.49,12,2.884,13,2.884,15,2.024,17,2.024,19,1.149,23,1.012,26,0.024,27,0.947,30,0.428,31,0.527,33,0.959,36,0.344,37,1.49,39,1.309,40,0.253,49,1.594,50,2.165,61,0.959,62,1.895,63,2.024,64,1.49,65,2.465,66,1.49,67,1.49,68,1.085,69,1.479,70,2.024,71,1.085,72,2.298,73,1.085,74,1.49,75,1.085,76,1.309,77,1.49,78,1.155,79,1.795,80,2.491,81,1.49,82,1.155,83,1.229,84,1.155,85,1.229,86,1.155,87,1.49,88,1.49,89,1.49,90,0.012,91,0.016,92,0.012,131,3.657,182,0.452,183,1.568,188,1.085,191,1.669,285,2.459,295,2.829,306,1.594,353,2.165,354,2.633,355,1.71,356,2.165,357,1.71,358,1.594,722,4.934,746,4.6,747,2.983,748,5.419,749,4.772,750,3.514,751,3.514,752,3.514]],["title/components/ProfileDetailComponent.html",[0,0.523,82,1.145]],["body/components/ProfileDetailComponent.html",[0,0.763,1,0.857,2,1.269,3,0.188,4,0.166,5,1.106,6,1.106,7,1.106,8,1.106,9,0.144,11,1.106,12,2.731,13,2.731,15,1.638,17,1.638,19,0.819,20,2.214,21,2.116,22,3.079,23,1.15,25,0.59,26,0.024,27,0.913,28,0.537,29,0.59,30,0.541,31,0.391,32,0.972,33,1.054,34,1.954,35,1.366,36,0.278,37,1.106,39,0.972,40,0.188,41,1.608,42,1.255,44,1.937,46,1.954,48,1.954,49,1.184,50,1.752,51,1.269,54,1.184,61,0.712,62,1.534,63,1.638,64,1.106,65,2.156,66,1.106,67,1.106,68,0.806,69,1.255,70,1.638,71,0.806,72,1.95,73,0.806,74,1.106,75,0.806,76,0.972,77,1.106,78,0.857,79,0.806,80,0.972,81,1.106,82,1.67,83,2.225,84,0.857,85,0.912,86,0.857,87,1.106,88,1.106,89,1.106,90,0.009,91,0.013,92,0.009,111,1.752,146,0.972,157,3.079,182,0.335,183,1.269,188,1.42,191,1.35,256,1.606,276,0.99,279,1.879,284,1.954,285,2.086,286,3.445,287,3.903,288,3.278,295,2.473,306,2.086,327,1.366,342,2.377,353,1.752,355,1.879,356,1.184,357,1.879,358,1.184,360,2.022,361,1.366,365,1.366,371,1.606,373,1.477,383,1.366,388,1.366,392,1.76,396,1.366,397,1.477,398,1.477,449,1.76,464,1.477,468,1.954,661,2.214,662,2.214,715,2.377,728,1.954,730,1.954,753,4.823,754,4.257,755,5.083,756,4.257,757,3.862,758,2.609,759,3.862,760,3.862,761,2.609,762,3.278,763,2.893,764,3.278,765,2.609,766,2.609,767,1.954,768,2.609,769,2.609,770,3.862,771,2.609,772,2.609,773,2.214,774,2.609,775,2.609]],["title/modules/ProfileModule.html",[93,0.951,776,2.353]],["body/modules/ProfileModule.html",[0,0.629,3,0.302,4,0.266,9,0.232,26,0.025,30,0.577,31,0.629,36,0.302,40,0.302,61,1.143,82,2.199,83,1.874,90,0.014,91,0.018,92,0.014,93,1.462,95,1.56,96,1.9,97,2.875,98,2.193,99,2.038,100,1.9,108,2.987,109,2.806,110,2.193,111,1.9,113,2.607,117,2.607,120,2.578,144,3.344,145,2.578,146,1.56,154,3.138,160,1.143,161,2.827,204,3.298,205,2.371,745,3.138,754,3.138,776,4.573,777,3.555,778,3.555,779,4.188,780,4.188]],["title/modules/SharedModule.html",[93,0.951,108,1.582]],["body/modules/SharedModule.html",[0,0.594,3,0.285,4,0.252,9,0.219,26,0.025,30,0.624,31,0.594,36,0.285,40,0.285,90,0.013,91,0.017,92,0.013,93,1.08,95,1.474,97,1.926,100,1.796,108,2.344,113,1.926,117,2.514,145,3.539,146,1.474,425,2.436,497,3.36,781,3.959,782,4.385,783,5.166,784,5.751,785,5.751,786,5.751,787,3.959,788,5.751,789,3.959,790,5.751,791,3.959,792,5.751,793,3.959,794,5.751,795,3.959,796,5.751,797,3.959,798,3.36,799,5.751,800,3.959,801,5.751,802,3.959,803,5.166,804,3.959,805,3.36,806,3.959,807,3.959,808,3.959]],["title/components/SignupFormComponent.html",[0,0.523,84,1.145]],["body/components/SignupFormComponent.html",[0,0.68,1,0.687,2,1.072,3,0.15,4,0.133,5,0.886,6,0.886,7,0.886,8,0.886,9,0.116,11,0.886,12,2.598,13,2.598,15,1.383,17,1.383,19,0.691,21,2.028,23,1.227,25,0.737,26,0.024,27,0.9,28,0.823,29,0.737,30,0.505,31,0.314,33,1.342,35,1.094,36,0.235,37,0.886,39,0.778,40,0.15,41,1.403,42,1.422,43,2.202,44,1.739,49,0.948,50,1.48,51,1.017,54,0.948,61,0.57,62,1.296,63,1.383,64,0.886,65,1.923,66,0.886,67,0.886,68,0.645,69,1.095,70,1.383,71,0.645,72,1.702,73,0.645,74,0.886,75,0.645,76,0.778,77,0.886,78,0.687,79,0.645,80,0.778,81,0.886,82,0.687,83,0.731,84,1.49,85,2.241,86,0.687,87,0.886,88,0.886,89,0.886,90,0.007,91,0.011,92,0.007,146,0.778,157,2.851,182,0.269,183,1.072,188,1.4,189,1.821,191,1.141,196,1.708,202,2.817,213,1.41,219,1.821,256,1.286,276,0.837,285,1.821,295,2.207,306,2.057,327,1.094,344,1.41,353,1.48,355,1.587,356,0.948,357,1.587,358,1.48,360,1.708,361,2.101,363,1.183,364,1.286,365,1.708,370,1.41,371,1.286,373,1.183,374,1.286,375,1.566,377,1.847,383,1.094,385,1.847,388,1.094,390,2.202,391,1.286,392,1.41,396,1.094,397,1.183,398,1.183,400,1.41,401,4.22,402,3.007,403,2.444,405,3.397,406,3.397,407,1.566,408,3.007,409,3.397,410,1.774,411,1.774,415,1.566,417,2.202,418,3.397,420,3.007,424,1.566,425,1.286,426,1.566,429,1.566,443,1.566,444,2.444,464,1.183,562,1.286,574,1.41,695,1.774,711,1.774,715,1.286,716,1.774,717,3.906,723,1.774,725,1.774,727,2.769,728,1.566,729,1.566,730,1.566,733,1.774,734,1.774,735,1.774,736,1.774,738,1.774,767,1.566,809,5.025,810,4.435,811,4.013,812,4.535,813,3.262,814,2.09,815,3.262,816,2.09,817,3.262,818,3.849,819,4.535,820,3.849,821,4.013,822,3.262,823,3.262,824,2.09,825,4.013,826,3.262,827,2.09,828,2.09,829,2.09,830,2.09,831,2.09,832,2.09,833,3.262,834,2.09,835,2.09]],["title/modules/SignupModule.html",[93,0.951,836,2.353]],["body/modules/SignupModule.html",[0,0.629,3,0.302,4,0.266,9,0.232,26,0.025,30,0.577,31,0.629,36,0.302,40,0.302,61,1.143,84,2.199,85,1.874,90,0.014,91,0.018,92,0.014,93,1.462,95,1.56,96,1.9,97,2.875,98,2.193,99,2.038,100,1.9,108,2.987,109,2.806,110,2.193,111,1.9,113,2.607,117,2.607,120,2.578,144,3.344,145,2.578,146,1.56,156,2.827,160,1.143,161,2.827,204,3.298,205,2.371,745,3.138,810,3.138,836,4.573,837,3.555,838,3.555,839,4.188,840,4.188]],["title/interfaces/State.html",[122,1.298,272,1.384]],["body/interfaces/State.html",[3,0.339,4,0.299,9,0.261,26,0.024,28,0.802,30,0.559,32,1.755,33,1.818,40,0.415,90,0.016,91,0.02,92,0.016,122,2.148,125,3.18,160,1.286,182,0.606,272,1.871,273,2.667,276,1.479,520,4.497,841,3.53,842,6.233,843,6.233,844,4.895,845,4.712,846,4.712,847,4.712,848,4.712,849,3.999,850,3.999]],["title/interfaces/State-1.html",[122,1.086,272,1.158,362,1.795]],["body/interfaces/State-1.html",[3,0.291,4,0.257,9,0.224,26,0.024,28,0.808,30,0.47,40,0.418,69,1.677,90,0.014,91,0.018,92,0.014,122,2.533,159,4.541,160,1.104,182,0.52,189,2.636,192,2.789,193,2.49,196,3.043,234,3.809,272,1.607,273,2.29,276,1.344,323,1.835,326,2.49,520,2.73,552,1.969,851,2.73,852,5.712,853,5.239,854,3.536,855,4.933,856,3.031,857,3.031,858,4.046,859,3.434,860,4.933,861,4.046,862,4.046,863,4.447,864,4.046]],["title/interfaces/State-2.html",[122,1.086,272,1.158,865,2.476]],["body/interfaces/State-2.html",[3,0.334,4,0.294,9,0.256,26,0.024,28,0.644,30,0.415,33,1.264,40,0.445,90,0.016,91,0.019,92,0.016,122,2.549,160,1.264,182,0.595,187,3.286,189,2.807,192,2.59,196,2.426,272,1.84,273,2.622,276,1.464,552,2.254,854,3.852,856,3.471,857,3.471,859,3.932,863,3.932,866,3.126,867,5.708,868,4.633]],["title/components/ToolbarComponent.html",[0,0.523,86,1.145]],["body/components/ToolbarComponent.html",[0,0.889,1,0.966,2,1.385,3,0.212,4,0.187,5,1.247,6,1.247,7,1.247,8,1.247,9,0.163,11,1.247,12,2.796,13,2.796,15,1.787,17,1.787,19,0.893,22,3.103,23,1.256,25,0.665,26,0.024,27,0.978,28,0.748,29,0.665,30,0.482,31,0.441,32,1.096,33,1.344,36,0.303,37,1.247,40,0.212,41,1.029,42,0.803,44,1.83,61,0.803,62,1.674,63,1.787,64,1.247,65,2.281,66,1.247,67,1.247,68,0.908,69,1.344,70,1.787,71,0.908,72,2.089,73,0.908,74,1.247,75,0.908,76,1.835,77,1.247,78,0.966,79,0.908,80,1.096,81,1.247,82,0.966,83,1.029,84,0.966,85,1.029,86,1.767,87,2.415,88,1.247,89,1.247,90,0.01,91,0.014,92,0.01,122,1.096,162,2.207,182,0.378,183,1.385,188,1.302,189,1.912,191,1.474,237,1.431,276,1.081,285,2.235,295,2.618,306,1.912,327,1.54,342,2.594,365,1.54,378,1.985,379,2.497,449,1.985,478,4.181,482,3.691,486,4.181,489,4.566,499,3.578,500,3.158,501,3.578,510,4.181,514,2.497,544,3.578,546,3.158,547,2.497,557,2.497,562,1.81,767,2.204,869,2.497,870,4.926,871,4.215,872,2.942,873,4.215,874,2.942,875,4.215,876,2.942,877,2.942,878,2.942,879,2.942,880,2.497]],["title/interfaces/User.html",[44,1.076,272,1.384]],["body/interfaces/User.html",[3,0.349,4,0.308,9,0.268,22,2.539,26,0.023,28,0.878,40,0.349,44,1.949,90,0.016,91,0.02,92,0.016,182,0.623,235,2.2,272,2.331,273,2.745,275,2.984,276,1.505,279,3.192,282,2.614,715,4.037,717,4.427,881,4.116]],["title/injectables/UserService.html",[21,1.298,190,1.145]],["body/injectables/UserService.html",[3,0.179,4,0.158,9,0.137,19,0.788,21,1.385,22,3.028,23,1.226,25,1.009,26,0.025,27,0.886,28,0.776,29,1.009,30,0.545,31,0.372,32,0.924,33,1.218,34,1.858,36,0.179,40,0.179,41,1.95,42,1.218,44,2.119,46,2.787,47,2.105,48,1.858,54,1.687,85,1.301,90,0.015,91,0.013,92,0.008,111,1.687,160,1.015,182,0.319,183,1.222,188,1.64,189,2.41,190,1.222,192,2.76,193,2.746,196,2.337,199,2.814,207,1.526,214,1.674,217,1.299,230,2.51,235,1.687,237,1.207,238,2.105,262,3.584,264,2.51,276,0.954,282,1.385,306,1.125,327,1.299,482,3.98,546,3.714,553,1.948,586,1.858,587,3.714,602,3.343,603,1.674,604,1.858,605,1.674,606,1.526,607,2.105,611,3.714,614,2.51,615,2.787,616,2.787,618,1.858,620,2.105,700,2.105,717,3.584,731,4.208,732,4.208,756,3.714,762,4.734,763,2.787,764,4.208,860,3.157,882,2.105,883,4.958,884,4.958,885,2.48,886,2.48,887,4.958,888,3.719,889,2.48,890,3.719,891,3.719,892,2.48,893,2.48,894,3.719,895,3.719,896,3.719,897,3.719,898,2.48,899,2.48,900,3.157,901,2.48,902,2.48,903,4.462,904,2.48,905,4.462,906,2.48,907,2.48,908,2.48,909,3.719,910,3.719,911,2.48,912,2.48,913,2.105,914,2.48]],["title/injectables/ValidateFormService.html",[190,1.145,202,1.696]],["body/injectables/ValidateFormService.html",[3,0.285,4,0.252,9,0.219,19,1.219,23,1.095,25,0.895,26,0.024,27,1.344,28,0.551,29,0.895,30,0.355,31,0.594,36,0.285,40,0.285,90,0.013,91,0.017,92,0.013,182,0.509,183,1.697,188,1.222,190,1.697,192,2.997,202,2.514,217,2.073,229,3.871,234,2.924,235,1.796,238,2.924,264,3.486,282,2.46,368,2.966,715,2.436,773,3.36,798,5.8,913,3.36,915,4.881,916,3.36,917,5.166,918,3.959,919,5.166,920,3.959,921,5.166,922,5.166,923,4.385,924,3.959,925,3.959,926,3.959,927,3.959,928,5.166,929,3.959,930,3.959,931,3.959,932,3.959,933,3.959]],["title/coverage.html",[934,3.556]],["body/coverage.html",[0,0.97,1,0.975,9,0.164,10,2.519,21,1.105,26,0.024,28,0.413,36,0.389,44,0.916,52,1.827,68,0.916,69,0.81,71,0.916,73,0.916,75,0.916,78,0.975,79,0.916,82,0.975,84,0.975,86,0.975,90,0.01,91,0.014,92,0.01,122,1.844,125,2.003,129,2.003,131,2.003,134,2.003,147,2.003,151,2.003,153,2.003,155,2.003,178,2.224,180,2.519,181,2.519,187,2.064,190,1.952,199,1.444,200,1.346,201,1.68,202,1.444,218,2.519,272,2.269,274,2.519,283,3.341,284,3.178,366,3.949,395,2.519,400,3.341,477,2.519,537,5.55,553,1.554,582,2.519,584,1.444,606,2.611,608,2.224,612,2.224,628,3.364,633,1.827,635,1.827,637,1.827,640,1.68,641,1.68,647,2.519,648,2.519,679,2.519,685,2.519,701,2.863,705,2.519,706,2.224,729,2.224,746,2.519,747,2.519,753,2.519,754,2.224,809,2.519,810,2.224,841,3.178,851,3.341,854,2.863,856,3.178,866,3.341,869,2.519,881,2.519,882,2.519,915,2.519,916,2.519,934,2.224,935,2.519,936,2.968,937,2.968,938,4.95,939,4.95,940,6.605,941,5.714,942,5.401,943,3.601,944,3.601,945,2.968,946,2.968,947,2.968,948,2.968,949,2.968,950,2.968,951,2.968,952,2.968,953,2.968,954,2.968,955,4.242,956,2.968,957,4.242,958,4.242,959,2.968,960,2.968,961,2.968,962,5.714,963,3.601,964,2.519,965,2.519,966,2.968,967,2.968]],["title/dependencies.html",[96,1.901,968,2.917]],["body/dependencies.html",[26,0.024,31,0.711,32,1.765,90,0.016,91,0.02,92,0.016,96,2.15,115,4.913,116,4.336,128,3.55,146,1.765,205,2.682,237,2.306,425,2.916,519,4.022,805,4.022,969,7.097,970,4.738,971,4.738,972,4.738,973,4.738,974,4.738,975,4.738,976,4.738,977,4.738,978,4.738,979,4.738,980,4.738]],["title/miscellaneous/functions.html",[981,1.651,982,3.556]],["body/miscellaneous/functions.html",[25,1.358,26,0.023,27,1.192,29,1.358,90,0.017,91,0.02,92,0.017,122,2.475,182,0.648,188,1.855,552,3.233,851,3.402,857,4.501,866,3.402,963,5.64,981,2.853,982,4.279,983,4.279,984,4.279]],["title/index.html",[182,0.375,985,2.917,986,2.917]],["body/index.html",[4,0.18,9,0.227,14,2.411,26,0.016,39,1.058,44,1.269,52,2.973,62,1.128,69,1.122,83,1.689,90,0.01,91,0.014,92,0.01,95,1.058,158,3.489,159,2.774,187,1.382,229,2.128,234,1.608,243,2.411,254,4.768,275,1.748,279,1.382,286,2.128,302,2.128,312,4.387,316,2.411,318,2.411,346,2.128,353,2.191,356,1.865,358,1.289,362,1.748,366,3.314,377,1.608,414,2.411,454,3.791,479,2.128,523,2.411,535,2.128,553,1.488,606,2.53,756,2.128,763,3.08,782,4.1,818,2.411,820,2.411,865,2.411,880,3.489,934,3.08,935,3.489,987,2.841,988,6.184,989,5.856,990,2.841,991,2.841,992,4.111,993,2.841,994,4.111,995,5.294,996,5.294,997,2.841,998,2.841,999,2.841,1000,2.841,1001,2.841,1002,2.841,1003,2.841,1004,5.617,1005,2.841,1006,2.841,1007,4.111,1008,2.841,1009,2.841,1010,3.489,1011,5.294,1012,5.294,1013,4.111,1014,4.83,1015,2.841,1016,2.841,1017,2.841,1018,4.83,1019,4.111,1020,2.841,1021,4.111,1022,4.111,1023,2.841,1024,2.841,1025,2.841,1026,2.841,1027,2.841,1028,2.841,1029,2.841,1030,2.841,1031,2.411,1032,2.841,1033,2.841,1034,2.841,1035,2.841,1036,2.841,1037,2.841,1038,2.841,1039,2.841,1040,4.111,1041,4.111,1042,4.111,1043,2.841,1044,2.841,1045,2.841,1046,2.841,1047,2.841,1048,2.841,1049,5.856,1050,4.111,1051,2.841,1052,2.841,1053,2.841,1054,2.841,1055,4.83,1056,2.841,1057,2.841,1058,2.841,1059,2.841,1060,2.841,1061,2.841,1062,2.841,1063,4.111,1064,4.83,1065,4.111,1066,4.83,1067,4.83,1068,2.841,1069,2.841,1070,2.841,1071,2.841,1072,5.294,1073,2.841,1074,2.841,1075,2.841,1076,2.841,1077,2.841,1078,2.841,1079,4.111,1080,4.111,1081,2.841,1082,2.841,1083,2.841,1084,2.841,1085,4.111,1086,2.841,1087,5.294,1088,4.111,1089,2.841,1090,2.841,1091,2.841,1092,2.411,1093,2.841,1094,2.841,1095,2.841,1096,2.841,1097,2.841,1098,2.841,1099,2.841,1100,2.841,1101,2.841,1102,4.111,1103,4.111,1104,2.841,1105,2.411,1106,2.841,1107,4.111,1108,2.841,1109,2.841,1110,2.841,1111,2.841,1112,2.841,1113,2.841,1114,2.841,1115,2.841,1116,2.841,1117,2.841]],["title/modules.html",[95,1.768]],["body/modules.html",[26,0.02,90,0.017,91,0.02,92,0.017,94,3.341,95,1.844,105,3.047,106,3.047,107,3.047,108,2.246,116,5.14,740,3.341,776,3.341,836,3.341,1118,6.86,1119,6.86,1120,6.995,1121,5.943,1122,5.943]],["title/overview.html",[1123,4.029]],["body/overview.html",[1,2.098,2,1.138,21,2.003,26,0.024,61,0.945,68,1.661,71,1.661,73,1.661,75,1.661,78,1.767,79,1.661,82,1.767,84,1.767,86,1.767,90,0.012,91,0.016,92,0.012,93,0.945,94,4.731,95,1.29,96,1.571,97,1.685,98,1.813,99,1.685,100,1.571,101,2.94,102,2.94,103,2.94,104,2.94,105,3.31,106,4.204,107,4.143,108,2.898,109,2.474,110,1.813,111,1.571,178,2.595,197,2.94,198,2.94,199,2.617,200,2.44,201,3.044,202,2.617,217,1.813,273,1.96,362,2.131,366,1.96,623,2.94,624,2.94,627,2.131,740,4.212,741,2.94,742,2.94,776,4.212,777,2.94,778,2.94,836,4.212,837,2.94,838,2.94,1031,2.94,1092,2.94,1105,2.94,1123,2.94,1124,3.463,1125,3.463]],["title/routes.html",[144,2.686]],["body/routes.html",[26,0.022,90,0.019,91,0.022,92,0.019,144,3.16]],["title/miscellaneous/typealiases.html",[981,1.651,1126,4.19]],["body/miscellaneous/typealiases.html",[26,0.023,28,0.735,90,0.018,91,0.021,92,0.018,182,0.679,187,2.57,584,2.57,628,2.989,640,2.989,641,2.989,642,3.818,701,3.564,981,2.989,1127,5.281,1128,4.483,1129,4.483]],["title/miscellaneous/variables.html",[981,1.651,1130,3.556]],["body/miscellaneous/variables.html",[26,0.024,28,0.954,33,1.008,54,1.676,90,0.012,91,0.017,92,0.012,122,1.838,125,3.331,141,3.136,159,2.493,182,0.475,187,2.705,193,2.274,196,2.911,234,2.091,282,2.369,323,3.088,324,3.312,520,2.493,606,3.651,608,3.698,609,3.136,612,3.698,628,2.091,633,3.038,634,2.493,635,3.038,636,2.274,637,3.038,638,2.274,701,2.493,704,3.136,841,2.768,844,3.136,849,3.136,850,3.136,851,2.493,852,3.136,854,4.003,855,3.136,866,2.493,900,3.136,923,4.189,943,3.136,944,4.718,964,3.136,965,3.136,981,2.091,983,3.136,984,3.136,1010,4.189,1128,4.718,1129,3.136,1130,3.136,1131,3.694,1132,3.694,1133,4.936,1134,3.694,1135,4.936,1136,3.694,1137,3.694,1138,3.694]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":366,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["0.3.6",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["0.3rem",{"_index":579,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{}}}],["0.5rem",{"_index":734,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["0.8rem",{"_index":569,"title":{},"body":{"components/EventListComponent.html":{}}}],["0.9.1",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":362,"title":{"interfaces/State-1.html":{}},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"index.html":{},"overview.html":{}}}],["1.3rem",{"_index":676,"title":{},"body":{"components/HomePageComponent.html":{}}}],["1.4",{"_index":678,"title":{},"body":{"components/HomePageComponent.html":{}}}],["1.5rem",{"_index":572,"title":{},"body":{"components/EventListComponent.html":{}}}],["1.9.0",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1124,"title":{},"body":{"overview.html":{}}}],["100",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{},"index.html":{}}}],["10px",{"_index":379,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["11",{"_index":1081,"title":{},"body":{"index.html":{}}}],["12px",{"_index":733,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["14",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":577,"title":{},"body":{"components/EventListComponent.html":{}}}],["15px",{"_index":580,"title":{},"body":{"components/EventListComponent.html":{}}}],["1px",{"_index":566,"title":{},"body":{"components/EventListComponent.html":{}}}],["1rem",{"_index":392,"title":{},"body":{"components/EventDetailComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["2",{"_index":865,"title":{"interfaces/State-2.html":{}},"body":{"index.html":{}}}],["2.0.8",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["2.2rem",{"_index":667,"title":{},"body":{"components/HomePageComponent.html":{}}}],["2.5",{"_index":1060,"title":{},"body":{"index.html":{}}}],["2.6",{"_index":1062,"title":{},"body":{"index.html":{}}}],["2/6",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":468,"title":{},"body":{"components/EventFormComponent.html":{},"components/HomePageComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["22",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":664,"title":{},"body":{"components/HomePageComponent.html":{}}}],["28",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["2rem",{"_index":374,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["3",{"_index":1086,"title":{},"body":{"index.html":{}}}],["300",{"_index":578,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{}}}],["30px",{"_index":672,"title":{},"body":{"components/HomePageComponent.html":{}}}],["33",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":774,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["36",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["3rem",{"_index":668,"title":{},"body":{"components/HomePageComponent.html":{}}}],["4",{"_index":1092,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4/10",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["4/11",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["4/14",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":729,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["4px",{"_index":398,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["4rem",{"_index":571,"title":{},"body":{"components/EventListComponent.html":{}}}],["5",{"_index":1105,"title":{},"body":{"index.html":{},"overview.html":{}}}],["5/8",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":466,"title":{},"body":{"components/EventFormComponent.html":{}}}],["56px",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["5px",{"_index":399,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["6",{"_index":1125,"title":{},"body":{"overview.html":{}}}],["6.4.0",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1058,"title":{},"body":{"index.html":{}}}],["600",{"_index":735,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["600px",{"_index":677,"title":{},"body":{"components/HomePageComponent.html":{}}}],["62",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["65",{"_index":673,"title":{},"body":{"components/HomePageComponent.html":{}}}],["6px",{"_index":376,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["70",{"_index":558,"title":{},"body":{"components/EventListComponent.html":{}}}],["75",{"_index":395,"title":{},"body":{"components/EventDetailComponent.html":{},"coverage.html":{}}}],["8",{"_index":1031,"title":{},"body":{"index.html":{},"overview.html":{}}}],["8.0.1",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":992,"title":{},"body":{"index.html":{}}}],["80",{"_index":560,"title":{},"body":{"components/EventListComponent.html":{}}}],["800px",{"_index":369,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["90",{"_index":570,"title":{},"body":{"components/EventListComponent.html":{}}}],["900",{"_index":575,"title":{},"body":{"components/EventListComponent.html":{}}}],["95",{"_index":581,"title":{},"body":{"components/EventListComponent.html":{}}}],["9f354e7919a3f56e537616f46b1c1e87b5632d7c7227f2bd469762eed79a6296",{"_index":683,"title":{},"body":{"injectables/ImagesService.html":{}}}],["accenture",{"_index":658,"title":{},"body":{"components/HomePageComponent.html":{}}}],["acceptable",{"_index":1075,"title":{},"body":{"index.html":{}}}],["accordingly",{"_index":247,"title":{},"body":{"injectables/ErrorService.html":{}}}],["account",{"_index":727,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["acn",{"_index":387,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["action",{"_index":552,"title":{},"body":{"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["action.payload",{"_index":863,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["action.type",{"_index":859,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["actionreducermap",{"_index":844,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":642,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"miscellaneous/typealiases.html":{}}}],["activatedroute",{"_index":297,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["actual_component",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["ad",{"_index":1059,"title":{},"body":{"index.html":{}}}],["add",{"_index":454,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"index.html":{}}}],["added",{"_index":1055,"title":{},"body":{"index.html":{}}}],["addedby",{"_index":277,"title":{},"body":{"interfaces/Event.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{}}}],["addedbyvalue",{"_index":438,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform",{"_index":404,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get('date",{"_index":458,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get('description",{"_index":462,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get('location",{"_index":460,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get('title",{"_index":456,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get(\\'date",{"_index":472,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get(\\'description",{"_index":476,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get(\\'location",{"_index":474,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get(\\'title",{"_index":470,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addevent",{"_index":583,"title":{},"body":{"injectables/EventService.html":{}}}],["addevent(event",{"_index":589,"title":{},"body":{"injectables/EventService.html":{}}}],["additional",{"_index":1030,"title":{},"body":{"index.html":{}}}],["again",{"_index":270,"title":{},"body":{"injectables/ErrorService.html":{}}}],["aliases",{"_index":1127,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":391,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["already",{"_index":833,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["analisys",{"_index":1096,"title":{},"body":{"index.html":{}}}],["analyze",{"_index":1089,"title":{},"body":{"index.html":{}}}],["analyzer",{"_index":1091,"title":{},"body":{"index.html":{}}}],["angular",{"_index":782,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["angular/animations",{"_index":519,"title":{},"body":{"components/EventListComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":205,"title":{},"body":{"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":207,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":425,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":789,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":793,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":804,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":797,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":800,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":791,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/slide",{"_index":802,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/table",{"_index":795,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":787,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"dependencies.html":{}}}],["animate",{"_index":518,"title":{},"body":{"components/EventListComponent.html":{}}}],["animate(300",{"_index":530,"title":{},"body":{"components/EventListComponent.html":{}}}],["animation",{"_index":1038,"title":{},"body":{"index.html":{}}}],["animations",{"_index":523,"title":{},"body":{"components/EventListComponent.html":{},"index.html":{}}}],["apiurl",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{}}}],["app.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.store",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":654,"title":{},"body":{"components/HomePageComponent.html":{}}}],["application/json",{"_index":900,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":94,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":105,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":1005,"title":{},"body":{"index.html":{}}}],["audit",{"_index":1065,"title":{},"body":{"index.html":{}}}],["audited",{"_index":1082,"title":{},"body":{"index.html":{}}}],["authenticated",{"_index":887,"title":{},"body":{"injectables/UserService.html":{}}}],["authguard",{"_index":147,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authorization",{"_index":682,"title":{},"body":{"injectables/ImagesService.html":{}}}],["auto",{"_index":367,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["automatically",{"_index":1001,"title":{},"body":{"index.html":{}}}],["available",{"_index":1122,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":250,"title":{},"body":{"injectables/ErrorService.html":{}}}],["background",{"_index":357,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["background('/assets/imgs/patt1.jpg",{"_index":660,"title":{},"body":{"components/HomePageComponent.html":{}}}],["background('/assets/imgs/patt2.jpg",{"_index":354,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["background('/assets/imgs/patt4.jpg",{"_index":465,"title":{},"body":{"components/EventFormComponent.html":{}}}],["background('/assets/imgs/patt5.jpg",{"_index":728,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["bad",{"_index":266,"title":{},"body":{"injectables/ErrorService.html":{}}}],["better",{"_index":1056,"title":{},"body":{"index.html":{}}}],["bit",{"_index":1041,"title":{},"body":{"index.html":{}}}],["black",{"_index":665,"title":{},"body":{"components/HomePageComponent.html":{}}}],["block",{"_index":662,"title":{},"body":{"components/HomePageComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["body",{"_index":255,"title":{},"body":{"injectables/ErrorService.html":{}}}],["boolean",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"classes/Logged.html":{},"components/SignupFormComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["boolean(localstorage.getitem('user",{"_index":914,"title":{},"body":{"injectables/UserService.html":{}}}],["bootstrap",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["border",{"_index":396,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["bottom",{"_index":373,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["box",{"_index":380,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["browse",{"_index":1120,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":370,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["bugs",{"_index":1097,"title":{},"body":{"index.html":{}}}],["build",{"_index":1004,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":1087,"title":{},"body":{"index.html":{}}}],["button",{"_index":377,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{}}}],["buttons",{"_index":1053,"title":{},"body":{"index.html":{}}}],["calc(100",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["canactivate",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["card",{"_index":359,"title":{},"body":{"components/EventDetailComponent.html":{},"components/HomePageComponent.html":{}}}],["case",{"_index":860,"title":{},"body":{"interfaces/State-1.html":{},"injectables/UserService.html":{}}}],["catcherror",{"_index":603,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{}}}],["catcherror(error",{"_index":694,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["catcherror(this.errorservice.handleerror",{"_index":616,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["center",{"_index":355,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["change",{"_index":818,"title":{},"body":{"components/SignupFormComponent.html":{},"index.html":{}}}],["changes",{"_index":1042,"title":{},"body":{"index.html":{}}}],["check",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["checkuser",{"_index":883,"title":{},"body":{"injectables/UserService.html":{}}}],["ciclomatic",{"_index":1101,"title":{},"body":{"index.html":{}}}],["class",{"_index":36,"title":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["classes",{"_index":627,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"overview.html":{}}}],["cli",{"_index":990,"title":{},"body":{"index.html":{}}}],["click",{"_index":418,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["client",{"_index":242,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/ImagesService.html":{}}}],["clues",{"_index":257,"title":{},"body":{"injectables/ErrorService.html":{}}}],["cluster_appmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":197,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":198,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":623,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_declarations",{"_index":624,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_imports",{"_index":625,"title":{},"body":{"modules/EventsModule.html":{}}}],["cluster_loginmodule",{"_index":741,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_declarations",{"_index":742,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_imports",{"_index":743,"title":{},"body":{"modules/LoginModule.html":{}}}],["cluster_profilemodule",{"_index":777,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":778,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":779,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_signupmodule",{"_index":837,"title":{},"body":{"modules/SignupModule.html":{},"overview.html":{}}}],["cluster_signupmodule_declarations",{"_index":838,"title":{},"body":{"modules/SignupModule.html":{},"overview.html":{}}}],["cluster_signupmodule_imports",{"_index":839,"title":{},"body":{"modules/SignupModule.html":{}}}],["code",{"_index":254,"title":{},"body":{"injectables/ErrorService.html":{},"index.html":{}}}],["cognitive",{"_index":1104,"title":{},"body":{"index.html":{}}}],["color",{"_index":383,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["column",{"_index":364,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["command",{"_index":1085,"title":{},"body":{"index.html":{}}}],["comments",{"_index":1079,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1023,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":204,"title":{},"body":{"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{}}}],["complexity",{"_index":1102,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":1072,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["conditional",{"_index":1100,"title":{},"body":{"index.html":{}}}],["console",{"_index":226,"title":{},"body":{"injectables/ErrorService.html":{}}}],["console.error",{"_index":260,"title":{},"body":{"injectables/ErrorService.html":{}}}],["console.error('an",{"_index":248,"title":{},"body":{"injectables/ErrorService.html":{}}}],["const",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"classes/Logged.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"injectables/UserService.html":{}}}],["constants",{"_index":609,"title":{},"body":{"injectables/EventService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["constructor(actions",{"_index":686,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["constructor(eventservice",{"_index":491,"title":{},"body":{"components/EventListComponent.html":{}}}],["constructor(http",{"_index":586,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["constructor(payload",{"_index":630,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{}}}],["constructor(public",{"_index":639,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{}}}],["constructor(route",{"_index":296,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["constructor(router",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(store",{"_index":872,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["constructor(userservice",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["constructor(validateformservice",{"_index":407,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["contain",{"_index":256,"title":{},"body":{"injectables/ErrorService.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["container",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["contains",{"_index":808,"title":{},"body":{"modules/SharedModule.html":{}}}],["content",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":563,"title":{},"body":{"components/EventListComponent.html":{}}}],["core",{"_index":215,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/auth",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/core.module",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["core/event.service",{"_index":325,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/LayoutEffects.html":{}}}],["core/images.service",{"_index":328,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["core/user.service",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["core/validate",{"_index":426,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["coremodule",{"_index":106,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":890,"title":{},"body":{"injectables/UserService.html":{}}}],["cover",{"_index":356,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{}}}],["coverage",{"_index":934,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crafted",{"_index":657,"title":{},"body":{"components/HomePageComponent.html":{}}}],["crate",{"_index":412,"title":{},"body":{"components/EventFormComponent.html":{}}}],["create",{"_index":419,"title":{},"body":{"components/EventFormComponent.html":{}}}],["created",{"_index":1020,"title":{},"body":{"index.html":{}}}],["createform",{"_index":405,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["credits",{"_index":1111,"title":{},"body":{"index.html":{}}}],["css",{"_index":1043,"title":{},"body":{"index.html":{}}}],["data",{"_index":1107,"title":{},"body":{"index.html":{}}}],["date",{"_index":278,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{}}}],["datevalue",{"_index":434,"title":{},"body":{"components/EventFormComponent.html":{}}}],["day",{"_index":1029,"title":{},"body":{"index.html":{}}}],["db.json",{"_index":1108,"title":{},"body":{"index.html":{}}}],["dd/mm/yyyy",{"_index":351,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["declarations",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["decorators",{"_index":695,"title":{},"body":{"injectables/LayoutEffects.html":{},"components/SignupFormComponent.html":{}}}],["default",{"_index":323,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["delete",{"_index":302,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{},"index.html":{}}}],["delete(`${environment.apiurl}events/${id",{"_index":619,"title":{},"body":{"injectables/EventService.html":{}}}],["deleteevent",{"_index":291,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["deleteevent(event",{"_index":300,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["deleteevent(id",{"_index":591,"title":{},"body":{"injectables/EventService.html":{}}}],["dependencies",{"_index":96,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":235,"title":{},"body":{"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["descriptionvalue",{"_index":436,"title":{},"body":{"components/EventFormComponent.html":{}}}],["destroy",{"_index":499,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["detail",{"_index":286,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ProfileDetailComponent.html":{},"index.html":{}}}],["detail'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["detail.component",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{},"modules/ProfileModule.html":{}}}],["detail.component.html",{"_index":288,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["detail.component.scss",{"_index":287,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["detail.component.ts",{"_index":284,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ProfileDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:17",{"_index":757,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["detail.component.ts:19",{"_index":320,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:20",{"_index":321,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":322,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":298,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":765,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":758,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":319,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":761,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":307,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:50",{"_index":310,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:62",{"_index":315,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:77",{"_index":301,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail/event",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"modules/EventsModule.html":{},"coverage.html":{}}}],["detail/profile",{"_index":754,"title":{},"body":{"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["details",{"_index":345,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detected",{"_index":1068,"title":{},"body":{"index.html":{}}}],["determine",{"_index":894,"title":{},"body":{"injectables/UserService.html":{}}}],["dev",{"_index":998,"title":{},"body":{"index.html":{}}}],["development",{"_index":993,"title":{},"body":{"index.html":{}}}],["different",{"_index":227,"title":{},"body":{"injectables/ErrorService.html":{}}}],["directive",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["directives",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["directory",{"_index":1007,"title":{},"body":{"index.html":{}}}],["display",{"_index":360,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["display:inline",{"_index":674,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dist",{"_index":1006,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1069,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":935,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["downloaded",{"_index":1047,"title":{},"body":{"index.html":{}}}],["duplicate",{"_index":1099,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1036,"title":{},"body":{"index.html":{}}}],["edit",{"_index":346,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"index.html":{}}}],["effect",{"_index":696,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["effectsmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.forroot([layouteffects",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["efisio",{"_index":1112,"title":{},"body":{"index.html":{}}}],["element",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["elementref",{"_index":821,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["email",{"_index":715,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/User.html":{},"injectables/ValidateFormService.html":{}}}],["empty",{"_index":922,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["end",{"_index":372,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{}}}],["entrycomponents",{"_index":806,"title":{},"body":{"modules/SharedModule.html":{}}}],["environment",{"_index":606,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":607,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{}}}],["err",{"_index":721,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["error",{"_index":234,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/LayoutEffects.html":{},"interfaces/State-1.html":{},"injectables/ValidateFormService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error.error",{"_index":239,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error.error.message",{"_index":249,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error.service",{"_index":214,"title":{},"body":{"modules/CoreModule.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["error.status",{"_index":261,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errorevent",{"_index":241,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errors",{"_index":229,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/ValidateFormService.html":{},"index.html":{}}}],["errorservice",{"_index":199,"title":{"injectables/ErrorService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["eui",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["event",{"_index":69,"title":{"interfaces/Event.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State-1.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["event.addedby",{"_index":341,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["event.date",{"_index":350,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["event.description",{"_index":352,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["event.location",{"_index":349,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["event.service",{"_index":209,"title":{},"body":{"modules/CoreModule.html":{}}}],["event.title",{"_index":347,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["eventdetailcomponent",{"_index":68,"title":{"components/EventDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventdetails/:id",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["eventform/:id",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["eventformcomponent",{"_index":71,"title":{"components/EventFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventlistcomponent",{"_index":73,"title":{"components/EventListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["events",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/ToolbarComponent.html":{}}}],["events.site",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events/event",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["events/events.module",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["events[0",{"_index":549,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventservice",{"_index":200,"title":{"injectables/EventService.html":{}},"body":{"modules/CoreModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/LayoutEffects.html":{},"coverage.html":{},"overview.html":{}}}],["eventsmodule",{"_index":107,"title":{"modules/EventsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsui",{"_index":987,"title":{},"body":{"index.html":{}}}],["example",{"_index":1110,"title":{},"body":{"index.html":{}}}],["exaple",{"_index":1106,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1015,"title":{},"body":{"index.html":{}}}],["exists",{"_index":303,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["explained",{"_index":1025,"title":{},"body":{"index.html":{}}}],["explaining",{"_index":921,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["export",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["exports",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["facing",{"_index":263,"title":{},"body":{"injectables/ErrorService.html":{}}}],["false",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":386,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["fb",{"_index":408,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["features",{"_index":1018,"title":{},"body":{"index.html":{}}}],["field",{"_index":798,"title":{},"body":{"modules/SharedModule.html":{},"injectables/ValidateFormService.html":{}}}],["field.errors",{"_index":924,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.email",{"_index":932,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.maxlength",{"_index":930,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.maxlength.requiredlength",{"_index":931,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.minlength",{"_index":927,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.minlength.requiredlength",{"_index":929,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.required",{"_index":925,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1003,"title":{},"body":{"index.html":{}}}],["filter",{"_index":496,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["filteredevents",{"_index":852,"title":{},"body":{"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["fired",{"_index":417,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["flag",{"_index":1009,"title":{},"body":{"index.html":{}}}],["flex",{"_index":361,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["flow",{"_index":363,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["foms",{"_index":1033,"title":{},"body":{"index.html":{}}}],["font",{"_index":385,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form",{"_index":401,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["form.component",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/SignupModule.html":{}}}],["form.component.html",{"_index":403,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.scss",{"_index":402,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts",{"_index":400,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:16",{"_index":713,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:17",{"_index":709,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:19",{"_index":421,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:20",{"_index":422,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{}}}],["form.component.ts:21",{"_index":824,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:22",{"_index":410,"title":{},"body":{"components/EventFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:23",{"_index":813,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:25",{"_index":423,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:26",{"_index":711,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:32",{"_index":415,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:39",{"_index":814,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:42",{"_index":712,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:49",{"_index":411,"title":{},"body":{"components/EventFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:56",{"_index":816,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:72",{"_index":416,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.service",{"_index":213,"title":{},"body":{"modules/CoreModule.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.service.ts",{"_index":916,"title":{},"body":{"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["form.service.ts:13",{"_index":920,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["form.service.ts:4",{"_index":918,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["form/event",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventFormComponent.html":{},"modules/EventsModule.html":{},"coverage.html":{}}}],["form/login",{"_index":706,"title":{},"body":{"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"coverage.html":{}}}],["form/signup",{"_index":810,"title":{},"body":{"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"coverage.html":{}}}],["formbuilder",{"_index":409,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["formgroup",{"_index":420,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["forms",{"_index":1034,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":784,"title":{},"body":{"modules/SharedModule.html":{}}}],["found",{"_index":722,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["found.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":749,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":748,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":747,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:11",{"_index":750,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:15",{"_index":751,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["francisco",{"_index":1115,"title":{},"body":{"index.html":{}}}],["free",{"_index":1046,"title":{},"body":{"index.html":{}}}],["fresh",{"_index":653,"title":{},"body":{"components/HomePageComponent.html":{}}}],["full",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":856,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{},"coverage.html":{}}}],["functionalities",{"_index":1019,"title":{},"body":{"index.html":{}}}],["functions",{"_index":982,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":1076,"title":{},"body":{"index.html":{}}}],["generated",{"_index":989,"title":{},"body":{"index.html":{}}}],["generic",{"_index":233,"title":{},"body":{"injectables/ErrorService.html":{}}}],["get('https://api.unsplash.com/photos/random?orientation=landscape&query=event",{"_index":684,"title":{},"body":{"injectables/ImagesService.html":{}}}],["get_filtered_events",{"_index":633,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_filtered_events_error",{"_index":637,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_filtered_events_success",{"_index":635,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["geterror",{"_index":917,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["geterror(name",{"_index":919,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["getevent",{"_index":292,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["getevent(id",{"_index":593,"title":{},"body":{"injectables/EventService.html":{}}}],["getevents",{"_index":487,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["getfilteredevents",{"_index":584,"title":{"classes/GetFilteredEvents.html":{}},"body":{"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getfilteredevents(filter",{"_index":596,"title":{},"body":{"injectables/EventService.html":{}}}],["getfilteredeventserror",{"_index":641,"title":{"classes/GetFilteredEventsError.html":{}},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getfilteredeventssuccess",{"_index":640,"title":{"classes/GetFilteredEventsSuccess.html":{}},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getimage",{"_index":293,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{}}}],["getting",{"_index":985,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":755,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["graph",{"_index":1121,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":568,"title":{},"body":{"components/EventListComponent.html":{}}}],["guard",{"_index":178,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.service.ts",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guard.service.ts:16",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.service.ts:6",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":666,"title":{},"body":{"components/HomePageComponent.html":{}}}],["h2",{"_index":671,"title":{},"body":{"components/HomePageComponent.html":{}}}],["h3",{"_index":393,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["h4",{"_index":775,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["hammerjs",{"_index":805,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["handle",{"_index":246,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handleerror",{"_index":220,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handleerror(error",{"_index":222,"title":{},"body":{"injectables/ErrorService.html":{}}}],["happened",{"_index":267,"title":{},"body":{"injectables/ErrorService.html":{}}}],["header",{"_index":389,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["headers",{"_index":611,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["height",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{}}}],["history",{"_index":1024,"title":{},"body":{"index.html":{}}}],["home",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["homepagecomponent",{"_index":75,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":655,"title":{},"body":{"components/HomePageComponent.html":{}}}],["html",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["http",{"_index":230,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["http://localhost:3000",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1000,"title":{},"body":{"index.html":{}}}],["http://server.open",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_header_key_content_type",{"_index":612,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["http_header_value_application_json",{"_index":608,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":587,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":206,"title":{},"body":{"modules/CoreModule.html":{}}}],["httperrorresponse",{"_index":223,"title":{},"body":{"injectables/ErrorService.html":{}}}],["httpheaders",{"_index":602,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["id",{"_index":279,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"components/ProfileDetailComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["identifier",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["idvalue",{"_index":440,"title":{},"body":{"components/EventFormComponent.html":{}}}],["image",{"_index":312,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{},"index.html":{}}}],["images",{"_index":1045,"title":{},"body":{"index.html":{}}}],["images.service",{"_index":211,"title":{},"body":{"modules/CoreModule.html":{}}}],["imagesservice",{"_index":201,"title":{"injectables/ImagesService.html":{}},"body":{"modules/CoreModule.html":{},"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["imageurl",{"_index":289,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["img",{"_index":394,"title":{},"body":{"components/EventDetailComponent.html":{},"components/HomePageComponent.html":{}}}],["img.urls.small",{"_index":336,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["implements",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["import('./login/login.module').then(m",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile.module').then(m",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./signup/signup.module').then(m",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{}}}],["include",{"_index":353,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{}}}],["included",{"_index":1084,"title":{},"body":{"index.html":{}}}],["incorrect",{"_index":891,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":182,"title":{"index.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["inicialize",{"_index":815,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["initialstate",{"_index":854,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":190,"title":{"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["injectables",{"_index":217,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"overview.html":{}}}],["inline",{"_index":661,"title":{},"body":{"components/HomePageComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["inprove",{"_index":1052,"title":{},"body":{"index.html":{}}}],["inproved",{"_index":1051,"title":{},"body":{"index.html":{}}}],["input",{"_index":819,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["insert",{"_index":413,"title":{},"body":{"components/EventFormComponent.html":{}}}],["instanceof",{"_index":240,"title":{},"body":{"injectables/ErrorService.html":{}}}],["instanze",{"_index":710,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["interface",{"_index":272,"title":{"interfaces/Event.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/User.html":{}},"body":{"interfaces/Event.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":273,"title":{},"body":{"interfaces/Event.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isauthenticated",{"_index":482,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["isn't",{"_index":933,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["isowner",{"_index":294,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["isowner(event",{"_index":314,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["issues",{"_index":1103,"title":{},"body":{"index.html":{}}}],["italic",{"_index":576,"title":{},"body":{"components/EventListComponent.html":{}}}],["item",{"_index":561,"title":{},"body":{"components/EventListComponent.html":{}}}],["items",{"_index":565,"title":{},"body":{"components/EventListComponent.html":{}}}],["jeopardize",{"_index":1078,"title":{},"body":{"index.html":{}}}],["json.parse(localstorage.getitem('user",{"_index":449,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/ProfileDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["json.parse(userstring",{"_index":340,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["json.stringify(r",{"_index":904,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(us[0",{"_index":911,"title":{},"body":{"injectables/UserService.html":{}}}],["justify",{"_index":371,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["karma",{"_index":1017,"title":{},"body":{"index.html":{}}}],["kinds",{"_index":228,"title":{},"body":{"injectables/ErrorService.html":{}}}],["known",{"_index":1070,"title":{},"body":{"index.html":{}}}],["labs",{"_index":1027,"title":{},"body":{"index.html":{}}}],["later",{"_index":271,"title":{},"body":{"injectables/ErrorService.html":{}}}],["layout",{"_index":520,"title":{},"body":{"components/EventListComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["layout.actions",{"_index":853,"title":{},"body":{"interfaces/State-1.html":{}}}],["layout.get_filtered_events",{"_index":861,"title":{},"body":{"interfaces/State-1.html":{}}}],["layout.get_filtered_events_error",{"_index":864,"title":{},"body":{"interfaces/State-1.html":{}}}],["layout.get_filtered_events_success",{"_index":862,"title":{},"body":{"interfaces/State-1.html":{}}}],["layout.getfilteredevents(filter",{"_index":554,"title":{},"body":{"components/EventListComponent.html":{}}}],["layout/get_filtered_events",{"_index":634,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"miscellaneous/variables.html":{}}}],["layout/get_filtered_events_error",{"_index":638,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"miscellaneous/variables.html":{}}}],["layout/get_filtered_events_success",{"_index":636,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"miscellaneous/variables.html":{}}}],["layouteffects",{"_index":129,"title":{"injectables/LayoutEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/LayoutEffects.html":{},"coverage.html":{}}}],["layoutreducer",{"_index":847,"title":{},"body":{"interfaces/State.html":{}}}],["layoutreducer.reducer",{"_index":850,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["layoutreducer.state",{"_index":842,"title":{},"body":{"interfaces/State.html":{}}}],["lazy",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["left",{"_index":378,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/ToolbarComponent.html":{}}}],["legend",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["length",{"_index":928,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["line",{"_index":535,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["link",{"_index":573,"title":{},"body":{"components/EventListComponent.html":{}}}],["lint",{"_index":1095,"title":{},"body":{"index.html":{}}}],["list",{"_index":479,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{},"index.html":{}}}],["list'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["list.component",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{}}}],["list.component.html",{"_index":481,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.scss",{"_index":480,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts",{"_index":477,"title":{},"body":{"components/EventListComponent.html":{},"coverage.html":{}}}],["list.component.ts:112",{"_index":498,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:42",{"_index":507,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:43",{"_index":508,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:44",{"_index":509,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:45",{"_index":511,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:46",{"_index":512,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:47",{"_index":492,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:52",{"_index":513,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:55",{"_index":502,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:79",{"_index":504,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:86",{"_index":493,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:96",{"_index":495,"title":{},"body":{"components/EventListComponent.html":{}}}],["list/event",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"coverage.html":{}}}],["little",{"_index":1040,"title":{},"body":{"index.html":{}}}],["loadchildren",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/State-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":759,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["localstorage",{"_index":317,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["localstorage.getitem('user",{"_index":339,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["localstorage.setitem('user",{"_index":903,"title":{},"body":{"injectables/UserService.html":{}}}],["located",{"_index":1109,"title":{},"body":{"index.html":{}}}],["location",{"_index":280,"title":{},"body":{"interfaces/Event.html":{},"components/EventFormComponent.html":{}}}],["locationvalue",{"_index":432,"title":{},"body":{"components/EventFormComponent.html":{}}}],["log",{"_index":762,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["logged",{"_index":187,"title":{"classes/Logged.html":{}},"body":{"guards/AuthGuard.html":{},"classes/Logged.html":{},"interfaces/State-2.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["login(user",{"_index":888,"title":{},"body":{"injectables/UserService.html":{}}}],["login.actions",{"_index":867,"title":{},"body":{"interfaces/State-2.html":{}}}],["login.logged",{"_index":868,"title":{},"body":{"interfaces/State-2.html":{}}}],["login.logged(false",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["login.logged(true",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["login/logged",{"_index":704,"title":{},"body":{"classes/Logged.html":{},"miscellaneous/variables.html":{}}}],["loginform",{"_index":707,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginform.get('email",{"_index":724,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginform.get('password",{"_index":726,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginform.get(\\'email",{"_index":737,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginform.get(\\'password",{"_index":739,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginformcomponent",{"_index":78,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginmodule",{"_index":740,"title":{"modules/LoginModule.html":{}},"body":{"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["loginreducer",{"_index":845,"title":{},"body":{"interfaces/State.html":{}}}],["loginreducer.reducer",{"_index":849,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["loginreducer.state",{"_index":843,"title":{},"body":{"interfaces/State.html":{}}}],["loginsuscription",{"_index":875,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["logo",{"_index":663,"title":{},"body":{"components/HomePageComponent.html":{}}}],["logout",{"_index":756,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["m.loginmodule",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilemodule",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.signupmodule",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["management",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["map",{"_index":700,"title":{},"body":{"injectables/LayoutEffects.html":{},"injectables/UserService.html":{}}}],["map(r",{"_index":902,"title":{},"body":{"injectables/UserService.html":{}}}],["map(res",{"_index":692,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["map(us",{"_index":907,"title":{},"body":{"injectables/UserService.html":{}}}],["margin",{"_index":365,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["mark",{"_index":505,"title":{},"body":{"components/EventListComponent.html":{}}}],["matbuttonmodule",{"_index":788,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":792,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":598,"title":{},"body":{"injectables/EventService.html":{}}}],["matcheckboxmodule",{"_index":803,"title":{},"body":{"modules/SharedModule.html":{}}}],["matching",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mateo",{"_index":1117,"title":{},"body":{"index.html":{}}}],["material",{"_index":783,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":796,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":799,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":790,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidetogglemodule",{"_index":801,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattablemodule",{"_index":794,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":786,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":368,"title":{},"body":{"components/EventDetailComponent.html":{},"components/HomePageComponent.html":{},"injectables/ValidateFormService.html":{}}}],["md",{"_index":559,"title":{},"body":{"components/EventListComponent.html":{}}}],["media(max",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{}}}],["message",{"_index":264,"title":{},"body":{"injectables/ErrorService.html":{},"components/HomePageComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["messages",{"_index":1035,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["methods",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["min",{"_index":773,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/ValidateFormService.html":{}}}],["miscellaneous",{"_index":981,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":522,"title":{},"body":{"components/EventListComponent.html":{}}}],["models/event.model",{"_index":326,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"interfaces/State-1.html":{}}}],["models/user.model",{"_index":327,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":93,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["modules",{"_index":95,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1074,"title":{},"body":{"index.html":{}}}],["more",{"_index":1080,"title":{},"body":{"index.html":{}}}],["morillas",{"_index":1114,"title":{},"body":{"index.html":{}}}],["msgs",{"_index":708,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["myeventschange",{"_index":488,"title":{},"body":{"components/EventListComponent.html":{}}}],["name",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":999,"title":{},"body":{"index.html":{}}}],["need",{"_index":500,"title":{},"body":{"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["network",{"_index":244,"title":{},"body":{"injectables/ErrorService.html":{}}}],["new",{"_index":553,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":534,"title":{},"body":{"components/EventListComponent.html":{}}}],["ng",{"_index":996,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{}}}],["ngondestroy",{"_index":489,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["ngoninit",{"_index":295,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["ngrx/effects",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"injectables/LayoutEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"components/ProfileDetailComponent.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["none",{"_index":382,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["npm",{"_index":1066,"title":{},"body":{"index.html":{}}}],["null",{"_index":855,"title":{},"body":{"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":923,"title":{},"body":{"injectables/ValidateFormService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":262,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["obtain",{"_index":494,"title":{},"body":{"components/EventListComponent.html":{}}}],["occurred",{"_index":245,"title":{},"body":{"injectables/ErrorService.html":{}}}],["oftype",{"_index":698,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["oftype('layout/get_filtered_events",{"_index":689,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["ondestroy",{"_index":478,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["oninit",{"_index":285,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["onselectevent",{"_index":490,"title":{},"body":{"components/EventListComponent.html":{}}}],["onselectevent(event",{"_index":503,"title":{},"body":{"components/EventListComponent.html":{}}}],["onsubmit",{"_index":406,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["opacity",{"_index":528,"title":{},"body":{"components/EventListComponent.html":{}}}],["open",{"_index":652,"title":{},"body":{"components/HomePageComponent.html":{}}}],["openanthon",{"_index":1028,"title":{},"body":{"index.html":{}}}],["openathons",{"_index":659,"title":{},"body":{"components/HomePageComponent.html":{}}}],["optimization",{"_index":1090,"title":{},"body":{"index.html":{}}}],["option",{"_index":880,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{}}}],["others",{"_index":231,"title":{},"body":{"injectables/ErrorService.html":{}}}],["out",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["overview",{"_index":1123,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":318,"title":{},"body":{"components/EventDetailComponent.html":{},"index.html":{}}}],["p",{"_index":675,"title":{},"body":{"components/HomePageComponent.html":{}}}],["package",{"_index":968,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":388,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["page",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["page'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["page.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":650,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.scss",{"_index":649,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":648,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:11",{"_index":651,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page/home",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["pagenotfound",{"_index":752,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["pagenotfoundcomponent",{"_index":79,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":238,"title":{},"body":{"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["param_id",{"_index":290,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["parameter",{"_index":305,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{}}}],["passed",{"_index":304,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["password",{"_index":717,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["pasword",{"_index":826,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["path",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{}}}],["pathmatch",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":629,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{}}}],["performance",{"_index":1057,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":614,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{}}}],["pitzalis",{"_index":1113,"title":{},"body":{"index.html":{}}}],["pixabay.com",{"_index":1048,"title":{},"body":{"index.html":{}}}],["please",{"_index":268,"title":{},"body":{"injectables/ErrorService.html":{}}}],["post(environment.apiurl",{"_index":620,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{}}}],["private",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["problems",{"_index":1094,"title":{},"body":{"index.html":{}}}],["prod",{"_index":1008,"title":{},"body":{"index.html":{}}}],["production",{"_index":1010,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["profiledetailcomponent",{"_index":82,"title":{"components/ProfileDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilemodule",{"_index":776,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["project",{"_index":988,"title":{},"body":{"index.html":{}}}],["properti",{"_index":896,"title":{},"body":{"injectables/UserService.html":{}}}],["properties",{"_index":276,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["property",{"_index":309,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["providers",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["public",{"_index":219,"title":{},"body":{"injectables/ErrorService.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["put(`${environment.apiurl}events/${event.id",{"_index":621,"title":{},"body":{"injectables/EventService.html":{}}}],["radius",{"_index":397,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["random",{"_index":311,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{}}}],["reactive",{"_index":414,"title":{},"body":{"components/EventFormComponent.html":{},"index.html":{}}}],["reactiveformsmodule",{"_index":785,"title":{},"body":{"modules/SharedModule.html":{}}}],["readonly",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["redesign",{"_index":1039,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirectto",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reducer",{"_index":963,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":857,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["reducers",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":1002,"title":{},"body":{"index.html":{}}}],["renamed",{"_index":1054,"title":{},"body":{"index.html":{}}}],["report",{"_index":1088,"title":{},"body":{"index.html":{}}}],["represent",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["required",{"_index":926,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["res",{"_index":693,"title":{},"body":{"injectables/LayoutEffects.html":{},"components/LoginFormComponent.html":{}}}],["res.email",{"_index":719,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["reset",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["resources",{"_index":1044,"title":{},"body":{"index.html":{}}}],["response",{"_index":253,"title":{},"body":{"injectables/ErrorService.html":{}}}],["result",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":604,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["retry(3",{"_index":615,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["return",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["returned",{"_index":251,"title":{},"body":{"injectables/ErrorService.html":{}}}],["returns",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{}}}],["rgba(255,255,255,0.9",{"_index":730,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["right",{"_index":375,"title":{},"body":{"components/EventDetailComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["root'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["route",{"_index":299,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["router",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["routermodule",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{}}}],["routermodule.forchild(routes",{"_index":745,"title":{},"body":{"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{}}}],["routermodule.forroot(routes",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":144,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"routes.html":{}}}],["routing",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":564,"title":{},"body":{"components/EventListComponent.html":{}}}],["rule",{"_index":1083,"title":{},"body":{"index.html":{}}}],["run",{"_index":995,"title":{},"body":{"index.html":{}}}],["running",{"_index":1011,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":237,"title":{},"body":{"injectables/ErrorService.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":605,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{}}}],["same",{"_index":308,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["save",{"_index":463,"title":{},"body":{"components/EventFormComponent.html":{},"injectables/EventService.html":{}}}],["scratch",{"_index":1021,"title":{},"body":{"index.html":{}}}],["screen",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{}}}],["section",{"_index":669,"title":{},"body":{"components/HomePageComponent.html":{}}}],["see",{"_index":1022,"title":{},"body":{"index.html":{}}}],["select",{"_index":514,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["selected",{"_index":506,"title":{},"body":{"components/EventListComponent.html":{}}}],["selectedevent",{"_index":483,"title":{},"body":{"components/EventListComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["serve",{"_index":997,"title":{},"body":{"index.html":{}}}],["server",{"_index":994,"title":{},"body":{"index.html":{}}}],["service",{"_index":610,"title":{},"body":{"injectables/EventService.html":{}}}],["service.ts",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":208,"title":{},"body":{"modules/CoreModule.html":{},"components/EventListComponent.html":{}}}],["set",{"_index":895,"title":{},"body":{"injectables/UserService.html":{}}}],["setuser",{"_index":884,"title":{},"body":{"injectables/UserService.html":{}}}],["seven",{"_index":1026,"title":{},"body":{"index.html":{}}}],["sevices",{"_index":216,"title":{},"body":{"modules/CoreModule.html":{}}}],["shadow",{"_index":381,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["shadowed",{"_index":536,"title":{},"body":{"components/EventListComponent.html":{}}}],["shared",{"_index":807,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/shared.module",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{}}}],["shared/styles/colors",{"_index":464,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["shared/styles/variables",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["sharedmodule",{"_index":108,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":820,"title":{},"body":{"components/SignupFormComponent.html":{},"index.html":{}}}],["shown",{"_index":1037,"title":{},"body":{"index.html":{}}}],["showpassword",{"_index":812,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["showpassword(showpassword",{"_index":817,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["side",{"_index":243,"title":{},"body":{"injectables/ErrorService.html":{},"index.html":{}}}],["sign",{"_index":731,"title":{},"body":{"components/LoginFormComponent.html":{},"injectables/UserService.html":{}}}],["signup",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["signup(user",{"_index":897,"title":{},"body":{"injectables/UserService.html":{}}}],["signupform",{"_index":811,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupform.get('email",{"_index":831,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupform.get('password",{"_index":832,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupform.get(\\'email",{"_index":834,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupform.get(\\'password",{"_index":835,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupformcomponent",{"_index":84,"title":{"components/SignupFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupmodule",{"_index":836,"title":{"modules/SignupModule.html":{}},"body":{"modules/SignupModule.html":{},"modules.html":{},"overview.html":{}}}],["size",{"_index":358,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{}}}],["slidemyevents",{"_index":484,"title":{},"body":{"components/EventListComponent.html":{}}}],["sm",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{}}}],["smells",{"_index":1098,"title":{},"body":{"index.html":{}}}],["solid",{"_index":567,"title":{},"body":{"components/EventListComponent.html":{}}}],["solvable",{"_index":1073,"title":{},"body":{"index.html":{}}}],["sonarqube",{"_index":1067,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"index.html":{}}}],["src/.../app.store.ts",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../layout.actions.ts",{"_index":1128,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../layout.redux.ts",{"_index":983,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../login.actions.ts",{"_index":1129,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../login.redux.ts",{"_index":984,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.store.ts",{"_index":841,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/auth",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/constants",{"_index":943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/core.module.ts",{"_index":203,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/error.service.ts",{"_index":218,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["src/app/core/error.service.ts:18",{"_index":224,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/core/error.service.ts:9",{"_index":221,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/core/event.service.ts",{"_index":582,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{}}}],["src/app/core/event.service.ts:109",{"_index":597,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:14",{"_index":588,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:23",{"_index":595,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:39",{"_index":594,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:55",{"_index":592,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:73",{"_index":590,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:91",{"_index":600,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/images.service.ts",{"_index":679,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["src/app/core/images.service.ts:12",{"_index":680,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/app/core/images.service.ts:21",{"_index":681,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/app/core/user.service.ts",{"_index":882,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/user.service.ts:15",{"_index":885,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:22",{"_index":899,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:29",{"_index":898,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:53",{"_index":889,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:74",{"_index":892,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:82",{"_index":886,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:90",{"_index":893,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/validate",{"_index":915,"title":{},"body":{"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["src/app/events/event",{"_index":283,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"coverage.html":{}}}],["src/app/events/events.module.ts",{"_index":626,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/home",{"_index":647,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["src/app/login/login",{"_index":705,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/login/login.module.ts",{"_index":744,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/app/models/event.model.ts",{"_index":274,"title":{},"body":{"interfaces/Event.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts",{"_index":881,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/page",{"_index":746,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile",{"_index":753,"title":{},"body":{"components/ProfileDetailComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.module.ts",{"_index":780,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":781,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/signup/signup",{"_index":809,"title":{},"body":{"components/SignupFormComponent.html":{},"coverage.html":{}}}],["src/app/signup/signup.module.ts",{"_index":840,"title":{},"body":{"modules/SignupModule.html":{}}}],["src/app/store/layout/layout.actions.ts",{"_index":628,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/layout/layout.actions.ts:10",{"_index":632,"title":{},"body":{"classes/GetFilteredEvents.html":{}}}],["src/app/store/layout/layout.actions.ts:14",{"_index":645,"title":{},"body":{"classes/GetFilteredEventsSuccess.html":{}}}],["src/app/store/layout/layout.actions.ts:16",{"_index":646,"title":{},"body":{"classes/GetFilteredEventsSuccess.html":{}}}],["src/app/store/layout/layout.actions.ts:20",{"_index":643,"title":{},"body":{"classes/GetFilteredEventsError.html":{}}}],["src/app/store/layout/layout.actions.ts:22",{"_index":644,"title":{},"body":{"classes/GetFilteredEventsError.html":{}}}],["src/app/store/layout/layout.actions.ts:8",{"_index":631,"title":{},"body":{"classes/GetFilteredEvents.html":{}}}],["src/app/store/layout/layout.effects.ts",{"_index":685,"title":{},"body":{"injectables/LayoutEffects.html":{},"coverage.html":{}}}],["src/app/store/layout/layout.effects.ts:17",{"_index":697,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["src/app/store/layout/layout.effects.ts:9",{"_index":687,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["src/app/store/layout/layout.redux.ts",{"_index":851,"title":{},"body":{"interfaces/State-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/login/login.actions.ts",{"_index":701,"title":{},"body":{"classes/Logged.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/login/login.actions.ts:6",{"_index":702,"title":{},"body":{"classes/Logged.html":{}}}],["src/app/store/login/login.actions.ts:8",{"_index":703,"title":{},"body":{"classes/Logged.html":{}}}],["src/app/store/login/login.redux.ts",{"_index":866,"title":{},"body":{"interfaces/State-2.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/toolbar/toolbar.component.ts",{"_index":869,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/toolbar/toolbar.component.ts:15",{"_index":878,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/toolbar/toolbar.component.ts:16",{"_index":877,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/toolbar/toolbar.component.ts:17",{"_index":873,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/toolbar/toolbar.component.ts:22",{"_index":876,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/toolbar/toolbar.component.ts:35",{"_index":874,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":964,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":965,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":986,"title":{"index.html":{}},"body":{}}],["state",{"_index":122,"title":{"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{}},"body":{"modules/AppModule.html":{},"components/EventListComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state('void",{"_index":525,"title":{},"body":{"components/EventListComponent.html":{}}}],["state.filteredevents",{"_index":540,"title":{},"body":{"components/EventListComponent.html":{}}}],["state.logged",{"_index":547,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["statements",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":823,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["storage",{"_index":760,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["store",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Event.html":{},"components/EventListComponent.html":{},"components/ProfileDetailComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["store/layout/layout.actions",{"_index":521,"title":{},"body":{"components/EventListComponent.html":{}}}],["store/layout/layout.effects",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["store/layout/layout.redux",{"_index":848,"title":{},"body":{"interfaces/State.html":{}}}],["store/login/login.actions",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["store/login/login.redux",{"_index":846,"title":{},"body":{"interfaces/State.html":{}}}],["stored",{"_index":316,"title":{},"body":{"components/EventDetailComponent.html":{},"index.html":{}}}],["storemodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot(reducers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":282,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/LoginFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":516,"title":{},"body":{"components/EventListComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["subscriptionlayout",{"_index":485,"title":{},"body":{"components/EventListComponent.html":{}}}],["subscriptionlike",{"_index":510,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["subscriptionlogin",{"_index":486,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["subtitle",{"_index":670,"title":{},"body":{"components/HomePageComponent.html":{}}}],["support",{"_index":1118,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1119,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":858,"title":{},"body":{"interfaces/State-1.html":{}}}],["switchmap",{"_index":699,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["switchmap((filter",{"_index":690,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["system",{"_index":764,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["table",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["tech",{"_index":656,"title":{},"body":{"components/HomePageComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["test",{"_index":1014,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1013,"title":{},"body":{"index.html":{}}}],["text",{"_index":390,"title":{},"body":{"components/EventDetailComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["therefore",{"_index":1077,"title":{},"body":{"index.html":{}}}],["this.actions$.pipe",{"_index":688,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["this.addeditform",{"_index":442,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.addeditform.reset",{"_index":452,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.addeditform.value",{"_index":450,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.createform",{"_index":429,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.event",{"_index":333,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["this.event.addedby",{"_index":439,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.date",{"_index":435,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.description",{"_index":437,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.id",{"_index":441,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.location",{"_index":433,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.title",{"_index":431,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.events",{"_index":541,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.events[0",{"_index":543,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.eventservice.addevent(this.event).subscribe((event",{"_index":453,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.eventservice.deleteevent(event.id).subscribe",{"_index":343,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.eventservice.getevent(id).subscribe((event",{"_index":428,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.eventservice.getevent(this.id).subscribe((event",{"_index":332,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.eventservice.getevents().subscribe((events",{"_index":548,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.eventservice.getfilteredevents(filter.payload",{"_index":691,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["this.eventservice.updateevent(this.event).subscribe((event",{"_index":451,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.fb.group",{"_index":443,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.getevent",{"_index":337,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.getevents",{"_index":532,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.getimage",{"_index":331,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.getuser",{"_index":766,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["this.http",{"_index":618,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["this.http.get(`${environment.apiurl}events/${id",{"_index":617,"title":{},"body":{"injectables/EventService.html":{}}}],["this.http.get(`${environment.apiurl}events?${filter",{"_index":622,"title":{},"body":{"injectables/EventService.html":{}}}],["this.http.get(`${environment.apiurl}users?email=${user.email",{"_index":906,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(environment.apiurl",{"_index":613,"title":{},"body":{"injectables/EventService.html":{}}}],["this.id",{"_index":329,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.imagesservice.getimage().subscribe((img",{"_index":334,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.imageurl",{"_index":335,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.isauthenticated",{"_index":546,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["this.loginform",{"_index":714,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.msgs",{"_index":720,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.password.nativeelement.type",{"_index":828,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.route.snapshot.parammap.get(this.param_id",{"_index":427,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.route.snapshot.params[this.param_id",{"_index":330,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.router.navigate(['/events",{"_index":344,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.router.navigate(['/home",{"_index":769,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["this.router.navigate(['/login",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.selectedevent",{"_index":542,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.setuser",{"_index":905,"title":{},"body":{"injectables/UserService.html":{}}}],["this.signupform",{"_index":827,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.signupform.value",{"_index":829,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.slidemyevents",{"_index":550,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.store.dispatch(action",{"_index":555,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.store.dispatch(new",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["this.store.pipe(select('layout')).subscribe((state",{"_index":539,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.store.pipe(select('login')).subscribe((state",{"_index":545,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.store.pipe(select('login')).subscribe(state",{"_index":879,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.subscriptionlayout",{"_index":538,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.subscriptionlayout.unsubscribe",{"_index":556,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.subscriptionlogin",{"_index":544,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.subscriptionlogin.unsubscribe",{"_index":557,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.user",{"_index":767,"title":{},"body":{"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.userservice.checkuser",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{}}}],["this.userservice.login(this.loginform.value).subscribe((res",{"_index":718,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.userservice.logout",{"_index":768,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["this.userservice.signup(this.user).subscribe",{"_index":830,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["throw",{"_index":232,"title":{},"body":{"injectables/ErrorService.html":{}}}],["throwerror",{"_index":236,"title":{},"body":{"injectables/ErrorService.html":{}}}],["throwerror('something",{"_index":265,"title":{},"body":{"injectables/ErrorService.html":{}}}],["title",{"_index":281,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/HomePageComponent.html":{}}}],["titlevalue",{"_index":430,"title":{},"body":{"components/EventFormComponent.html":{}}}],["todo",{"_index":1049,"title":{},"body":{"index.html":{}}}],["toggle",{"_index":497,"title":{},"body":{"components/EventListComponent.html":{},"modules/SharedModule.html":{}}}],["toolbar",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar.component.html",{"_index":871,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":870,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar/toolbar.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbarcomponent",{"_index":86,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":562,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["toro",{"_index":1116,"title":{},"body":{"index.html":{}}}],["trace",{"_index":225,"title":{},"body":{"injectables/ErrorService.html":{}}}],["transform",{"_index":526,"title":{},"body":{"components/EventListComponent.html":{}}}],["transition",{"_index":517,"title":{},"body":{"components/EventListComponent.html":{}}}],["transition(':enter",{"_index":529,"title":{},"body":{"components/EventListComponent.html":{}}}],["translatex",{"_index":527,"title":{},"body":{"components/EventListComponent.html":{}}}],["translatex(0",{"_index":531,"title":{},"body":{"components/EventListComponent.html":{}}}],["transparent",{"_index":384,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["trigger",{"_index":515,"title":{},"body":{"components/EventListComponent.html":{}}}],["trigger('enterstate",{"_index":524,"title":{},"body":{"components/EventListComponent.html":{}}}],["true",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"interfaces/State-1.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":269,"title":{},"body":{"injectables/ErrorService.html":{}}}],["tslib",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":1093,"title":{},"body":{"index.html":{}}}],["tslint:disable",{"_index":533,"title":{},"body":{"components/EventListComponent.html":{}}}],["type",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1126,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unit",{"_index":1012,"title":{},"body":{"index.html":{}}}],["unsplash.com",{"_index":313,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{}}}],["unsubscribe",{"_index":501,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["unsuccessful",{"_index":252,"title":{},"body":{"injectables/ErrorService.html":{}}}],["up",{"_index":732,"title":{},"body":{"components/LoginFormComponent.html":{},"injectables/UserService.html":{}}}],["update",{"_index":601,"title":{},"body":{"injectables/EventService.html":{}}}],["updateevent",{"_index":585,"title":{},"body":{"injectables/EventService.html":{}}}],["updateevent(event",{"_index":599,"title":{},"body":{"injectables/EventService.html":{}}}],["uppercase",{"_index":348,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["us[0",{"_index":912,"title":{},"body":{"injectables/UserService.html":{}}}],["us[0].email",{"_index":908,"title":{},"body":{"injectables/UserService.html":{}}}],["us[0].password",{"_index":909,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":763,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["used",{"_index":275,"title":{},"body":{"interfaces/Event.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{},"interfaces/User.html":{},"index.html":{}}}],["user",{"_index":44,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user.email",{"_index":342,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/ProfileDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["user.id",{"_index":770,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["user.password",{"_index":910,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":210,"title":{},"body":{"modules/CoreModule.html":{}}}],["userdata",{"_index":772,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["usermail",{"_index":551,"title":{},"body":{"components/EventListComponent.html":{}}}],["users",{"_index":901,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":21,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userstring",{"_index":338,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["using",{"_index":1032,"title":{},"body":{"index.html":{}}}],["ux",{"_index":1050,"title":{},"body":{"index.html":{}}}],["valid",{"_index":913,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["validate",{"_index":212,"title":{},"body":{"modules/CoreModule.html":{}}}],["validateformservice",{"_index":202,"title":{"injectables/ValidateFormService.html":{}},"body":{"modules/CoreModule.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"overview.html":{}}}],["validateformservice.geterror('date",{"_index":457,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror('description",{"_index":461,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror('email",{"_index":723,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validateformservice.geterror('location",{"_index":459,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror('password",{"_index":725,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validateformservice.geterror('title",{"_index":455,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror(\\'date",{"_index":471,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror(\\'description",{"_index":475,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror(\\'email",{"_index":736,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validateformservice.geterror(\\'location",{"_index":473,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror(\\'password",{"_index":738,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validateformservice.geterror(\\'title",{"_index":469,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators",{"_index":424,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.email",{"_index":716,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.maxlength(25",{"_index":446,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators.maxlength(400",{"_index":448,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators.minlength(10",{"_index":447,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators.minlength(2",{"_index":445,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators.required",{"_index":444,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["value",{"_index":324,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["variable",{"_index":537,"title":{},"body":{"components/EventListComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1130,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":991,"title":{},"body":{"index.html":{}}}],["via",{"_index":1016,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":825,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["viewchild('password",{"_index":822,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["void",{"_index":306,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["vulnerabilities",{"_index":1064,"title":{},"body":{"index.html":{}}}],["vulnerability",{"_index":1071,"title":{},"body":{"index.html":{}}}],["weight",{"_index":574,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["went",{"_index":258,"title":{},"body":{"injectables/ErrorService.html":{}}}],["white",{"_index":467,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{}}}],["width",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["wrap",{"_index":771,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["wrong",{"_index":259,"title":{},"body":{"injectables/ErrorService.html":{}}}],["y",{"_index":1061,"title":{},"body":{"index.html":{}}}],["zero",{"_index":1063,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as login from './store/login/login.actions';\nimport { UserService } from './core/user.service';\n\n@Component({\n  selector: 'eui-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n/**\n * Class that represent the main component in the app\n */\nexport class AppComponent {\n\n  constructor(\n    private readonly userService: UserService,\n    private readonly store: Store\n  ) {\n    /**\n     * check user in store\n     */\n    this.userService.checkUser() ? this.store.dispatch(new login.Logged(true))\n                  : this.store.dispatch(new login.Logged(false));\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import './shared/styles/variables';\n\n\n.container {\n  width: 100%;\n  height: 100%;\n}\n\n.content {\n  height: calc(100% - 64px);\n\n  @media(max-width: $screen-sm) {\n    height: calc(100% - 56px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HomePageComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// Modules\nimport { CoreModule } from './core/core.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\nimport { EventsModule } from './events/events.module';\n\n// State Management\nimport { StoreModule } from '@ngrx/store';\nimport { reducers } from './app.store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { LayoutEffects } from './store/layout/layout.effects';\n\n// Components\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    ToolbarComponent,\n    PageNotFoundComponent,\n  ],\n  imports: [\n    CoreModule,\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    EventsModule,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([LayoutEffects])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n/**\n * General Module for the app\n */\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from './core/auth-guard.service';\n\n/**\n * Components\n */\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { EventListComponent } from './events/event-list/event-list.component';\nimport { EventDetailComponent } from './events/event-detail/event-detail.component';\nimport { EventFormComponent } from './events/event-form/event-form.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n/**\n * router with lazy loading\n */\nconst routes: Routes = [\n  {\n    path: 'home',\n    component: HomePageComponent,\n  },\n  {\n    path: 'events',\n    component: EventListComponent,\n  },\n  {\n    path: 'profile',\n    loadChildren: () => \"import('./profile/profile.module').then(m => m.ProfileModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./login/login.module').then(m => m.LoginModule)\",\n  },\n  {\n    path: 'signup',\n    loadChildren: () => \"import('./signup/signup.module').then(m => m.SignupModule)\",\n  },\n  {\n    path: 'eventDetails/:id',\n    component: EventDetailComponent,\n  },\n  {\n    path: 'eventForm/:id',\n    component: EventFormComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard],\n})\n/**\n * Routing Module for the app\n */\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth-guard.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/auth-guard.service.ts:16\n                \n            \n\n\n            \n                \n                    Check if user is logged.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UserService } from '../core/user.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private readonly router: Router,\n    private readonly userService: UserService\n  ) {}\n\n  /**\n   * Check if user is logged.\n   */\n  canActivate(): boolean {\n    if (this.userService.checkUser()) {\n      return true;\n    } else {\n      /**\n       * when user not login, redirect to login\n       */\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nErrorService\n\nErrorService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorService->CoreModule\n\n\n\n\n\nEventService\n\nEventService\n\nCoreModule -->\n\nEventService->CoreModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nCoreModule -->\n\nImagesService->CoreModule\n\n\n\n\n\nUserService\n\nUserService\n\nCoreModule -->\n\nUserService->CoreModule\n\n\n\n\n\nValidateFormService\n\nValidateFormService\n\nCoreModule -->\n\nValidateFormService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ErrorService\n                        \n                        \n                            EventService\n                        \n                        \n                            ImagesService\n                        \n                        \n                            UserService\n                        \n                        \n                            ValidateFormService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\n/**\n * Services\n */\nimport { EventService } from './event.service';\nimport { UserService } from './user.service';\nimport { ImagesService } from './images.service';\nimport { ValidateFormService } from './validate-form.service';\nimport { ErrorService } from './error.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n  ],\n  providers: [\n    ErrorService,\n    EventService,\n    UserService,\n    ImagesService,\n    ValidateFormService\n  ],\n})\n/**\n * Module for core sevices\n */\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/error.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/error.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error.service.ts:18\n                \n            \n\n\n            \n                \n                    Trace in the console different kinds of errors (Http or others) and then throw a generic error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The HttpErrorResponse error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { throwError } from 'rxjs';\n\n\n@Injectable()\nexport class ErrorService {\n  constructor(\n  ) {}\n\n  /**\n   * Trace in the console different kinds of errors (Http or others) and then throw a generic error.\n   *\n   * @param error The HttpErrorResponse error\n   */\n  public handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      /**\n       * A client-side or network error occurred. Handle it accordingly.\n       */\n      console.error('An error occurred:', error.error.message);\n    } else {\n      /**\n       * The backend returned an unsuccessful response code.\n       * The response body may contain clues as to what went wrong.\n       */\n      console.error(\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n      );\n    }\n    /**\n     * return an observable with a user-facing error message\n     */\n    return throwError('Something bad happened; please try again later.');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Event.html":{"url":"interfaces/Event.html","title":"interface - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.model.ts\n        \n\n            \n                Description\n            \n            \n                interface used to store an event\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addedBy\n                                \n                                \n                                        date\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addedBy\n                                    \n                                \n                                \n                                    \n                                        addedBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Event {\n  id: string;\n  title: string;\n  location: string;\n  date: Date;\n  description: string;\n  addedBy: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventDetailComponent.html":{"url":"components/EventDetailComponent.html","title":"component - EventDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/event-detail/event-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-event-detail\n            \n\n            \n                styleUrls\n                ./event-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./event-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                PARAM_ID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteEvent\n                            \n                            \n                                getEvent\n                            \n                            \n                                getImage\n                            \n                            \n                                isOwner\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, eventService: EventService, userService: UserService, imagesService: ImagesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/events/event-detail/event-detail.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imagesService\n                                                  \n                                                        \n                                                                        ImagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:77\n                \n            \n\n\n            \n                \n                    Delete the event, if exists, with the ID passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvent\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:41\n                \n            \n\n\n            \n                \n                    Return the event with the ID is the same that id property\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \ngetImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:50\n                \n            \n\n\n            \n                \n                    Return a random image from unsplash.com\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOwner\n                        \n                        \n                    \n                \n            \n            \n                \nisOwner(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:62\n                \n            \n\n\n            \n                \n                    Return true if user stored in localStorage is the owner of the event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-detail/event-detail.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-detail/event-detail.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-detail/event-detail.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            PARAM_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'id'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-detail/event-detail.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventService } from '../../core/event.service';\nimport { Event } from '../../models/event.model';\nimport { UserService } from '../../core/user.service';\nimport { User } from '../../models/user.model';\nimport { ImagesService } from '../../core/images.service';\n\n@Component({\n  selector: 'eui-event-detail',\n  templateUrl: './event-detail.component.html',\n  styleUrls: ['./event-detail.component.scss']\n})\n/**\n * Class that represent the event detail component in the app\n */\nexport class EventDetailComponent implements OnInit {\n\n  event: Event;\n  id: string;\n  imageUrl: string;\n\n  private readonly PARAM_ID = 'id';\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly eventService: EventService,\n    private readonly userService: UserService,\n    private readonly imagesService: ImagesService\n  ) {}\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params[this.PARAM_ID];\n    this.getImage();\n  }\n\n  /**\n   * Return the event with the ID is the same that id property\n   */\n  getEvent() {\n    this.eventService.getEvent(this.id).subscribe((event: Event) => {\n      this.event = event;\n    });\n  }\n\n  /**\n   * Return a random image from unsplash.com\n   */\n  getImage() {\n    this.imagesService.getImage().subscribe((img) => {\n      this.imageUrl = img.urls.small;\n      this.getEvent();\n    });\n  }\n\n  /**\n   * Return true if user stored in localStorage is the owner of the event\n   *\n   * @param event Event to check\n   */\n  isOwner(event: Event) {\n    let isOwner = false;\n    const userString = localStorage.getItem('user');\n    if (userString) {\n      const user: User = JSON.parse(userString);\n      isOwner = event.addedBy === user.email;\n    }\n    return isOwner;\n  }\n\n  /**\n   * Delete the event, if exists, with the ID passed as parameter\n   *\n   * @param id  Event ID\n   */\n  deleteEvent(event: Event) {\n    if (this.userService.checkUser()) {\n      this.eventService.deleteEvent(event.id).subscribe(() => {\n        this.router.navigate(['/events']);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n      Event details\n  \n\n  \n    \n      \n          \n            Delete Event\n          \n\n          \n            Edit Event\n        \n      \n    \n    \n      \n        \n          {{ event.title | uppercase }}\n        \n        \n          {{ event.location }} - {{ event.date | date: \"dd/MM/yyyy\" }}\n        \n        \n            {{ event.addedBy}}\n        \n      \n\n      \n        \n      \n\n      \n        {{ event.description }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./event-detail.component.scss\n                \n                @import '../../shared/styles/variables';\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt2.jpg', center, cover);\n  background-size: cover;\n}\n\n.event-card-details {\n  display: flex;\n  flex: 1;\n  flex-flow: column;\n  margin: 0 auto;\n  max-width: 800px;\n}\n\n.edit-event-btn {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 2rem;\n}\n\n.delete-btn {\n  margin-right: 6px;\n}\n\n.button-edit {\n  margin-left: 10px;\n}\n\n.event {\n  box-shadow: none;\n  background-color: transparent;\n  font-family: $acn-font;\n  padding: 0;\n  margin: 0 auto;\n\n  .header {\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    margin-bottom: 1rem;\n\n    .title h3 {\n      margin: 0;\n    }\n  }\n}\n\n.img {\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\nimg {\n  width: 75%;\n  margin: 0;\n  border-radius: 4px;\n}\n\n.description {\n  padding: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Event details                                    Delete Event                                Edit Event                                              {{ event.title | uppercase }}                          {{ event.location }} - {{ event.date | date: \"dd/MM/yyyy\" }}                            {{ event.addedBy}}                                                {{ event.description }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventFormComponent.html":{"url":"components/EventFormComponent.html","title":"component - EventFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/event-form/event-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-event-form\n            \n\n            \n                styleUrls\n                ./event-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./event-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addEditForm\n                            \n                            \n                                event\n                            \n                            \n                                    Private\n                                    Readonly\n                                PARAM_ID\n                            \n                            \n                                    Public\n                                    Readonly\n                                validateFormService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validateFormService: ValidateFormService, fb: FormBuilder, eventService: EventService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/events/event-form/event-form.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validateFormService\n                                                  \n                                                        \n                                                                        ValidateFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-form/event-form.component.ts:49\n                \n            \n\n\n            \n                \n                    Crate the form used to insert or edit events\nreactive form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-form/event-form.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-form/event-form.component.ts:72\n                \n            \n\n\n            \n                \n                    Fired when user click on \"Create\" button of the form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEditForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-form/event-form.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-form/event-form.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            PARAM_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'id'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-form/event-form.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            validateFormService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidateFormService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-form/event-form.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Event } from '../../models/event.model';\nimport { User } from '../../models/user.model';\nimport { ValidateFormService } from '../../core/validate-form.service';\nimport { EventService } from '../../core/event.service';\n\n@Component({\n  selector: 'eui-event-form',\n  templateUrl: './event-form.component.html',\n  styleUrls: ['./event-form.component.scss']\n})\n/**\n * Class that represent the event form component in the app\n */\nexport class EventFormComponent implements OnInit {\n\n  addEditForm: FormGroup;\n  event: Event;\n\n  private readonly PARAM_ID = 'id';\n\n  constructor(\n    public readonly validateFormService: ValidateFormService,\n    private readonly fb: FormBuilder,\n    private readonly eventService: EventService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get(this.PARAM_ID);\n\n    if (id) {\n      this.eventService.getEvent(id).subscribe((event: Event) => {\n        this.event = event;\n        this.createForm();\n      });\n    } else {\n      this.createForm();\n    }\n  }\n\n  /**\n   * Crate the form used to insert or edit events\n   * reactive form\n   */\n  createForm() {\n    const titleValue = this.event ? this.event.title : '';\n    const locationValue = this.event ? this.event.location : '';\n    const dateValue = this.event ? this.event.date : '';\n    const descriptionValue = this.event ? this.event.description : '';\n    const addedByValue = this.event ? this.event.addedBy : '';\n    const idValue = this.event ? this.event.id : '';\n\n    this.addEditForm = this.fb.group({\n      title: [titleValue, [Validators.required]],\n      location: [locationValue, [Validators.required, Validators.minLength(2),\n                                  Validators.maxLength(25)]],\n      date: [dateValue, [Validators.required]],\n      description: [descriptionValue, [Validators.required, Validators.minLength(10),\n                                        Validators.maxLength(400)]],\n      addedBy: [addedByValue, []],\n      id: [idValue, []],\n    });\n  }\n\n  /**\n   * Fired when user click on \"Create\" button of the form\n   */\n  onSubmit() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    this.event = this.addEditForm.value;\n    this.event.addedBy = user.email;\n    if (this.event.id) {\n      this.eventService.updateEvent(this.event).subscribe((event: Event) => {\n        this.addEditForm.reset();\n        this.router.navigate(['/events']);\n      });\n    } else {\n      this.eventService.addEvent(this.event).subscribe((event: Event) => {\n        this.addEditForm.reset();\n        this.router.navigate(['/events']);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      Add Event\n    \n\n    \n      \n        \n          \n          \n            {{validateFormService.getError('Title', addEditForm.get('title'))}}\n          \n        \n\n        \n          \n          \n            {{validateFormService.getError('Date', addEditForm.get('date'))}}\n          \n        \n        \n        \n          \n          \n            {{validateFormService.getError('Location', addEditForm.get('location'))}}\n          \n        \n\n        \n          \n          \n            {{validateFormService.getError('Description', addEditForm.get('description'))}}\n          \n        \n\n        \n          \n            Save\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./event-form.component.scss\n                \n                // @import '../../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt4.jpg', center, cover);\n  background-size: cover;\n}\n\n.form {\n  display: flex;\n  justify-content: center;\n}\n\nform {\n  display: flex;\n  flex-flow: column;\n  width: 50%;\n  font-family: $acn-font;\n  background-color: white;\n  padding: 20px;\n  border-radius: 4px;\n}\n\n.save-btn {\n  display: flex;\n  justify-content: flex-end;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Add Event                                                      {{validateFormService.getError(\\'Title\\', addEditForm.get(\\'title\\'))}}                                                          {{validateFormService.getError(\\'Date\\', addEditForm.get(\\'date\\'))}}                                                                  {{validateFormService.getError(\\'Location\\', addEditForm.get(\\'location\\'))}}                                                          {{validateFormService.getError(\\'Description\\', addEditForm.get(\\'description\\'))}}                                                Save                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventListComponent.html":{"url":"components/EventListComponent.html","title":"component - EventListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/event-list/event-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-event-list\n            \n\n            \n                styleUrls\n                ./event-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./event-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                selectedEvent\n                            \n                            \n                                slideMyEvents\n                            \n                            \n                                subscriptionLayout\n                            \n                            \n                                subscriptionLogin\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEvents\n                            \n                            \n                                myEventsChange\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/events/event-list/event-list.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:86\n                \n            \n\n\n            \n                \n                    Obtain the event list\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            myEventsChange\n                        \n                        \n                    \n                \n            \n            \n                \nmyEventsChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:96\n                \n            \n\n\n            \n                \n                    Fired when the \"my events\" filter is toggle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:112\n                \n            \n\n\n            \n                \n                    After destroy the component we need unsubscribe.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelectEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonSelectEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:79\n                \n            \n\n\n            \n                \n                    Mark the event as selected\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideMyEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionLayout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubscriptionLike\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubscriptionLike\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { SubscriptionLike } from 'rxjs';\nimport { trigger, style, state, transition, animate } from '@angular/animations';\nimport * as layout from '../../store/layout/layout.actions';\n\n/**\n * models\n */\nimport { Event } from '../../models/event.model';\nimport { User } from '../../models/user.model';\n\n/**\n * services\n */\nimport { UserService } from '../../core/user.service';\nimport { EventService } from '../../core/event.service';\n\n@Component({\n  selector: 'eui-event-list',\n  templateUrl: './event-list.component.html',\n  styleUrls: ['./event-list.component.scss'],\n  animations: [\n    trigger('enterState', [\n      state('void', style({\n        transform: 'translateX(-100%)',\n        opacity: 0,\n      })),\n      transition(':enter', [\n        animate(300, style({\n          transform: 'translateX(0)',\n          opacity: 1,\n        }))\n      ]),\n    ])\n  ]\n})\n/**\n * Class that represent the Event list component in the app\n */\nexport class EventListComponent implements OnInit, OnDestroy {\n  events: Event[];\n  selectedEvent: Event;\n  slideMyEvents: boolean;\n  subscriptionLayout: SubscriptionLike;\n  subscriptionLogin: SubscriptionLike;\n  isAuthenticated: boolean;\n\n  constructor(\n    private readonly eventService: EventService,\n    private readonly store: Store,\n    public userService: UserService,\n  ) {}\n\n  ngOnInit() {\n    this.getEvents();\n\n    // tslint:disable-next-line: no-shadowed-variable\n    this.subscriptionLayout = this.store.pipe(select('layout')).subscribe((state) => {\n      if (state && state.filteredEvents) {\n        this.events = state.filteredEvents;\n        this.selectedEvent = this.events[0];\n      }\n    });\n\n    // tslint:disable-next-line: no-shadowed-variable\n    this.subscriptionLogin = this.store.pipe(select('login')).subscribe((state) => {\n      if (state) {\n        this.isAuthenticated = state.logged;\n      }\n    });\n  }\n\n  /**\n   * Mark the event as selected\n   *\n   * @param event The event\n   */\n  onSelectEvent(event: Event) {\n    this.selectedEvent = event;\n  }\n\n  /**\n   * Obtain the event list\n   */\n  getEvents() {\n    this.eventService.getEvents().subscribe((events: Event[]) => {\n      this.events = events;\n      this.selectedEvent = events[0];\n    });\n  }\n\n  /**\n   * Fired when the \"my events\" filter is toggle\n   */\n  myEventsChange() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n\n    if (this.slideMyEvents && user) {\n      const userMail = user.email;\n      const filter = 'addedBy=' + userMail;\n      const action = new layout.GetFilteredEvents(filter);\n      this.store.dispatch(action);\n    } else {\n      this.getEvents();\n    }\n  }\n\n  /**\n   * After destroy the component we need unsubscribe.\n   */\n  ngOnDestroy() {\n    this.subscriptionLayout.unsubscribe();\n    this.subscriptionLogin.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    Events\n  \n\n  \n    \n      \n        Add Event\n      \n      \n        \n          \n              Filter:\n              \n                My events\n              \n          \n        \n      \n    \n    \n      \n\n        \n            \n              \n                  {{ event.title | uppercase }}\n              \n              \n                {{ event.location }} - {{ event.date | date: \"dd/MM/yyyy\" }}\n              \n              \n                  {{ event.addedBy}}\n              \n            \n            \n              {{ event.description }}\n            \n        \n\n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./event-list.component.scss\n                \n                @import '../../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt2.jpg', center, cover);\n  background-size: cover;\n}\n\n.content {\n  width: 70%;\n  margin: 0 auto;\n\n  @media(max-width: $screen-md) {\n    width: 80%;\n  }\n\n  @media(max-width: $screen-sm) {\n    width: 100%;\n  }\n\n  .item {\n    margin-top: 2rem;\n  }\n\n  .control {\n    display: flex;\n    flex-flow: row;\n    align-items: flex-end;\n    border-bottom: 1px solid $gray;\n    padding-bottom: 0.8rem;\n    color: white;\n  }\n\n  button {\n    margin-left: auto;\n  }\n\n  .events {\n    width: 90%;\n    margin: 4rem auto;\n\n    .event {\n      margin-bottom: 1.5rem;\n    }\n\n    .link-event {\n      font-weight: 900;\n      margin: 0 2rem 0 0;\n    }\n\n    .date {\n      font-style: italic;\n      font-size: 14px;\n    }\n\n    .bottom {\n      font-weight: 300;\n      margin-top: 0.3rem;\n      font-size: 15px;\n    }\n  }\n  .description {\n    width: 95%;\n    margin: 0 auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Events                      Add Event                                            Filter:                              My events                                                                                                        {{ event.title | uppercase }}                                            {{ event.location }} - {{ event.date | date: \"dd/MM/yyyy\" }}                                              {{ event.addedBy}}                                                    {{ event.description }}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/event.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEvent\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                getEvent\n                            \n                            \n                                getEvents\n                            \n                            \n                                getFilteredEvents\n                            \n                            \n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/event.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEvent\n                        \n                        \n                    \n                \n            \n            \n                \naddEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:73\n                \n            \n\n\n            \n                \n                    Save the event passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event to add\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEvent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:55\n                \n            \n\n\n            \n                \n                    Delete the event, if exists, with the ID passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event ID\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvent\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:39\n                \n            \n\n\n            \n                \n                    Return the event with the ID passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event ID\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:23\n                \n            \n\n\n            \n                \n                    Return the event list.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFilteredEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetFilteredEvents(filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:109\n                \n            \n\n\n            \n                \n                    Return the event list that match with the filter string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String used to filter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \nupdateEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:91\n                \n            \n\n\n            \n                \n                    Update the event passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Event } from '../models/event.model';\nimport { HTTP_HEADER_VALUE_APPLICATION_JSON } from './constants-service';\nimport { ErrorService } from './error.service';\n\n@Injectable()\nexport class EventService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly errorService: ErrorService,\n    ) {}\n\n  /**\n   * Return the event list.\n   */\n  getEvents(): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http.get(environment.apiURL + 'events', { headers }).pipe(\n      retry(3),\n      catchError(this.errorService.handleError)\n    );\n  }\n\n  /**\n   * Return the event with the ID passed as parameter\n   *\n   * @param id Event ID\n   */\n  getEvent(id: string): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http.get(`${environment.apiURL}events/${id}`, { headers }).pipe(\n      retry(3),\n      catchError(this.errorService.handleError)\n    );\n  }\n\n  /**\n   * Delete the event, if exists, with the ID passed as parameter\n   *\n   * @param id  Event ID\n   */\n  deleteEvent(id: string): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http\n      .delete(`${environment.apiURL}events/${id}`, { headers })\n      .pipe(\n        retry(3),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n  /**\n   * Save the event passed as parameter\n   *\n   * @param event Event to add\n   */\n  addEvent(event: Event): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http\n      .post(environment.apiURL + 'events/', event, { headers })\n      .pipe(\n        retry(3),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n  /**\n   * Update the event passed as parameter\n   *\n   * @param event Event to update\n   */\n  updateEvent(event: Event): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http\n      .put(`${environment.apiURL}events/${event.id}`, event, { headers })\n      .pipe(\n        retry(3),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n  /**\n   * Return the event list that match with the filter string\n   *\n   * @param filter String used to filter\n   */\n  getFilteredEvents(filter): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http.get(`${environment.apiURL}events?${filter}`, { headers }).pipe(\n      retry(3),\n      catchError(this.errorService.handleError)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\n\nEventDetailComponent\n\nEventDetailComponent\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nEventDetailComponent->EventsModule\n\n\n\n\n\nEventFormComponent\n\nEventFormComponent\n\nEventsModule -->\n\nEventFormComponent->EventsModule\n\n\n\n\n\nEventListComponent\n\nEventListComponent\n\nEventsModule -->\n\nEventListComponent->EventsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/events/events.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EventDetailComponent\n                        \n                        \n                            EventFormComponent\n                        \n                        \n                            EventListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Modules\nimport { SharedModule } from '../shared/shared.module';\n\n// Components\nimport { EventListComponent } from './event-list/event-list.component';\nimport { EventFormComponent } from './event-form/event-form.component';\nimport { EventDetailComponent } from './event-detail/event-detail.component';\n\n@NgModule({\n  declarations: [\n    EventListComponent,\n    EventFormComponent,\n    EventDetailComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ]\n})\n/**\n * Module for Events\n */\nexport class EventsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetFilteredEvents.html":{"url":"classes/GetFilteredEvents.html","title":"class - GetFilteredEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetFilteredEvents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/layout/layout.actions.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GET_FILTERED_EVENTS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const GET_FILTERED_EVENTS = 'layout/GET_FILTERED_EVENTS';\nexport const GET_FILTERED_EVENTS_SUCCESS = 'layout/GET_FILTERED_EVENTS_SUCCESS';\nexport const GET_FILTERED_EVENTS_ERROR = 'layout/GET_FILTERED_EVENTS_ERROR';\n\nexport class GetFilteredEvents implements Action {\n  readonly type = GET_FILTERED_EVENTS;\n\n  constructor(public payload: string) {}\n}\n\nexport class GetFilteredEventsSuccess implements Action {\n  readonly type = GET_FILTERED_EVENTS_SUCCESS;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class GetFilteredEventsError implements Action {\n  readonly type = GET_FILTERED_EVENTS_ERROR;\n\n  constructor(public payload: any) {}\n}\n\n\nexport type Actions = GetFilteredEvents | GetFilteredEventsSuccess | GetFilteredEventsError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetFilteredEventsError.html":{"url":"classes/GetFilteredEventsError.html","title":"class - GetFilteredEventsError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetFilteredEventsError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/layout/layout.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GET_FILTERED_EVENTS_ERROR\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const GET_FILTERED_EVENTS = 'layout/GET_FILTERED_EVENTS';\nexport const GET_FILTERED_EVENTS_SUCCESS = 'layout/GET_FILTERED_EVENTS_SUCCESS';\nexport const GET_FILTERED_EVENTS_ERROR = 'layout/GET_FILTERED_EVENTS_ERROR';\n\nexport class GetFilteredEvents implements Action {\n  readonly type = GET_FILTERED_EVENTS;\n\n  constructor(public payload: string) {}\n}\n\nexport class GetFilteredEventsSuccess implements Action {\n  readonly type = GET_FILTERED_EVENTS_SUCCESS;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class GetFilteredEventsError implements Action {\n  readonly type = GET_FILTERED_EVENTS_ERROR;\n\n  constructor(public payload: any) {}\n}\n\n\nexport type Actions = GetFilteredEvents | GetFilteredEventsSuccess | GetFilteredEventsError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetFilteredEventsSuccess.html":{"url":"classes/GetFilteredEventsSuccess.html","title":"class - GetFilteredEventsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetFilteredEventsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any[])\n                    \n                \n                        \n                            \n                                Defined in src/app/store/layout/layout.actions.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GET_FILTERED_EVENTS_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const GET_FILTERED_EVENTS = 'layout/GET_FILTERED_EVENTS';\nexport const GET_FILTERED_EVENTS_SUCCESS = 'layout/GET_FILTERED_EVENTS_SUCCESS';\nexport const GET_FILTERED_EVENTS_ERROR = 'layout/GET_FILTERED_EVENTS_ERROR';\n\nexport class GetFilteredEvents implements Action {\n  readonly type = GET_FILTERED_EVENTS;\n\n  constructor(public payload: string) {}\n}\n\nexport class GetFilteredEventsSuccess implements Action {\n  readonly type = GET_FILTERED_EVENTS_SUCCESS;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class GetFilteredEventsError implements Action {\n  readonly type = GET_FILTERED_EVENTS_ERROR;\n\n  constructor(public payload: any) {}\n}\n\n\nexport type Actions = GetFilteredEvents | GetFilteredEventsSuccess | GetFilteredEventsError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/home-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-home-page\n            \n\n            \n                styleUrls\n                ./home-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/home-page.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'eui-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\n/**\n * Class that represent the home page component in the app\n */\nexport class HomePageComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n    \n      Home\n    \n    \n      \n    \n\n    \n      \n          Open Events\n        \n\n        \n          All our events\n        \n\n        \n          \n            A new and fresh application to host all our tech events crafted from\n            Accenture Openathons\n          \n        \n    \n\n\n\n    \n\n    \n                \n                    ./home-page.component.scss\n                \n                @import '../shared/styles/colors';\n@import '../shared/styles/variables';\n\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt1.jpg', bottom, contain);\n  background-size: cover;\n  display: flex;\n  flex-flow: column;\n  text-align: center;\n  display: inline-block;\n}\n\n.logo {\n\n  img {\n    width: 250px;\n    border-radius: 4px;\n    margin-bottom: 20px;\n  }\n}\n\n.title {\n  color: $black;\n\n  h1 {\n    font-size: 2.2rem;\n    margin: 3rem 0 0 0;\n  }\n}\n\n.section-title {\n  text-align: left;\n}\n\n.subtitle {\n\n  h2{\n    font-size: 2rem;\n    font-weight: 100;\n    margin-top: 0.3rem;\n  }\n}\n\n.background-card {\n  background-color: white;\n  border-radius: 4px;\n  padding-bottom: 30px;\n  width: 65%;\n  display:inline-block;\n}\n\n.message {\n  text-align: center;\n\n  p {\n    display: inline-block;\n    margin: 0;\n    font-size: 1.3rem;\n    font-weight: 300;\n    max-width: 600px;\n    line-height: 1.4;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Home                                      Open Events                          All our events                                      A new and fresh application to host all our tech events crafted from            Accenture Openathons                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesService.html":{"url":"injectables/ImagesService.html","title":"injectable - ImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/images.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/images.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \ngetImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/images.service.ts:21\n                \n            \n\n\n            \n                \n                    Return a random image from unsplash.com\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { ErrorService } from './error.service';\n\n\n@Injectable()\nexport class ImagesService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly errorService: ErrorService,\n  ) {}\n\n  /**\n   * Return a random image from unsplash.com\n   */\n  getImage(): Observable {\n    const headers = new HttpHeaders({\n      Authorization: 'Client-ID 9f354e7919a3f56e537616f46b1c1e87b5632d7c7227f2bd469762eed79a6296'\n    });\n\n    return this.http\n      .get('https://api.unsplash.com/photos/random?orientation=landscape&query=event', { headers })\n      .pipe(\n        retry(3),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutEffects.html":{"url":"injectables/LayoutEffects.html","title":"injectable - LayoutEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LayoutEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getFilteredEvents$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, eventService: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/layout/layout.effects.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFilteredEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType('layout/GET_FILTERED_EVENTS'),\n    switchMap((filter: any) => this.eventService.getFilteredEvents(filter.payload)\n      .pipe(\n        map(res => ({ type: 'layout/GET_FILTERED_EVENTS_SUCCESS', payload: res })),\n        catchError(error => of({ type: 'layout/GET_FILTERED_EVENTS_ERROR', payload: error }))\n      )\n    )\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.effects.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { EventService } from '../../core/event.service';\n\n\n@Injectable()\nexport class LayoutEffects {\n\n  constructor(\n    private readonly actions$: Actions,\n    private readonly eventService: EventService\n  ) {}\n\n  @Effect()\n  getFilteredEvents$ = this.actions$.pipe(\n    ofType('layout/GET_FILTERED_EVENTS'),\n    switchMap((filter: any) => this.eventService.getFilteredEvents(filter.payload)\n      .pipe(\n        map(res => ({ type: 'layout/GET_FILTERED_EVENTS_SUCCESS', payload: res })),\n        catchError(error => of({ type: 'layout/GET_FILTERED_EVENTS_ERROR', payload: error }))\n      )\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logged.html":{"url":"classes/Logged.html","title":"class - Logged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/login/login.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/login/login.actions.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/login/login.actions.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LOGGED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/login/login.actions.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGGED = 'login/logged';\n\nexport class Logged implements Action {\n  readonly type = LOGGED;\n\n  constructor(public payload: boolean) {}\n}\n\nexport type Actions = Logged;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login-form/login-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-login-form\n            \n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                msgs\n                            \n                            \n                                    Public\n                                    Readonly\n                                validateFormService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validateFormService: ValidateFormService, fb: FormBuilder, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login-form/login-form.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validateFormService\n                                                  \n                                                        \n                                                                        ValidateFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login-form/login-form.component.ts:32\n                \n            \n\n\n            \n                \n                    instanze form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login-form/login-form.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login-form/login-form.component.ts:42\n                \n            \n\n\n            \n                \n                    Fired when user click on \"Login\" button in the form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login-form/login-form.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msgs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login-form/login-form.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            validateFormService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidateFormService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login-form/login-form.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../core/user.service';\nimport { ValidateFormService } from '../../core/validate-form.service';\n\n@Component({\n  selector: 'eui-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\n/**\n * Class that represent the login form component in the app\n */\nexport class LoginFormComponent implements OnInit {\n  loginForm: FormGroup;\n  msgs: string;\n\n  constructor(\n    public readonly validateFormService: ValidateFormService,\n    private readonly fb: FormBuilder,\n    private readonly router: Router,\n    private readonly userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.createForm();\n  }\n/**\n * instanze form\n */\n  createForm() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /**\n   * Fired when user click on \"Login\" button in the form\n   */\n  onSubmit() {\n    this.userService.login(this.loginForm.value).subscribe((res: any) => {\n      if (res.email) {\n        this.router.navigate(['/events']);\n      } else {\n        this.msgs = res;\n      }\n    }, err => this.msgs = 'Email not found.');\n  }\n\n}\n\n    \n\n    \n        \n    \n      Login\n    \n\n    \n      \n        \n          \n          \n            {{validateFormService.getError('email', loginForm.get('email'))}}\n          \n        \n        \n          \n          \n            {{validateFormService.getError('password', loginForm.get('password'))}}\n          \n        \n\n        \n          {{msgs}} \n        \n\n        \n          Need an account? Signup\n          \n            Login\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                // @import '../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt5.jpg', center, contain);\n  background-size: cover;\n}\n\n.form {\n  display: flex;\n  justify-content: center;\n}\n\n.form-login {\n  border-radius: 4px;\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  padding: 1rem;\n  background-color: rgba(255,255,255,0.9);\n}\n\n.login-btn {\n  text-align: right;\n  margin-top: 2rem;\n\n  .sign-up {\n    font-size: 12px;\n    margin-bottom: 0.5rem;\n\n    a {\n      font-weight: 600;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Login                                                      {{validateFormService.getError(\\'email\\', loginForm.get(\\'email\\'))}}                                                          {{validateFormService.getError(\\'password\\', loginForm.get(\\'password\\'))}}                                    {{msgs}}                           Need an account? Signup                      Login                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginModule.html":{"url":"modules/LoginModule.html","title":"module - LoginModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_declarations\n\n\n\ncluster_LoginModule_imports\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nLoginFormComponent->LoginModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLoginModule -->\n\nSharedModule->LoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LoginFormComponent } from './login-form/login-form.component';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginFormComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    LoginFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ]\n})\n/**\n * Module for Login\n */\nexport class LoginModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/page-not-found/page-not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/page-not-found/page-not-found.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/page-not-found/page-not-found.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'eui-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\n/**\n * Class that represent the pageNotFound component in the app\n */\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        Page not found\n    \n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                @import '../shared/styles/variables';\n\n.container {\n    @include container();\n    @include background('/assets/imgs/patt2.jpg', center, cover);\n    background-size: cover;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Page not found    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileDetailComponent.html":{"url":"components/ProfileDetailComponent.html","title":"component - ProfileDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile-detail/profile-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-profile-detail\n            \n\n            \n                styleUrls\n                ./profile-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile-detail/profile-detail.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile-detail/profile-detail.component.ts:32\n                \n            \n\n\n            \n                \n                    get user from local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile-detail/profile-detail.component.ts:39\n                \n            \n\n\n            \n                \n                    Log out use from the system\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile-detail/profile-detail.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile-detail/profile-detail.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../core/user.service';\nimport { User } from '../../models/user.model';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport * as login from '../../store/login/login.actions';\n\n@Component({\n  selector: 'eui-profile-detail',\n  templateUrl: './profile-detail.component.html',\n  styleUrls: ['./profile-detail.component.scss']\n})\n/**\n * Class that represent the detail profile component in the app\n */\nexport class ProfileDetailComponent implements OnInit {\n  user: User;\n\n  constructor(\n    private readonly userService: UserService,\n    private readonly router: Router,\n    private readonly store: Store,\n  ) {}\n\n  ngOnInit() {\n    this.getUser();\n  }\n\n  /**\n   * get user from local storage\n   */\n  getUser() {\n    this.user = JSON.parse(localStorage.getItem('user'));\n  }\n\n  /**\n   * Log out use from the system\n   */\n  logout() {\n    this.userService.logout();\n    this.store.dispatch(new login.Logged(false));\n    this.router.navigate(['/home']);\n  }\n\n}\n\n    \n\n    \n        \n  \n      User Profile\n  \n\n  \n    \n      \n        Email: \n         {{user.email}}\n      \n      \n        ID: \n         {{user.id}}\n      \n    \n  \n\n  \n    \n      Logout\n    \n  \n\n\n\n    \n\n    \n                \n                    ./profile-detail.component.scss\n                \n                // @import '../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt5.jpg', center, contain);\n  background-size: cover;\n}\n\n.wrap {\n  display: flex;\n  justify-content: center;\n}\n\n.userData {\n  margin-bottom: 20px;\n  padding: 1rem;\n  background-color: rgba(255,255,255,0.9);\n  border-radius: 4px;\n  min-width: 35%;\n  h4 {\n    display: inline-block;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        User Profile                      Email:          {{user.email}}                    ID:          {{user.id}}                        Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nProfileDetailComponent\n\nProfileDetailComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileDetailComponent->ProfileModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileDetailComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ProfileDetailComponent } from './profile-detail/profile-detail.component';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileDetailComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    ProfileDetailComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ]\n})\n/**\n * Module for Profile\n */\nexport class ProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\n/**\n * Angular material\n */\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { RouterModule } from '@angular/router';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\nimport 'hammerjs';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatListModule,\n    MatCardModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    RouterModule,\n    MatSlideToggleModule,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatListModule,\n    MatCardModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    RouterModule,\n    MatSlideToggleModule,\n    MatCheckboxModule,\n  ],\n  entryComponents: [],\n})\n\n/**\n * shared module contains component by angular material\n */\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupFormComponent.html":{"url":"components/SignupFormComponent.html","title":"component - SignupFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/signup/signup-form/signup-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-signup-form\n            \n\n            \n                styleUrls\n                ./signup-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signup-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                signupForm\n                            \n                            \n                                user\n                            \n                            \n                                    Public\n                                    Readonly\n                                validateFormService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validateFormService: ValidateFormService, fb: FormBuilder, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/signup/signup-form/signup-form.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validateFormService\n                                                  \n                                                        \n                                                                        ValidateFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup-form/signup-form.component.ts:39\n                \n            \n\n\n            \n                \n                    inicialize form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup-form/signup-form.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup-form/signup-form.component.ts:56\n                \n            \n\n\n            \n                \n                    Fired when user click on \"Signup\" button in the form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showPassword\n                        \n                        \n                    \n                \n            \n            \n                \nshowPassword(showPassword: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup-form/signup-form.component.ts:49\n                \n            \n\n\n            \n                \n                    change type of input when click in check show password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    showPassword\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('password', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup-form/signup-form.component.ts:21\n                            \n                        \n\n                \n                    \n                        ViewChild to be able to change input type in pasword\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup-form/signup-form.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup-form/signup-form.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            validateFormService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidateFormService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup-form/signup-form.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\nimport { UserService } from '../../core/user.service';\nimport { ValidateFormService } from '../../core/validate-form.service';\n\n@Component({\n  selector: 'eui-signup-form',\n  templateUrl: './signup-form.component.html',\n  styleUrls: ['./signup-form.component.scss']\n})\n/**\n * Class that represent the Signup component in the app\n */\nexport class SignupFormComponent implements OnInit {\n\n  /**\n   * ViewChild to be able to change input type in pasword\n   */\n  @ViewChild('password', {static: false}) password: ElementRef;\n  signupForm: FormGroup;\n  user: User;\n\n  constructor(\n    public readonly validateFormService: ValidateFormService,\n    private readonly fb: FormBuilder,\n    private readonly router: Router,\n    private readonly userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  /**\n   * inicialize form\n   */\n  createForm() {\n    this.signupForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /**\n   * change type of input when click in check show password\n   */\n  showPassword(showPassword: boolean) {\n    this.password.nativeElement.type = showPassword ? 'text' : 'password';\n  }\n\n  /**\n   * Fired when user click on \"Signup\" button in the form\n   */\n  onSubmit() {\n    this.user = this.signupForm.value;\n    this.userService.signup(this.user).subscribe(() => {\n      this.router.navigate(['/events']);\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n      Signup\n    \n\n    \n      \n        \n          \n          \n            {{validateFormService.getError('email', signupForm.get('email'))}}\n          \n        \n        \n          \n          \n            {{validateFormService.getError('password', signupForm.get('password'))}}\n          \n        \n          \n            Show password\n          \n\n\n        \n          Already have an account? Login\n          \n            Signup\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./signup-form.component.scss\n                \n                // @import '../../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt5.jpg', center, contain);\n  background-size: cover;\n}\n\n.form {\n  display: flex;\n  justify-content: center;\n}\n\n.form-signup {\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  padding: 1rem;\n  background-color: rgba(255,255,255,0.9);\n  border-radius: 4px;\n}\n\n.login-btn {\n  text-align: right;\n  margin-top: 2rem;\n\n  .login {\n    font-size: 12px;\n    margin-bottom: 0.5rem;\n\n    a {\n      font-weight: 600;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Signup                                                      {{validateFormService.getError(\\'email\\', signupForm.get(\\'email\\'))}}                                                          {{validateFormService.getError(\\'password\\', signupForm.get(\\'password\\'))}}                                        Show password                            Already have an account? Login                      Signup                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SignupModule.html":{"url":"modules/SignupModule.html","title":"module - SignupModule","body":"\n                   \n\n\n\n\n    Modules\n    SignupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SignupModule\n\n\n\ncluster_SignupModule_declarations\n\n\n\ncluster_SignupModule_imports\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\n\n\nSignupModule\n\nSignupModule\n\nSignupModule -->\n\nSignupFormComponent->SignupModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSignupModule -->\n\nSharedModule->SignupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/signup/signup.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SignupFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SignupFormComponent } from './signup-form/signup-form.component';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupFormComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    SignupFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ]\n})\n/**\n * Module for Signup\n */\nexport class SignupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.store.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        layout\n                                \n                                \n                                        login\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                    \n                                \n                                \n                                    \n                                        layout:     layoutReducer.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     layoutReducer.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                    \n                                \n                                \n                                    \n                                        login:     loginReducer.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     loginReducer.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap } from '@ngrx/store';\n\nimport * as loginReducer from './store/login/login.redux';\nimport * as layoutReducer from './store/layout/layout.redux';\n\nexport interface State {\n  login: loginReducer.State;\n  layout: layoutReducer.State;\n}\n\nexport const reducers: ActionReducerMap = {\n  login: loginReducer.reducer,\n  layout: layoutReducer.reducer,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-1.html":{"url":"interfaces/State-1.html","title":"interface - State-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.redux.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        filteredEvents\n                                \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filteredEvents\n                                    \n                                \n                                \n                                    \n                                        filteredEvents:         Event[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Event[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as layout from './layout.actions';\nimport { Event } from '../../models/event.model';\n\nexport interface State {\n  filteredEvents: Event[];\n  loading: boolean;\n  error: any;\n}\n\nexport const initialState: State = {\n  filteredEvents: [],\n  loading: false,\n  error: null\n};\n\nexport function reducer(state: State = initialState, action: layout.Actions): State {\n  switch (action.type) {\n    case layout.GET_FILTERED_EVENTS:\n      return {\n        ...state,\n        filteredEvents: [],\n        loading: true,\n        error: null\n      };\n\n    case layout.GET_FILTERED_EVENTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        filteredEvents: action.payload,\n        error: null\n      };\n\n    case layout.GET_FILTERED_EVENTS_ERROR:\n      return {\n        ...state,\n        filteredEvents: [],\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-2.html":{"url":"interfaces/State-2.html","title":"interface - State-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/login/login.redux.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        logged\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logged\n                                    \n                                \n                                \n                                    \n                                        logged:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as login from './login.actions';\n\nexport interface State {\n  logged: boolean;\n}\n\nexport const initialState: State = {\n  logged: false\n};\n\nexport function reducer(state: State = initialState, action: login.Actions): State {\n\n  if (action.type === login.LOGGED) {\n    return {\n      ...state,\n      logged: action.payload\n    };\n  } else {\n    return state;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/toolbar/toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-toolbar\n            \n\n            \n                styleUrls\n                ./toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                subscriptionLogin\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/toolbar/toolbar.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/toolbar/toolbar.component.ts:35\n                \n            \n\n\n            \n                \n                    After destroy the component loginSuscription need unsubscribe.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/toolbar/toolbar.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toolbar/toolbar.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubscriptionLike\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toolbar/toolbar.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toolbar/toolbar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { SubscriptionLike } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\n\n@Component({\n  selector: 'eui-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\n/**\n * Class that represent the toolbar component in top\n */\nexport class ToolbarComponent implements OnInit, OnDestroy {\n  user: User;\n  isAuthenticated: boolean;\n  subscriptionLogin: SubscriptionLike;\n  constructor(\n    private readonly store: Store\n  ) {}\n\n  ngOnInit() {\n    this.subscriptionLogin = this.store.pipe(select('login')).subscribe(state => {\n      if (state) {\n        this.isAuthenticated = state.logged;\n        if ( this.isAuthenticated) {\n          this.user = JSON.parse(localStorage.getItem('user'));\n        }\n      }\n    });\n  }\n  /**\n   * After destroy the component loginSuscription need unsubscribe.\n   */\n  ngOnDestroy() {\n    if (this.subscriptionLogin) {\n      this.subscriptionLogin.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  Home\n  Events\n  {{user.email}}\n  Login\n\n\n    \n\n    \n                \n                    ./toolbar.component.scss\n                \n                .toolbar {\n\n    .option {\n      margin-left: 10px;\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Home  Events  {{user.email}}  Login'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                interface used to store the user\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUser\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                setUser\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorService: ErrorService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkUser\n                        \n                        \n                    \n                \n            \n            \n                \ncheckUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:82\n                \n            \n\n\n            \n                \n                    Return true if user is authenticated, false in other case.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:53\n                \n            \n\n\n            \n                \n                    Log in user in the system if the password is correct.\nIf the password is incorrect return a string message\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Use to log in\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:74\n                \n            \n\n\n            \n                \n                    Log out the user in the system\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:90\n                \n            \n\n\n            \n                \n                    Determine if user is authenticated and then set result in isAuthenticated properti\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:29\n                \n            \n\n\n            \n                \n                    Sign up the user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User to sign up\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { catchError, retry, map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { User } from '../models/user.model';\nimport * as login from '../store/login/login.actions';\nimport { ErrorService } from './error.service';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly errorService: ErrorService,\n    private readonly store: Store,\n  ) {}\n\n  isAuthenticated: boolean;\n\n  /**\n   * Sign up the user\n   *\n   * @param user User to sign up\n   */\n  signup(user: User): Observable {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    return this.http\n      .post(environment.apiURL + 'users/', user, { headers })\n      .pipe(\n        retry(3),\n        map(r => {\n          localStorage.setItem('user', JSON.stringify(r));\n          this.setUser();\n        }),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n  /**\n   * Log in user in the system if the password is correct.\n   *\n   * If the password is incorrect return a string message\n   *\n   * @param user Use to log in\n   */\n  login(user: User): Observable {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    return this.http.get(`${environment.apiURL}users?email=${user.email}`, { headers }).pipe(\n      retry(3),\n      map(us => {\n        if (us[0].email && us[0].password === user.password) {\n          localStorage.setItem('user', JSON.stringify(us[0]));\n          this.setUser();\n        }\n        return us[0].password === user.password ? us[0] : 'Password not valid.';\n      }),\n      catchError(this.errorService.handleError)\n    );\n  }\n\n  /**\n   * Log out the user in the system\n   */\n  logout() {\n    localStorage.setItem('user', '');\n    return false;\n  }\n\n  /**\n   * Return true if user is authenticated, false in other case.\n   */\n  checkUser(): boolean {\n    this.setUser();\n    return this.isAuthenticated;\n  }\n\n  /**\n   * Determine if user is authenticated and then set result in isAuthenticated properti\n   */\n  private setUser() {\n    this.isAuthenticated = true;\n    this.isAuthenticated = Boolean(localStorage.getItem('user'));\n    this.isAuthenticated ? this.store.dispatch(new login.Logged(true)) : this.store.dispatch(new login.Logged(false));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateFormService.html":{"url":"injectables/ValidateFormService.html","title":"injectable - ValidateFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validate-form.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/validate-form.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError(name: string, field: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validate-form.service.ts:13\n                \n            \n\n\n            \n                \n                    If field has errors, return an error message explaining it. An empty string if it has not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Field name\n\n                                    \n                                \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Field object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateFormService {\n  constructor() {}\n\n  /**\n   * If field has errors, return an error message explaining it. An empty string if it has not.\n   *\n   * @param name Field name\n   * @param field Field object\n   */\n  getError(name: string, field: any): string {\n    if (field.errors) {\n      if (field.errors.required) {\n        return `${name} is required`;\n      } else if (field.errors.minlength) {\n        return `${name} min length is ${field.errors.minlength.requiredLength}`;\n      } else if (field.errors.maxlength) {\n        return `${name} max length is ${field.errors.maxlength.requiredLength}`;\n      } else if (field.errors.email) {\n        return `${name} isn't a valid email`;\n      }\n    }\n    return '';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.store.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.store.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/auth-guard.service.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/constants-service.ts\n            \n            variable\n            HTTP_HEADER_KEY_CONTENT_TYPE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/constants-service.ts\n            \n            variable\n            HTTP_HEADER_VALUE_APPLICATION_JSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/event.service.ts\n            \n            injectable\n            EventService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/core/images.service.ts\n            \n            injectable\n            ImagesService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/user.service.ts\n            \n            injectable\n            UserService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/core/validate-form.service.ts\n            \n            injectable\n            ValidateFormService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/events/event-detail/event-detail.component.ts\n            \n            component\n            EventDetailComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/events/event-form/event-form.component.ts\n            \n            component\n            EventFormComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/events/event-list/event-list.component.ts\n            \n            component\n            EventListComponent\n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                src/app/home-page/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/login/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/models/event.model.ts\n            \n            interface\n            Event\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            User\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/profile/profile-detail/profile-detail.component.ts\n            \n            component\n            ProfileDetailComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/signup/signup-form/signup-form.component.ts\n            \n            component\n            SignupFormComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            class\n            GetFilteredEvents\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            class\n            GetFilteredEventsError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            class\n            GetFilteredEventsSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            variable\n            GET_FILTERED_EVENTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            variable\n            GET_FILTERED_EVENTS_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            variable\n            GET_FILTERED_EVENTS_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.effects.ts\n            \n            injectable\n            LayoutEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.redux.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.redux.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.redux.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/login/login.actions.ts\n            \n            class\n            Logged\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/login/login.actions.ts\n            \n            variable\n            LOGGED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/login/login.redux.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/store/login/login.redux.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/login/login.redux.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.0.1\n        \n            @angular/cdk : ^8.0.1\n        \n            @angular/common : ~8.0.1\n        \n            @angular/compiler : ~8.0.1\n        \n            @angular/core : ~8.0.1\n        \n            @angular/forms : ~8.0.1\n        \n            @angular/material : ^8.0.1\n        \n            @angular/platform-browser : ~8.0.1\n        \n            @angular/platform-browser-dynamic : ~8.0.1\n        \n            @angular/router : ~8.0.1\n        \n            @ngrx/effects : ^8.0.1\n        \n            @ngrx/store : ^8.0.1\n        \n            hammerjs : ^2.0.8\n        \n            i : ^0.3.6\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            reducer   (src/.../layout.redux.ts)\n                        \n                        \n                            reducer   (src/.../login.redux.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/layout/layout.redux.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/store/login/login.redux.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEventsUi\nThis project was generated with Angular CLI version 8.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nFeatures and functionalities\nThis project was created from scratch (as you can see in the commit history), and include all features and functionalities explained in the seven labs and Openanthon day.\nAdditional features\n\nAngular 8: Project was generated from scratch using Angular 8.0.3.\nReactive Foms: In all forms. Error messages are generated dynamically.\nAnimations: Event list is shown with a side animation.\nRedesign: A little bit changes in CSS, HTML and resources. All new images are free to use and was downloaded from pixabay.com\n//TODO add image 1\nUX Inproved: A little bit changes to inprove the UX.\nDo not show \"Profile\" option when user is not logged.\nOnly owner can see the \"Delete\" and \"Edit\" buttons for a event.\nInclude the \"Logout\" button in the profile detail.\n\"Profile\" option was renamed to user ID.\n\n\nLazy Loading: Added lazy loading to some modules for a better performance.\n//TODO add image 2\nUnit Test: Added 60 Unit Test to cover 100% of code.\n//TODO ad image 2.5 y 2.6\nZero vulnerabilities: Project was audit with 'npm audit' and SonarQube. No vulnerabilities was detected in distribution environment. There is a known vulnerability in compodoc that is not solvable at the moment, but it is acceptable because it is only used to generate documentation and therefore does not jeopardize the production environment.  \nCode Comments: More code comments was added for cover more than 11% (audited with a SonarQube rule).\nCompodoc: Compodoc was included. Project documentation can be generated running \"npm compodoc\" command.\n//TODO add image 3\nBundle Report: Generated to analyze bundle size for optimization. Bundle Report can be generated running \"npm bundle-analyzer\" command.\n//TODO add image 4\nZero TSLint problems: No file with errors after running 'ng lint'\nSonarQube analisys:\n0 bugs\n0 vulnerabilities (\n0 code smells\n0% duplicate code\n100% Conditional Coverage\n100% Line Coverage\n0 Ciclomatic complexity issues\n0 Cognitive complexity issues\n//TODO add image 5\n\n\n\nExaple data\nThe db.json file is located in project root directory and include example data to run the project.\nCredits\n\nEfisio Pitzalis Morillas\nFrancisco Toro Mateo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SignupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_declarations\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_SignupModule\n\n\n\ncluster_SignupModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nSharedModule->LoginModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nSignupModule\n\nSignupModule\n\nSignupModule -->\n\nSharedModule->SignupModule\n\n\n\n\n\nErrorService\n\nErrorService\n\nCoreModule -->\n\nErrorService->CoreModule\n\n\n\n\n\nEventService\n\nEventService\n\nCoreModule -->\n\nEventService->CoreModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nCoreModule -->\n\nImagesService->CoreModule\n\n\n\n\n\nUserService\n\nUserService\n\nCoreModule -->\n\nUserService->CoreModule\n\n\n\n\n\nValidateFormService\n\nValidateFormService\n\nCoreModule -->\n\nValidateFormService->CoreModule\n\n\n\n\n\nEventDetailComponent\n\nEventDetailComponent\n\nEventsModule -->\n\nEventDetailComponent->EventsModule\n\n\n\n\n\nEventFormComponent\n\nEventFormComponent\n\nEventsModule -->\n\nEventFormComponent->EventsModule\n\n\n\n\n\nEventListComponent\n\nEventListComponent\n\nEventsModule -->\n\nEventListComponent->EventsModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nLoginModule -->\n\nLoginFormComponent->LoginModule\n\n\n\n\n\nProfileDetailComponent\n\nProfileDetailComponent\n\nProfileModule -->\n\nProfileDetailComponent->ProfileModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nSignupModule -->\n\nSignupFormComponent->SignupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Actions   (src/.../layout.actions.ts)\n                        \n                        \n                            Actions   (src/.../login.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/layout/layout.actions.ts\n    \n    \n        \n            \n                \n                    \n                    Actions\n                \n            \n            \n                \n                            GetFilteredEvents | GetFilteredEventsSuccess | GetFilteredEventsError\n\n                \n            \n        \n    \n    src/app/store/login/login.actions.ts\n    \n    \n        \n            \n                \n                    \n                    Actions\n                \n            \n            \n                \n                            Logged\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            GET_FILTERED_EVENTS   (src/.../layout.actions.ts)\n                        \n                        \n                            GET_FILTERED_EVENTS_ERROR   (src/.../layout.actions.ts)\n                        \n                        \n                            GET_FILTERED_EVENTS_SUCCESS   (src/.../layout.actions.ts)\n                        \n                        \n                            HTTP_HEADER_KEY_CONTENT_TYPE   (src/.../constants-service.ts)\n                        \n                        \n                            HTTP_HEADER_VALUE_APPLICATION_JSON   (src/.../constants-service.ts)\n                        \n                        \n                            initialState   (src/.../login.redux.ts)\n                        \n                        \n                            initialState   (src/.../layout.redux.ts)\n                        \n                        \n                            LOGGED   (src/.../login.actions.ts)\n                        \n                        \n                            reducers   (src/.../app.store.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiURL: 'http://localhost:3000/'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiURL: 'http://server.open-events.site/'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/layout/layout.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GET_FILTERED_EVENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'layout/GET_FILTERED_EVENTS'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GET_FILTERED_EVENTS_ERROR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'layout/GET_FILTERED_EVENTS_ERROR'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GET_FILTERED_EVENTS_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'layout/GET_FILTERED_EVENTS_SUCCESS'\n                        \n                    \n\n\n            \n        \n\n    src/app/core/constants-service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_HEADER_KEY_CONTENT_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Content-Type'\n                        \n                    \n\n                \n                    \n                        General constants\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_HEADER_VALUE_APPLICATION_JSON\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'application/json'\n                        \n                    \n\n\n            \n        \n\n    src/app/store/login/login.redux.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  logged: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/layout/layout.redux.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  filteredEvents: [],\n  loading: false,\n  error: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/login/login.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOGGED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'login/logged'\n                        \n                    \n\n\n            \n        \n\n    src/app/app.store.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  login: loginReducer.reducer,\n  layout: layoutReducer.reducer,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
