var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.523,1,1.145]],["body/components/AppComponent.html",[0,0.852,1,1.864,2,1.508,3,0.239,4,0.211,5,1.408,6,1.408,7,1.408,8,1.408,9,0.211,10,2.817,11,1.408,12,2.857,13,2.857,14,4.589,15,1.946,16,5.26,17,1.946,18,4.589,19,0.973,20,2.817,21,2.295,22,3.37,23,0.703,24,3.319,25,0.75,26,0.024,27,1.044,28,0.462,29,0.75,30,0.534,31,0.498,32,1.236,33,1.252,34,2.487,35,1.738,36,0.33,37,1.408,38,3.319,39,1.236,40,0.239,41,1.605,42,1.252,43,2.24,44,1.09,45,2.487,46,3.438,47,2.817,48,2.487,49,1.506,50,1.506,51,2.233,52,3.097,53,4.465,54,1.506,55,4.589,56,3.319,57,2.817,58,2.817,59,2.817,60,3.319,61,0.906,62,1.946,63,1.946,64,1.408,65,2.406,66,1.408,67,1.408,68,1.025,69,1.527,70,1.946,71,1.025,72,2.231,73,1.025,74,1.408,75,1.025,76,1.236,77,1.408,78,1.09,79,1.025,80,1.236,81,1.408,82,1.09,83,1.236,84,1.09,85,1.161,86,1.09,87,1.408,88,1.408,89,1.408,90,0.011,91,0.016,92,0.011]],["title/modules/AppModule.html",[93,0.951,94,2.353]],["body/modules/AppModule.html",[1,2.203,2,1.06,3,0.232,4,0.205,9,0.205,26,0.025,30,0.613,31,0.484,32,1.202,36,0.232,39,1.676,40,0.232,61,0.88,75,1.886,76,1.202,79,1.886,80,1.202,86,2.006,90,0.011,91,0.015,92,0.011,93,1.228,94,4.723,95,1.787,96,1.464,97,2.521,98,2.713,99,2.19,100,1.464,101,2.738,102,2.738,103,2.738,104,2.738,105,3.758,106,3.758,107,3.758,108,2.77,109,2.356,110,1.689,111,1.464,112,3.226,113,2.19,114,4.5,115,3.819,116,2.417,117,2.19,118,3.226,119,3.226,120,1.986,121,3.226,122,1.202,123,3.226,124,3.226,125,2.177,126,3.226,127,3.226,128,2.417,129,2.177,130,3.226,131,2.177,132,2.738,133,3.226,134,2.177,135,2.738,136,3.226,137,4.5,138,3.226,139,3.226,140,3.226,141,2.738]],["title/modules/AppRoutingModule.html",[93,0.951,105,2.146]],["body/modules/AppRoutingModule.html",[0,0.916,2,1.167,3,0.256,4,0.226,9,0.226,26,0.025,30,0.586,31,0.533,33,0.97,36,0.256,39,1.323,40,0.256,68,1.485,71,1.485,73,1.485,75,1.485,76,2.03,79,1.485,80,1.323,83,1.323,85,1.242,90,0.012,91,0.016,92,0.012,93,0.97,95,1.411,99,1.729,100,1.612,105,2.959,113,1.729,117,2.34,131,2.398,132,3.016,134,2.398,135,3.016,142,3.553,143,3.553,144,3.084,145,2.959,146,1.323,147,3.94,148,3.553,149,3.553,150,5.449,151,2.398,152,3.016,153,2.398,154,2.662,155,2.398,156,2.398,157,1.86,158,3.553,159,2.662,160,0.97,161,4.473,162,1.86,163,5.449,164,3.553,165,3.553,166,4.081,167,3.553,168,3.553,169,3.553,170,3.553,171,3.553,172,3.553,173,3.553,174,3.553,175,3.553,176,3.553,177,3.553]],["title/guards/AuthGuard.html",[147,2.353,178,2.612]],["body/guards/AuthGuard.html",[3,0.298,4,0.263,9,0.263,19,1.128,21,2.487,23,1.128,25,0.937,26,0.024,27,0.823,28,0.577,29,0.937,30,0.527,31,0.622,33,1.453,35,2.171,36,0.298,40,0.298,41,1.861,42,1.453,43,3.592,44,1.932,45,3.106,90,0.014,91,0.018,92,0.014,146,1.544,147,3.592,157,3.438,166,5.573,179,4.146,180,4.991,181,3.519,182,0.533,183,1.749,184,4.146,185,4.146,186,4.146,187,2.787,188,1.28,189,2.415,190,1.749,191,1.45,192,2.415,193,2.552,194,4.146,195,4.146,196,2.171]],["title/modules/CoreModule.html",[93,0.951,106,2.146]],["body/modules/CoreModule.html",[3,0.278,4,0.246,9,0.246,21,2.4,26,0.025,30,0.598,31,0.58,36,0.278,40,0.278,61,1.055,90,0.013,91,0.017,92,0.013,93,1.388,95,1.536,96,1.755,97,2.476,98,2.025,99,2.767,100,1.755,106,4.292,109,2.664,110,2.025,111,1.755,113,1.882,117,2.476,197,3.283,198,3.283,199,3.135,200,2.923,201,3.647,202,3.135,203,3.868,204,3.132,205,2.189,206,5.088,207,2.381,208,3.283,209,3.868,210,3.868,211,3.868,212,3.868,213,2.61,214,2.61,215,3.868,216,3.868]],["title/injectables/ErrorService.html",[190,1.145,199,1.696]],["body/injectables/ErrorService.html",[3,0.263,4,0.232,9,0.232,19,1.171,23,1.038,25,0.825,26,0.024,27,0.724,28,0.508,29,0.825,30,0.495,31,0.548,36,0.263,40,0.263,44,1.199,90,0.012,91,0.017,92,0.012,182,0.469,183,1.608,188,1.127,190,1.608,192,2.221,199,2.382,207,2.246,217,1.911,218,3.098,219,2.506,220,4.895,221,3.649,222,4.895,223,6.338,224,3.649,225,4.895,226,4.895,227,4.895,228,4.895,229,4.155,230,3.304,231,4.895,232,4.895,233,4.895,234,4.102,235,1.656,236,3.649,237,1.776,238,2.066,239,4.895,240,3.649,241,3.649,242,3.098,243,3.649,244,3.649,245,4.895,246,3.649,247,3.649,248,3.649,249,3.649,250,4.895,251,4.895,252,3.649,253,4.895,254,4.895,255,4.895,256,2.246,257,3.649,258,3.649,259,3.649,260,3.649,261,3.649,262,2.463,263,3.649,264,2.463,265,3.649,266,3.649,267,3.649,268,3.649,269,3.649,270,3.649,271,3.649]],["title/interfaces/Event.html",[69,1.012,272,1.384]],["body/interfaces/Event.html",[3,0.322,4,0.284,9,0.284,22,2.339,26,0.024,28,0.931,40,0.322,69,1.767,90,0.015,91,0.019,92,0.015,182,0.574,235,2.977,272,2.216,273,2.529,274,3.792,275,3.015,276,1.431,277,4.776,278,4.582,279,3.338,280,5.411,281,4.302,282,2.651]],["title/components/EventDetailComponent.html",[0,0.523,68,1.076]],["body/components/EventDetailComponent.html",[0,0.607,1,0.562,2,0.913,3,0.123,4,0.109,5,0.725,6,0.725,7,0.725,8,0.725,9,0.109,11,0.725,12,2.464,13,2.464,15,1.179,17,1.179,19,0.589,21,1.873,23,1.18,25,0.794,26,0.025,27,0.884,28,0.699,29,0.794,30,0.47,31,0.257,33,0.466,35,0.895,36,0.2,37,0.725,39,0.637,40,0.123,41,1.832,42,1.43,43,1.876,44,1.463,45,1.281,49,0.775,50,1.261,51,1.352,54,1.261,61,0.466,62,1.179,63,1.179,64,0.725,65,1.716,66,0.725,67,0.725,68,1.249,69,2.011,70,1.179,71,0.528,72,1.489,73,0.528,74,0.725,75,0.528,76,0.637,77,0.725,78,0.562,79,0.528,80,0.637,81,0.725,82,0.562,83,0.637,84,0.562,85,0.598,86,0.562,87,0.725,88,0.725,89,0.725,90,0.006,91,0.009,92,0.006,146,0.637,153,3.846,157,2.633,160,0.758,182,0.22,183,0.913,188,1.375,189,0.775,191,0.972,192,2.281,193,1.711,196,0.895,200,2.281,201,2.846,235,1.261,238,1.573,276,0.713,278,1.876,279,3.095,281,1.153,282,1.658,283,3.846,284,1.281,285,1.594,286,2.981,287,2.981,288,2.359,289,3.512,290,2.981,291,2.359,292,3.434,293,3.434,294,4.452,295,1.969,296,1.709,297,3.434,298,2.779,299,2.359,300,2.779,301,1.709,302,3.779,303,2.359,304,2.359,305,2.359,306,1.836,307,1.709,308,2.779,309,2.779,310,1.709,311,2.359,312,2.359,313,2.359,314,2.779,315,1.709,316,2.359,317,2.779,318,2.779,319,1.709,320,1.709,321,1.709,322,1.709,323,0.775,324,0.832,325,1.153,326,1.052,327,0.895,328,1.709,329,1.709,330,1.709,331,1.709,332,1.709,333,1.451,334,1.709,335,1.709,336,1.709,337,1.709,338,2.779,339,1.709,340,1.709,341,2.981,342,1.052,343,1.709,344,1.153,345,3.512,346,3.434,347,2.359,348,2.359,349,2.359,350,2.359,351,2.359,352,2.359,353,1.352,354,1.281,355,1.969,356,1.352,357,1.352,358,0.832,359,1.451,360,1.839,361,2.498,362,1.153,363,0.967,364,1.052,365,2.837,366,2.74,367,2.359,368,1.281,369,1.709,370,1.876,371,1.711,372,1.281,373,1.988,374,1.711,375,1.281,376,1.709,377,1.052,378,1.153,379,1.451,380,1.709,381,1.709,382,1.709,383,0.895,384,1.709,385,1.573,386,1.451,387,1.451,388,1.455,389,1.709,390,1.876,391,1.711,392,1.153,393,1.709,394,2.359,395,1.451,396,0.895,397,0.967,398,0.967,399,1.709]],["title/components/EventFormComponent.html",[0,0.523,71,1.076]],["body/components/EventFormComponent.html",[0,0.646,1,0.626,2,0.996,3,0.137,4,0.121,5,0.808,6,0.808,7,0.808,8,0.808,9,0.121,11,0.808,12,2.538,13,2.538,15,1.286,17,1.286,19,0.643,23,1.156,25,0.431,26,0.025,27,0.75,28,0.654,29,0.431,30,0.504,31,0.286,33,0.52,36,0.218,37,0.808,39,0.71,40,0.137,41,1.837,42,1.572,44,1.545,49,0.864,50,1.376,51,0.927,54,1.376,61,0.52,62,1.286,63,1.286,64,0.808,65,1.827,66,0.808,67,0.808,68,0.588,69,1.916,70,1.286,71,1.33,72,1.602,73,0.588,74,0.808,75,0.588,76,0.71,77,0.808,78,0.626,79,0.588,80,0.71,81,0.808,82,0.626,83,0.71,84,0.626,85,0.666,86,0.626,87,0.808,88,0.808,89,0.808,90,0.006,91,0.01,92,0.006,146,0.71,155,3.793,157,2.752,160,1.488,162,1.588,182,0.245,183,0.996,188,1.167,191,1.06,200,2.384,202,2.735,213,1.286,219,1.714,235,0.864,275,2.047,276,0.778,277,1.427,278,1.286,279,2.463,280,1.617,281,1.286,282,0.71,283,3.793,285,1.714,290,3.207,295,2.096,297,3.656,299,3.207,306,1.714,323,0.864,324,0.927,325,1.286,326,1.172,327,0.998,333,4.63,342,1.172,344,2.047,346,2.574,353,1.476,355,1.476,356,1.476,357,1.476,358,0.927,360,1.978,361,2.463,363,1.078,364,1.172,370,1.286,371,1.866,372,1.427,377,1.866,383,0.998,385,1.717,386,1.617,387,1.617,388,0.998,396,0.998,397,1.078,398,1.078,400,1.286,401,4.407,402,2.831,403,2.272,404,3.778,405,3.228,406,3.228,407,1.427,408,2.831,409,3.228,410,2.574,411,1.617,412,3.033,413,3.033,414,3.033,415,1.427,416,1.905,417,2.047,418,2.272,419,3.033,420,2.831,421,1.905,422,1.617,423,1.905,424,1.427,425,1.172,426,1.427,427,1.905,428,1.905,429,2.272,430,3.033,431,1.905,432,3.033,433,1.905,434,3.033,435,1.905,436,3.033,437,1.905,438,3.033,439,3.033,440,3.033,441,3.033,442,1.905,443,1.427,444,3.228,445,1.905,446,1.905,447,1.905,448,1.905,449,1.286,450,1.905,451,1.905,452,3.033,453,1.905,454,2.272,455,1.905,456,1.905,457,1.905,458,1.905,459,1.905,460,1.905,461,1.905,462,1.905,463,3.207,464,1.078,465,1.905,466,1.905,467,1.427,468,1.427,469,1.905,470,1.905,471,1.905,472,1.905,473,1.905,474,1.905,475,1.905,476,1.905]],["title/components/EventListComponent.html",[0,0.523,73,1.076]],["body/components/EventListComponent.html",[0,0.695,1,0.528,2,0.868,3,0.116,4,0.102,5,0.682,6,0.682,7,0.682,8,0.682,9,0.102,11,0.682,12,2.421,13,2.421,15,1.121,17,1.121,19,0.56,21,2.032,22,2.564,23,1.232,25,0.597,26,0.025,27,0.774,28,0.737,29,0.597,30,0.501,31,0.241,32,0.599,33,0.439,35,0.842,36,0.19,37,0.682,39,0.599,40,0.116,41,0.924,42,0.721,44,1.281,49,0.729,50,1.199,51,2.383,52,1.784,54,0.729,57,2.243,58,2.243,59,1.364,61,0.439,62,1.121,63,1.121,64,0.682,65,1.654,66,0.682,67,0.682,68,0.496,69,1.944,70,1.121,71,0.496,72,1.427,73,1.204,74,0.682,75,0.496,76,0.599,77,0.682,78,0.528,79,0.496,80,0.599,81,0.682,82,0.528,83,0.599,84,0.528,85,0.562,86,0.528,87,0.682,88,0.682,89,0.682,90,0.005,91,0.009,92,0.005,122,1.254,151,3.984,160,1.064,162,2.928,182,0.207,183,0.868,188,1.331,189,1.769,191,0.924,200,2.102,208,1.364,219,1.527,235,1.199,237,0.782,238,0.91,276,0.678,277,1.204,278,2.271,283,3.984,285,1.527,295,1.897,306,1.955,325,1.085,326,0.989,327,0.842,341,2.243,342,0.989,347,2.243,348,2.243,349,2.243,350,2.243,351,2.243,352,2.243,353,1.286,354,1.204,355,0.782,356,1.286,357,0.782,358,1.638,360,0.842,361,1.763,362,1.085,363,0.91,365,2.679,366,2.852,367,3.31,372,1.204,373,2.207,374,1.627,377,0.989,378,1.085,383,0.842,385,2.439,388,0.842,391,0.989,396,0.842,417,1.784,449,1.085,454,1.98,464,0.91,467,1.204,477,1.364,478,2.857,479,3.658,480,3.366,481,2.643,482,2.522,483,3.366,484,3.366,485,3.366,486,2.857,487,3.31,488,3.899,489,3.31,490,2.643,491,1.607,492,2.643,493,1.607,494,2.643,495,1.607,496,3.658,497,2.243,498,1.607,499,2.243,500,1.98,501,2.243,502,1.607,503,2.643,504,1.607,505,2.643,506,2.643,507,1.607,508,1.607,509,1.607,510,3.658,511,1.607,512,1.607,513,1.607,514,1.364,515,1.607,516,3.899,517,1.607,518,1.607,519,1.364,520,1.085,521,1.607,522,1.607,523,1.607,524,1.607,525,1.607,526,2.643,527,1.607,528,2.643,529,1.607,530,1.607,531,1.607,532,2.643,533,2.643,534,2.643,535,2.243,536,2.643,537,2.243,538,1.607,539,1.607,540,2.643,541,2.643,542,3.366,543,1.607,544,1.364,545,1.607,546,1.204,547,1.364,548,1.607,549,1.607,550,1.607,551,2.643,552,0.782,553,0.91,554,1.607,555,1.607,556,1.607,557,1.364,558,1.607,559,1.607,560,1.607,561,1.607,562,1.627,563,1.607,564,1.607,565,1.607,566,1.607,567,1.607,568,1.607,569,1.607,570,1.607,571,1.607,572,1.607,573,1.607,574,1.784,575,1.607,576,1.607,577,1.607,578,1.364,579,1.364,580,1.607,581,1.607]],["title/injectables/EventService.html",[190,1.145,200,1.582]],["body/injectables/EventService.html",[3,0.161,4,0.142,9,0.142,19,0.729,23,1.183,25,1.211,26,0.025,27,1.064,28,0.706,29,1.211,30,0.517,31,0.336,36,0.161,40,0.161,41,1.203,42,0.939,69,2.016,90,0.008,91,0.012,92,0.008,160,1.462,162,1.801,182,0.288,183,1.13,188,1.655,190,1.13,192,2.826,199,2.716,200,1.561,207,1.377,214,1.51,217,1.172,230,2.321,235,2.303,237,1.089,238,2.873,262,4.256,275,2.321,279,3.261,282,2.247,291,2.92,292,2.92,302,2.92,303,2.92,304,4.89,305,4.89,326,1.377,454,2.577,463,2.92,479,3.992,487,3.992,496,4.549,553,3.033,582,1.899,583,3.44,584,1.674,585,3.44,586,1.677,587,3.524,588,2.238,589,3.44,590,2.238,591,3.44,592,2.238,593,3.44,594,2.238,595,2.238,596,3.44,597,2.238,598,3.44,599,3.44,600,2.238,601,4.703,602,4.182,603,1.51,604,1.677,605,1.51,606,1.51,607,1.899,608,4.182,609,1.899,610,2.238,611,4.666,612,4.015,613,2.238,614,3.617,615,4.015,616,4.015,617,2.238,618,3.139,619,2.238,620,1.899,621,2.238,622,2.238]],["title/modules/EventsModule.html",[93,0.951,107,2.146]],["body/modules/EventsModule.html",[2,1.315,3,0.288,4,0.254,9,0.254,26,0.024,30,0.583,31,0.601,36,0.288,40,0.288,61,1.092,68,2.008,69,1.678,71,2.008,73,2.008,90,0.014,91,0.018,92,0.014,93,1.42,95,2.066,96,1.816,97,2.813,98,2.096,99,1.948,100,1.816,107,4.27,108,2.951,109,2.725,110,2.096,111,1.816,113,2.532,117,2.532,120,2.463,151,2.701,152,3.397,153,2.701,154,2.999,155,2.701,156,2.701,162,2.096,204,3.202,205,2.265,623,3.397,624,3.397,625,4.002,626,4.002]],["title/classes/GetFilteredEvents.html",[36,0.251,584,1.696]],["body/classes/GetFilteredEvents.html",[3,0.289,4,0.255,9,0.255,19,0.85,23,1.227,25,0.907,26,0.024,27,0.796,28,0.934,29,0.907,30,0.36,32,1.494,36,0.417,40,0.477,42,1.733,90,0.014,91,0.018,92,0.014,160,1.579,182,0.516,191,2.143,219,2.364,276,1.336,282,2.282,323,1.82,324,1.952,552,3.09,584,2.817,627,2.469,628,2.271,629,4.006,630,2.708,631,5.211,632,4.012,633,3.562,634,2.708,635,3.207,636,2.469,637,3.207,638,2.469,639,3.906,640,2.95,641,2.95,642,2.271]],["title/classes/GetFilteredEventsError.html",[36,0.251,641,1.973]],["body/classes/GetFilteredEventsError.html",[3,0.291,4,0.257,9,0.257,19,0.857,23,1.231,25,0.914,26,0.024,27,0.802,28,0.936,29,0.914,30,0.362,32,1.506,36,0.418,40,0.478,42,1.737,90,0.014,91,0.018,92,0.014,160,1.585,182,0.52,191,2.149,219,2.376,276,1.343,282,1.506,323,1.834,324,1.967,552,3.097,584,2.548,627,2.488,628,2.288,629,4.014,630,2.728,633,3.223,634,2.728,635,3.223,636,2.488,637,3.575,638,2.488,639,3.92,640,2.964,641,3.288,642,2.288,643,5.237,644,4.042]],["title/classes/GetFilteredEventsSuccess.html",[36,0.251,640,1.973]],["body/classes/GetFilteredEventsSuccess.html",[3,0.291,4,0.257,9,0.257,19,0.857,23,1.231,25,0.914,26,0.024,27,0.802,28,0.936,29,0.914,30,0.362,32,1.506,36,0.418,40,0.478,42,1.737,90,0.014,91,0.018,92,0.014,160,1.585,182,0.52,191,2.149,219,2.376,276,1.343,282,1.506,323,1.834,324,1.967,552,3.097,584,2.548,627,2.488,628,2.288,629,4.014,630,2.728,633,3.223,634,2.728,635,3.575,636,2.488,637,3.223,638,2.488,639,3.92,640,3.288,641,2.964,642,2.288,645,5.237,646,4.042]],["title/components/HomePageComponent.html",[0,0.523,75,1.076]],["body/components/HomePageComponent.html",[0,0.79,1,0.923,2,1.34,3,0.202,4,0.179,5,1.192,6,1.192,7,1.192,8,1.192,9,0.179,11,1.192,12,2.772,13,2.772,15,1.73,17,1.73,19,1.018,23,0.596,26,0.024,27,0.81,30,0.43,31,0.422,33,0.767,36,0.294,37,1.192,39,1.047,40,0.202,49,1.275,50,1.851,51,2.336,52,1.897,53,2.386,61,0.767,62,1.73,63,1.73,64,1.192,65,2.234,66,1.192,67,1.192,68,0.868,69,1.394,70,1.73,71,0.868,72,2.036,73,0.868,74,1.192,75,1.627,76,2.408,77,1.192,78,0.923,79,0.868,80,1.962,81,1.192,82,0.923,83,1.047,84,0.923,85,0.983,86,0.923,87,1.192,88,1.192,89,1.192,90,0.01,91,0.014,92,0.01,134,2.753,162,3.055,256,1.73,264,1.897,281,2.753,285,1.275,353,1.985,355,1.985,356,1.368,357,2.336,358,2.563,359,2.386,360,2.514,361,2.136,363,1.591,364,1.73,365,2.758,366,3.242,368,2.106,373,2.717,374,1.73,378,1.897,383,2.136,385,3.166,388,1.472,390,3.24,391,2.955,394,2.386,396,2.136,397,2.309,398,2.309,464,1.591,467,2.106,468,2.106,535,2.386,553,2.309,562,1.73,574,2.753,578,2.386,579,2.386,647,3.462,648,2.386,649,4.801,650,4.079,651,2.81,652,4.079,653,4.079,654,4.079,655,4.079,656,4.079,657,4.079,658,4.079,659,4.079,660,2.81,661,3.462,662,4.075,663,2.81,664,2.81,665,2.81,666,2.81,667,2.81,668,2.81,669,2.81,670,2.81,671,2.81,672,2.81,673,2.81,674,2.81,675,2.81,676,2.81,677,2.81,678,2.81]],["title/injectables/ImagesService.html",[190,1.145,201,1.973]],["body/injectables/ImagesService.html",[3,0.29,4,0.256,9,0.256,19,1.108,23,1.108,25,0.911,26,0.024,27,0.8,28,0.561,29,0.911,30,0.57,31,0.605,36,0.29,40,0.29,41,1.828,42,1.427,90,0.014,91,0.018,92,0.014,160,1.1,182,0.518,183,1.718,188,1.245,190,1.718,192,2.632,199,3.228,201,2.959,207,2.482,214,2.721,217,2.111,230,3.528,237,1.962,242,3.423,262,3.915,279,2.111,293,5.211,311,4.438,312,4.438,313,4.438,553,2.282,586,3.021,587,4.599,602,3.917,603,2.721,604,3.021,605,2.721,611,3.917,614,2.721,615,3.021,616,3.021,618,3.021,679,3.423,680,4.032,681,4.032,682,4.032,683,4.032,684,4.032]],["title/injectables/LayoutEffects.html",[129,2.353,190,1.145]],["body/injectables/LayoutEffects.html",[3,0.277,4,0.245,9,0.245,19,1.075,23,1.075,25,0.87,26,0.025,27,0.764,28,0.872,29,0.87,30,0.562,31,0.578,36,0.277,40,0.277,41,1.774,42,1.384,90,0.013,91,0.017,92,0.013,128,2.884,129,3.423,182,0.495,190,1.666,200,2.977,217,2.016,234,3.122,237,1.873,276,1.301,323,1.746,324,1.873,325,2.598,584,2.76,603,2.598,605,2.598,614,3.423,629,3.711,636,3.122,638,3.122,642,3.642,685,3.267,686,3.849,687,3.849,688,5.072,689,5.072,690,5.072,691,5.072,692,5.072,693,4.305,694,5.072,695,3.267,696,5.673,697,3.849,698,3.849,699,3.849,700,3.267]],["title/classes/Logged.html",[36,0.251,187,1.825]],["body/classes/Logged.html",[3,0.323,4,0.285,9,0.285,19,0.95,23,1.292,25,1.013,26,0.024,27,0.889,28,0.932,29,1.013,30,0.402,32,1.669,36,0.323,40,0.439,42,1.663,90,0.015,91,0.019,92,0.015,160,1.222,182,0.576,187,3.507,189,2.895,191,1.955,219,2.536,276,1.434,323,2.032,324,2.18,552,2.965,627,2.757,629,3.927,630,3.023,639,3.023,642,2.536,701,3.023,702,5.59,703,4.48,704,3.803]],["title/components/LoginFormComponent.html",[0,0.523,78,1.145]],["body/components/LoginFormComponent.html",[0,0.71,1,0.744,2,1.141,3,0.163,4,0.144,5,0.961,6,0.961,7,0.961,8,0.961,9,0.144,11,0.961,12,2.649,13,2.649,15,1.473,17,1.473,19,0.736,21,2.088,23,1.188,25,0.512,26,0.024,27,0.838,28,0.659,29,0.512,30,0.503,31,0.34,33,1.788,35,1.187,36,0.25,37,0.961,39,0.844,40,0.163,41,1.477,42,1.47,44,1.141,49,1.028,50,1.576,51,1.103,54,1.028,61,0.618,62,1.473,63,1.473,64,0.961,65,2.008,66,0.961,67,0.961,68,0.7,69,1.226,70,1.473,71,0.7,72,1.791,73,0.7,74,0.961,75,0.7,76,0.844,77,0.961,78,1.555,79,0.7,80,0.844,81,0.961,82,0.744,83,0.844,84,0.744,85,1.477,86,0.744,87,0.961,88,0.961,89,0.961,90,0.008,91,0.012,92,0.008,146,0.844,157,2.936,182,0.291,183,1.141,188,1.304,191,1.215,202,2.886,213,1.529,219,1.916,256,1.395,276,0.891,282,1.294,285,1.916,295,2.304,306,1.916,344,1.529,353,1.69,355,1.69,356,1.103,357,1.69,358,1.69,360,1.819,361,2.211,363,1.283,364,1.395,365,1.819,370,1.529,371,1.395,373,1.283,374,1.395,375,1.698,377,2.138,383,1.187,385,1.966,388,1.187,390,1.529,391,1.395,392,1.529,396,1.187,397,1.283,398,1.283,400,1.529,401,4.443,402,3.164,403,2.602,405,3.547,406,3.547,407,1.698,408,3.164,409,3.547,415,1.698,417,2.344,418,2.602,420,3.164,422,1.923,424,1.698,425,1.395,426,1.698,429,1.698,443,1.698,444,2.602,464,1.283,500,2.602,562,1.395,574,1.529,693,1.923,705,4.91,706,4.334,707,4.223,708,5.105,709,3.473,710,3.473,711,1.923,712,2.266,713,2.266,714,2.266,715,2.138,716,1.923,717,1.529,718,2.266,719,2.266,720,3.473,721,2.266,722,1.923,723,1.923,724,2.266,725,1.923,726,2.266,727,2.948,728,1.698,729,1.698,730,1.698,731,1.923,732,1.923,733,1.923,734,1.923,735,1.923,736,1.923,737,2.266,738,1.923,739,2.266]],["title/modules/LoginModule.html",[93,0.951,740,2.353]],["body/modules/LoginModule.html",[0,0.624,3,0.299,4,0.264,9,0.264,26,0.024,30,0.576,31,0.624,33,1.455,36,0.299,40,0.299,61,1.134,78,2.195,90,0.014,91,0.018,92,0.014,93,1.455,95,1.651,96,1.886,97,2.864,98,2.177,99,2.023,100,1.886,108,2.981,109,2.792,110,2.177,111,1.886,113,2.595,117,2.595,120,2.558,144,3.332,145,2.558,146,1.548,156,2.805,160,1.134,161,2.805,204,3.282,205,2.353,706,3.114,740,4.566,741,3.528,742,3.528,743,4.157,744,4.157,745,3.114]],["title/components/PageNotFoundComponent.html",[0,0.523,79,1.076]],["body/components/PageNotFoundComponent.html",[0,0.868,1,1.142,2,1.556,3,0.25,4,0.221,5,1.474,6,1.474,7,1.474,8,1.474,9,0.221,11,1.474,12,2.879,13,2.879,15,2.009,17,2.009,19,1.142,23,1.004,26,0.024,27,0.94,30,0.425,31,0.522,33,0.949,36,0.341,37,1.474,39,1.295,40,0.25,49,1.577,50,2.149,61,0.949,62,2.009,63,2.009,64,1.474,65,2.454,66,1.474,67,1.474,68,1.074,69,1.564,70,2.009,71,1.074,72,2.285,73,1.074,74,1.474,75,1.074,76,1.295,77,1.474,78,1.142,79,1.787,80,2.486,81,1.474,82,1.142,83,1.295,84,1.142,85,1.216,86,1.142,87,1.474,88,1.474,89,1.474,90,0.012,91,0.016,92,0.012,131,3.637,182,0.447,183,1.556,188,1.074,191,1.657,285,2.445,295,2.816,306,1.577,353,2.305,354,2.605,355,1.692,356,2.305,357,1.692,358,1.692,722,4.912,746,4.574,747,2.951,748,5.389,749,4.737,750,3.476,751,3.476,752,3.476]],["title/components/ProfileDetailComponent.html",[0,0.523,82,1.145]],["body/components/ProfileDetailComponent.html",[0,0.757,1,0.844,2,1.254,3,0.185,4,0.163,5,1.089,6,1.089,7,1.089,8,1.089,9,0.163,11,1.089,12,2.723,13,2.723,15,1.619,17,1.619,19,0.809,20,2.181,21,2.104,22,3.064,23,1.143,25,0.581,26,0.024,27,0.905,28,0.531,29,0.581,30,0.539,31,0.386,32,0.957,33,1.042,34,1.925,35,1.345,36,0.275,37,1.089,39,0.957,40,0.185,41,1.594,42,1.244,44,2.053,46,1.925,48,1.925,49,1.165,50,1.732,51,1.25,54,1.165,61,0.701,62,1.619,63,1.619,64,1.089,65,2.139,66,1.089,67,1.089,68,0.793,69,1.323,70,1.619,71,0.793,72,1.932,73,0.793,74,1.089,75,0.793,76,0.957,77,1.089,78,0.844,79,0.793,80,0.957,81,1.089,82,1.657,83,2.362,84,0.844,85,0.898,86,0.844,87,1.089,88,1.089,89,1.089,90,0.009,91,0.013,92,0.009,111,1.732,146,0.957,157,3.064,182,0.33,183,1.254,188,1.407,191,1.335,256,1.581,276,0.979,279,1.999,284,1.925,285,2.067,286,3.868,287,3.868,288,3.241,295,2.455,306,2.067,327,1.345,342,2.35,353,1.858,355,1.858,356,1.25,357,1.858,358,1.25,360,1.999,361,1.345,365,1.345,371,1.581,373,1.454,383,1.345,388,1.345,392,1.734,396,1.345,397,1.454,398,1.454,449,1.734,464,1.454,468,1.925,661,2.181,662,2.181,715,2.35,728,1.925,730,1.925,753,4.796,754,4.233,755,5.045,756,4.796,757,3.818,758,2.569,759,3.818,760,3.818,761,2.569,762,3.241,763,2.861,764,3.241,765,2.569,766,2.569,767,1.925,768,2.569,769,2.569,770,3.818,771,2.569,772,2.569,773,2.181,774,2.569,775,2.569]],["title/modules/ProfileModule.html",[93,0.951,776,2.353]],["body/modules/ProfileModule.html",[0,0.624,3,0.299,4,0.264,9,0.264,26,0.024,30,0.576,31,0.624,36,0.299,40,0.299,61,1.134,82,2.195,83,1.986,90,0.014,91,0.018,92,0.014,93,1.455,95,1.651,96,1.886,97,2.864,98,2.177,99,2.023,100,1.886,108,2.981,109,2.792,110,2.177,111,1.886,113,2.595,117,2.595,120,2.558,144,3.332,145,2.558,146,1.548,154,3.114,160,1.134,161,2.805,204,3.282,205,2.353,745,3.114,754,3.114,776,4.566,777,3.528,778,3.528,779,4.157,780,4.157]],["title/modules/SharedModule.html",[93,0.951,108,1.582]],["body/modules/SharedModule.html",[0,0.589,3,0.283,4,0.249,9,0.249,26,0.025,30,0.624,31,0.589,36,0.283,40,0.283,90,0.013,91,0.017,92,0.013,93,1.071,95,1.559,97,1.91,100,1.78,108,2.331,113,1.91,117,2.5,145,3.524,146,1.462,425,2.415,497,3.331,781,3.924,782,4.36,783,5.137,784,5.726,785,5.726,786,5.726,787,3.924,788,5.726,789,3.924,790,5.726,791,3.924,792,5.726,793,3.924,794,5.726,795,3.924,796,5.726,797,3.924,798,3.331,799,5.726,800,3.924,801,5.726,802,3.924,803,5.137,804,3.924,805,3.331,806,3.924,807,3.924,808,3.924]],["title/components/SignupFormComponent.html",[0,0.523,84,1.145]],["body/components/SignupFormComponent.html",[0,0.674,1,0.674,2,1.057,3,0.148,4,0.13,5,0.87,6,0.87,7,0.87,8,0.87,9,0.13,11,0.87,12,2.587,13,2.587,15,1.364,17,1.364,19,0.682,21,2.014,23,1.22,25,0.727,26,0.024,27,0.891,28,0.819,29,0.727,30,0.502,31,0.308,33,1.331,35,1.075,36,0.232,37,0.87,39,0.765,40,0.148,41,1.387,42,1.412,43,2.171,44,1.839,49,0.931,50,1.46,51,0.999,54,0.931,61,0.56,62,1.364,63,1.364,64,0.87,65,1.904,66,0.87,67,0.87,68,0.634,69,1.152,70,1.364,71,0.634,72,1.682,73,0.634,74,0.87,75,0.634,76,0.765,77,0.87,78,0.674,79,0.634,80,0.765,81,0.87,82,0.674,83,0.765,84,1.475,85,2.233,86,0.674,87,0.87,88,0.87,89,0.87,90,0.007,91,0.011,92,0.007,146,0.765,157,2.832,182,0.264,183,1.057,188,1.387,189,1.8,191,1.125,196,1.685,202,2.801,213,1.385,219,1.8,256,1.263,276,0.825,285,1.8,295,2.185,306,2.037,327,1.075,344,1.385,353,1.565,355,1.565,356,0.999,357,1.565,358,1.565,360,1.685,361,2.077,363,1.162,364,1.263,365,1.685,370,1.385,371,1.263,373,1.162,374,1.263,375,1.538,377,1.98,383,1.075,385,1.821,388,1.075,390,2.171,391,1.263,392,1.385,396,1.075,397,1.162,398,1.162,400,1.385,401,4.195,402,2.972,403,2.41,405,3.364,406,3.364,407,1.538,408,2.972,409,3.364,410,1.742,411,1.742,415,1.538,417,2.171,418,3.364,420,2.972,424,1.538,425,1.263,426,1.538,429,1.538,443,1.538,444,2.41,464,1.162,562,1.263,574,1.385,695,1.742,711,1.742,715,1.263,716,1.742,717,3.885,723,1.742,725,1.742,727,2.731,728,1.538,729,1.538,730,1.538,733,1.742,734,1.742,735,1.742,736,1.742,738,1.742,767,1.538,809,4.999,810,4.413,811,3.967,812,4.491,813,3.217,814,2.053,815,3.217,816,2.053,817,3.217,818,3.812,819,4.491,820,4.491,821,3.967,822,3.217,823,3.217,824,2.053,825,3.967,826,3.217,827,2.053,828,2.053,829,2.053,830,2.053,831,2.053,832,2.053,833,3.217,834,2.053,835,2.053]],["title/modules/SignupModule.html",[93,0.951,836,2.353]],["body/modules/SignupModule.html",[0,0.624,3,0.299,4,0.264,9,0.264,26,0.024,30,0.576,31,0.624,36,0.299,40,0.299,61,1.134,84,2.195,85,1.865,90,0.014,91,0.018,92,0.014,93,1.455,95,1.651,96,1.886,97,2.864,98,2.177,99,2.023,100,1.886,108,2.981,109,2.792,110,2.177,111,1.886,113,2.595,117,2.595,120,2.558,144,3.332,145,2.558,146,1.548,156,2.805,160,1.134,161,2.805,204,3.282,205,2.353,745,3.114,810,3.114,836,4.566,837,3.528,838,3.528,839,4.157,840,4.157]],["title/interfaces/State.html",[122,1.298,272,1.384]],["body/interfaces/State.html",[3,0.337,4,0.298,9,0.298,26,0.024,28,0.8,30,0.558,32,1.746,33,1.816,40,0.414,90,0.016,91,0.019,92,0.016,122,2.142,125,3.164,160,1.279,182,0.603,272,1.862,273,2.654,276,1.474,520,4.49,841,3.512,842,6.219,843,6.219,844,4.881,845,4.688,846,4.688,847,4.688,848,4.688,849,3.979,850,3.979]],["title/interfaces/State-1.html",[122,1.086,272,1.158,362,1.968]],["body/interfaces/State-1.html",[3,0.289,4,0.255,9,0.255,26,0.024,28,0.805,30,0.467,40,0.417,69,1.779,90,0.014,91,0.018,92,0.014,122,2.529,159,5.033,160,1.095,182,0.516,189,2.626,192,2.78,193,2.469,196,3.031,234,4.134,272,1.593,273,2.271,276,1.336,323,1.82,326,2.469,520,2.708,552,1.952,851,2.708,852,5.702,853,5.211,854,3.517,855,4.913,856,3.006,857,3.006,858,4.012,859,3.406,860,4.913,861,4.012,862,4.012,863,4.424,864,4.012]],["title/interfaces/State-2.html",[122,1.086,272,1.158,865,2.917]],["body/interfaces/State-2.html",[3,0.332,4,0.293,9,0.293,26,0.024,28,0.641,30,0.413,33,1.257,40,0.444,90,0.016,91,0.019,92,0.016,122,2.546,160,1.257,182,0.592,187,3.532,189,2.8,192,2.581,196,2.413,272,1.83,273,2.608,276,1.459,552,2.242,854,3.839,856,3.452,857,3.452,859,3.911,863,3.911,866,3.11,867,5.689,868,4.608]],["title/components/ToolbarComponent.html",[0,0.523,86,1.145]],["body/components/ToolbarComponent.html",[0,0.885,1,0.953,2,1.371,3,0.209,4,0.184,5,1.23,6,1.23,7,1.23,8,1.23,9,0.184,11,1.23,12,2.789,13,2.789,15,1.77,17,1.77,19,0.885,22,3.088,23,1.25,25,0.656,26,0.024,27,0.97,28,0.744,29,0.656,30,0.479,31,0.435,32,1.081,33,1.334,36,0.3,37,1.23,40,0.209,41,1.015,42,0.792,44,1.938,61,0.792,62,1.77,63,1.77,64,1.23,65,2.267,66,1.23,67,1.23,68,0.896,69,1.419,70,1.77,71,0.896,72,2.073,73,0.896,74,1.23,75,0.896,76,1.821,77,1.23,78,0.953,79,0.896,80,1.081,81,1.23,82,0.953,83,1.081,84,0.953,85,1.015,86,1.756,87,2.402,88,1.23,89,1.23,90,0.01,91,0.014,92,0.01,122,1.081,162,2.186,182,0.373,183,1.371,188,1.289,189,1.894,191,1.459,237,1.412,276,1.07,285,2.218,295,2.601,306,1.894,327,1.519,342,2.569,365,1.519,378,1.958,379,2.463,449,1.958,478,4.149,482,3.662,486,4.149,489,4.538,499,3.543,500,3.127,501,3.543,510,4.149,514,2.463,544,3.543,546,3.127,547,2.463,557,2.463,562,1.786,767,2.174,869,2.463,870,4.888,871,4.174,872,2.901,873,4.174,874,2.901,875,4.174,876,2.901,877,2.901,878,2.901,879,2.901,880,2.901]],["title/interfaces/User.html",[44,1.145,272,1.384]],["body/interfaces/User.html",[3,0.348,4,0.307,9,0.307,22,2.528,26,0.023,28,0.876,40,0.348,44,2.07,90,0.016,91,0.02,92,0.016,182,0.621,235,2.191,272,2.325,273,2.733,275,3.258,276,1.501,279,3.43,282,2.612,715,4.031,717,4.42,881,4.098]],["title/injectables/UserService.html",[21,1.298,190,1.145]],["body/injectables/UserService.html",[3,0.176,4,0.155,9,0.155,19,0.779,21,1.369,22,3.012,23,1.219,25,0.999,26,0.025,27,0.877,28,0.771,29,0.999,30,0.543,31,0.366,32,0.909,33,1.206,34,1.829,36,0.176,40,0.176,41,1.938,42,1.206,44,2.25,46,2.753,47,2.072,48,1.829,54,1.667,85,1.285,90,0.015,91,0.012,92,0.008,111,1.667,160,1.003,182,0.314,183,1.207,188,1.629,189,2.393,190,1.207,192,2.748,193,2.72,196,2.314,199,2.799,207,1.502,214,1.647,217,1.278,230,2.48,235,1.667,237,1.188,238,2.08,262,3.56,264,2.48,276,0.942,282,1.369,306,1.107,327,1.278,482,3.952,546,3.685,553,2.08,586,1.829,587,3.685,602,3.311,603,1.647,604,1.829,605,1.647,606,1.647,607,2.072,611,3.685,614,2.48,615,2.753,616,2.753,618,1.829,620,2.072,700,2.072,717,3.56,731,4.175,732,4.175,756,4.175,762,4.705,763,2.753,764,4.175,860,3.119,882,2.072,883,4.918,884,4.918,885,2.441,886,2.441,887,4.918,888,3.675,889,2.441,890,3.675,891,3.675,892,2.441,893,2.441,894,3.675,895,3.675,896,3.675,897,3.675,898,2.441,899,2.441,900,3.119,901,2.441,902,2.441,903,4.42,904,2.441,905,4.42,906,2.441,907,2.441,908,2.441,909,3.675,910,3.675,911,2.441,912,2.441,913,2.072,914,2.441]],["title/injectables/ValidateFormService.html",[190,1.145,202,1.696]],["body/injectables/ValidateFormService.html",[3,0.283,4,0.249,9,0.249,19,1.214,23,1.089,25,0.887,26,0.024,27,1.342,28,0.546,29,0.887,30,0.352,31,0.589,36,0.283,40,0.283,90,0.013,91,0.017,92,0.013,182,0.504,183,1.688,188,1.212,190,1.688,192,2.99,202,2.5,217,2.055,229,4.36,234,3.161,235,1.78,238,2.907,264,3.467,282,2.455,368,2.94,715,2.415,773,3.331,798,5.792,913,3.331,915,4.861,916,3.331,917,5.137,918,3.924,919,5.137,920,3.924,921,5.137,922,5.137,923,4.36,924,3.924,925,3.924,926,3.924,927,3.924,928,5.137,929,3.924,930,3.924,931,3.924,932,3.924,933,3.924]],["title/coverage.html",[934,4.029]],["body/coverage.html",[0,0.967,1,0.962,9,0.186,10,2.485,21,1.09,26,0.024,28,0.407,36,0.386,44,0.962,52,1.976,68,0.904,69,0.85,71,0.904,73,0.904,75,0.904,78,0.962,79,0.904,82,0.962,84,0.962,86,0.962,90,0.01,91,0.014,92,0.01,122,1.83,125,1.976,129,1.976,131,1.976,134,1.976,147,1.976,151,1.976,153,1.976,155,1.976,178,2.194,180,2.485,181,2.485,187,2.2,190,1.944,199,1.425,200,1.328,201,1.657,202,1.425,218,2.485,272,2.257,274,2.485,283,3.316,284,3.147,366,4.288,395,2.485,400,3.316,477,2.485,537,5.535,553,1.657,582,2.485,584,1.425,606,2.835,608,2.194,612,2.194,628,3.348,633,1.802,635,1.802,637,1.802,640,1.657,641,1.657,647,2.485,648,2.485,679,2.485,685,2.485,701,2.835,705,2.485,706,2.194,729,2.194,746,2.485,747,2.485,753,2.485,754,2.194,809,2.485,810,2.194,841,3.147,851,3.316,854,2.835,856,3.147,866,3.316,869,2.485,881,2.485,882,2.485,915,2.485,916,2.485,934,2.485,935,2.928,936,2.928,937,2.928,938,4.913,939,4.913,940,6.588,941,5.684,942,5.368,943,3.566,944,3.566,945,2.928,946,2.928,947,2.928,948,2.928,949,2.928,950,2.928,951,2.928,952,2.928,953,2.928,954,2.928,955,4.201,956,2.928,957,4.201,958,4.201,959,2.928,960,2.928,961,2.928,962,5.684,963,3.566,964,2.485,965,2.485,966,2.928,967,2.928]],["title/dependencies.html",[96,1.901,968,2.917]],["body/dependencies.html",[26,0.024,31,0.708,32,1.756,90,0.016,91,0.02,92,0.016,96,2.139,115,4.898,116,4.323,128,3.533,146,1.756,205,2.669,237,2.295,425,2.902,519,4.003,805,4.003,969,7.093,970,4.716,971,4.716,972,4.716,973,4.716,974,4.716,975,4.716,976,4.716,977,4.716,978,4.716,979,4.716,980,4.716]],["title/miscellaneous/functions.html",[981,1.651,982,3.556]],["body/miscellaneous/functions.html",[25,1.355,26,0.023,27,1.19,29,1.355,90,0.017,91,0.02,92,0.017,122,2.472,182,0.646,188,1.851,552,3.23,851,3.39,857,4.492,866,3.39,963,5.634,981,2.843,982,4.264,983,4.264,984,4.264]],["title/index.html",[182,0.375,985,2.917,986,2.917]],["body/index.html",[4,0.304,26,0.02,39,1.782,90,0.016,91,0.02,92,0.016,316,4.062,763,3.585,782,4.062,818,4.062,987,4.785,988,5.822,989,4.785,990,4.785,991,4.785,992,4.785,993,4.785,994,5.822,995,6.276,996,6.276,997,4.785,998,4.785,999,4.785,1000,4.785,1001,4.785,1002,4.785,1003,4.785,1004,6.693,1005,4.785,1006,4.785,1007,4.785,1008,4.785,1009,4.785,1010,4.062,1011,4.785,1012,5.822,1013,5.822,1014,4.785,1015,4.785,1016,4.785,1017,4.785]],["title/modules.html",[95,1.885]],["body/modules.html",[26,0.02,90,0.017,91,0.02,92,0.017,94,3.328,95,1.959,105,3.035,106,3.035,107,3.035,108,2.237,116,5.135,740,3.328,776,3.328,836,3.328,1018,6.854,1019,6.854,1020,6.99,1021,5.929,1022,5.929]],["title/overview.html",[1023,4.029]],["body/overview.html",[1,2.092,2,1.125,21,1.992,26,0.024,61,0.935,68,1.651,71,1.651,73,1.651,75,1.651,78,1.757,79,1.651,82,1.757,84,1.757,86,1.757,90,0.012,91,0.016,92,0.012,93,0.935,94,4.725,95,1.36,96,1.554,97,1.667,98,1.793,99,1.667,100,1.554,101,2.907,102,2.907,103,2.907,104,2.907,105,3.291,106,4.197,107,4.135,108,2.889,109,2.455,110,1.793,111,1.554,178,2.566,197,2.907,198,2.907,199,2.602,200,2.426,201,3.026,202,2.602,217,1.793,273,1.938,362,2.311,366,2.108,623,2.907,624,2.907,627,2.108,740,4.197,741,2.907,742,2.907,776,4.197,777,2.907,778,2.907,836,4.197,837,2.907,838,2.907,1023,2.907,1024,3.425,1025,3.425,1026,3.425,1027,3.425,1028,3.425]],["title/routes.html",[144,2.686]],["body/routes.html",[26,0.022,90,0.019,91,0.022,92,0.019,144,3.158]],["title/miscellaneous/typealiases.html",[981,1.651,1029,4.19]],["body/miscellaneous/typealiases.html",[26,0.023,28,0.733,90,0.018,91,0.021,92,0.018,182,0.677,187,2.76,584,2.564,628,2.983,640,2.983,641,2.983,642,3.816,701,3.556,981,2.983,1030,5.27,1031,4.473,1032,4.473]],["title/miscellaneous/variables.html",[981,1.651,1033,3.556]],["body/miscellaneous/variables.html",[26,0.024,28,0.952,33,0.998,54,1.659,90,0.012,91,0.017,92,0.012,122,1.826,125,3.309,141,3.105,159,2.74,182,0.47,187,2.896,193,2.251,196,2.896,234,2.251,282,2.362,323,3.083,324,3.307,520,2.468,606,3.987,608,3.673,609,3.105,612,3.673,628,2.07,633,3.017,634,2.468,635,3.017,636,2.251,637,3.017,638,2.251,701,2.468,704,3.105,841,2.74,844,3.105,849,3.105,850,3.105,851,2.468,852,3.105,854,3.987,855,3.105,866,2.468,900,3.105,923,4.161,943,3.105,944,4.694,964,3.105,965,3.105,981,2.07,983,3.105,984,3.105,1010,4.161,1031,4.694,1032,3.105,1033,3.105,1034,3.658,1035,3.658,1036,4.903,1037,3.658,1038,4.903,1039,3.658,1040,3.658,1041,3.658]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":366,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.3.6",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["0.3rem",{"_index":579,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{}}}],["0.5rem",{"_index":734,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["0.8rem",{"_index":569,"title":{},"body":{"components/EventListComponent.html":{}}}],["0.9.1",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":362,"title":{"interfaces/State-1.html":{}},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"overview.html":{}}}],["1.3rem",{"_index":676,"title":{},"body":{"components/HomePageComponent.html":{}}}],["1.4",{"_index":678,"title":{},"body":{"components/HomePageComponent.html":{}}}],["1.5rem",{"_index":572,"title":{},"body":{"components/EventListComponent.html":{}}}],["1.9.0",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1025,"title":{},"body":{"overview.html":{}}}],["100",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["10px",{"_index":379,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["12px",{"_index":733,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["14",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":577,"title":{},"body":{"components/EventListComponent.html":{}}}],["15px",{"_index":580,"title":{},"body":{"components/EventListComponent.html":{}}}],["1px",{"_index":566,"title":{},"body":{"components/EventListComponent.html":{}}}],["1rem",{"_index":392,"title":{},"body":{"components/EventDetailComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["2",{"_index":865,"title":{"interfaces/State-2.html":{}},"body":{}}],["2.0.8",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["2.2rem",{"_index":667,"title":{},"body":{"components/HomePageComponent.html":{}}}],["2/6",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":468,"title":{},"body":{"components/EventFormComponent.html":{},"components/HomePageComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["22",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":664,"title":{},"body":{"components/HomePageComponent.html":{}}}],["28",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["2rem",{"_index":374,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["300",{"_index":578,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{}}}],["30px",{"_index":672,"title":{},"body":{"components/HomePageComponent.html":{}}}],["33",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":774,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["36",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["3rem",{"_index":668,"title":{},"body":{"components/HomePageComponent.html":{}}}],["4",{"_index":1027,"title":{},"body":{"overview.html":{}}}],["4/10",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["4/11",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["4/14",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":729,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["4px",{"_index":398,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["4rem",{"_index":571,"title":{},"body":{"components/EventListComponent.html":{}}}],["5",{"_index":1028,"title":{},"body":{"overview.html":{}}}],["5/8",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":466,"title":{},"body":{"components/EventFormComponent.html":{}}}],["56px",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["5px",{"_index":399,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["6",{"_index":1026,"title":{},"body":{"overview.html":{}}}],["6.4.0",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":735,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["600px",{"_index":677,"title":{},"body":{"components/HomePageComponent.html":{}}}],["62",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["65",{"_index":673,"title":{},"body":{"components/HomePageComponent.html":{}}}],["6px",{"_index":376,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["70",{"_index":558,"title":{},"body":{"components/EventListComponent.html":{}}}],["75",{"_index":395,"title":{},"body":{"components/EventDetailComponent.html":{},"coverage.html":{}}}],["8",{"_index":1024,"title":{},"body":{"overview.html":{}}}],["8.0.1",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":992,"title":{},"body":{"index.html":{}}}],["80",{"_index":560,"title":{},"body":{"components/EventListComponent.html":{}}}],["800px",{"_index":369,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["90",{"_index":570,"title":{},"body":{"components/EventListComponent.html":{}}}],["900",{"_index":575,"title":{},"body":{"components/EventListComponent.html":{}}}],["95",{"_index":581,"title":{},"body":{"components/EventListComponent.html":{}}}],["9f354e7919a3f56e537616f46b1c1e87b5632d7c7227f2bd469762eed79a6296",{"_index":683,"title":{},"body":{"injectables/ImagesService.html":{}}}],["accenture",{"_index":658,"title":{},"body":{"components/HomePageComponent.html":{}}}],["accordingly",{"_index":247,"title":{},"body":{"injectables/ErrorService.html":{}}}],["account",{"_index":727,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["acn",{"_index":387,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["action",{"_index":552,"title":{},"body":{"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["action.payload",{"_index":863,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["action.type",{"_index":859,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["actionreducermap",{"_index":844,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":642,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"miscellaneous/typealiases.html":{}}}],["activatedroute",{"_index":297,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["actual_component",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["add",{"_index":454,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["addedby",{"_index":277,"title":{},"body":{"interfaces/Event.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{}}}],["addedbyvalue",{"_index":438,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform",{"_index":404,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get('date",{"_index":458,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get('description",{"_index":462,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get('location",{"_index":460,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get('title",{"_index":456,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get(\\'date",{"_index":472,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get(\\'description",{"_index":476,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get(\\'location",{"_index":474,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get(\\'title",{"_index":470,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addevent",{"_index":583,"title":{},"body":{"injectables/EventService.html":{}}}],["addevent(event",{"_index":589,"title":{},"body":{"injectables/EventService.html":{}}}],["again",{"_index":270,"title":{},"body":{"injectables/ErrorService.html":{}}}],["aliases",{"_index":1030,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":391,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["already",{"_index":833,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["angular",{"_index":782,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["angular/animations",{"_index":519,"title":{},"body":{"components/EventListComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":205,"title":{},"body":{"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":207,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":425,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":789,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":793,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":804,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":797,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":800,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":791,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/slide",{"_index":802,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/table",{"_index":795,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":787,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"dependencies.html":{}}}],["animate",{"_index":518,"title":{},"body":{"components/EventListComponent.html":{}}}],["animate(300",{"_index":530,"title":{},"body":{"components/EventListComponent.html":{}}}],["animations",{"_index":523,"title":{},"body":{"components/EventListComponent.html":{}}}],["apiurl",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{}}}],["app.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.store",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":654,"title":{},"body":{"components/HomePageComponent.html":{}}}],["application/json",{"_index":900,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":94,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":105,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":1005,"title":{},"body":{"index.html":{}}}],["authenticated",{"_index":887,"title":{},"body":{"injectables/UserService.html":{}}}],["authguard",{"_index":147,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authorization",{"_index":682,"title":{},"body":{"injectables/ImagesService.html":{}}}],["auto",{"_index":367,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["automatically",{"_index":1001,"title":{},"body":{"index.html":{}}}],["available",{"_index":1022,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":250,"title":{},"body":{"injectables/ErrorService.html":{}}}],["background",{"_index":357,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["background('/assets/imgs/patt1.jpg",{"_index":660,"title":{},"body":{"components/HomePageComponent.html":{}}}],["background('/assets/imgs/patt2.jpg",{"_index":354,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["background('/assets/imgs/patt4.jpg",{"_index":465,"title":{},"body":{"components/EventFormComponent.html":{}}}],["background('/assets/imgs/patt5.jpg",{"_index":728,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["bad",{"_index":266,"title":{},"body":{"injectables/ErrorService.html":{}}}],["black",{"_index":665,"title":{},"body":{"components/HomePageComponent.html":{}}}],["block",{"_index":662,"title":{},"body":{"components/HomePageComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["body",{"_index":255,"title":{},"body":{"injectables/ErrorService.html":{}}}],["boolean",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"classes/Logged.html":{},"components/SignupFormComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["boolean(localstorage.getitem('user",{"_index":914,"title":{},"body":{"injectables/UserService.html":{}}}],["bootstrap",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["border",{"_index":396,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["bottom",{"_index":373,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["box",{"_index":380,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["browse",{"_index":1020,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":370,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["build",{"_index":1004,"title":{},"body":{"index.html":{}}}],["button",{"_index":377,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["calc(100",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["canactivate",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["card",{"_index":359,"title":{},"body":{"components/EventDetailComponent.html":{},"components/HomePageComponent.html":{}}}],["case",{"_index":860,"title":{},"body":{"interfaces/State-1.html":{},"injectables/UserService.html":{}}}],["catcherror",{"_index":603,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{}}}],["catcherror(error",{"_index":694,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["catcherror(this.errorservice.handleerror",{"_index":616,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["center",{"_index":355,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["change",{"_index":818,"title":{},"body":{"components/SignupFormComponent.html":{},"index.html":{}}}],["check",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["checkuser",{"_index":883,"title":{},"body":{"injectables/UserService.html":{}}}],["class",{"_index":36,"title":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["classes",{"_index":627,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"overview.html":{}}}],["cli",{"_index":990,"title":{},"body":{"index.html":{}}}],["click",{"_index":418,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["client",{"_index":242,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/ImagesService.html":{}}}],["clues",{"_index":257,"title":{},"body":{"injectables/ErrorService.html":{}}}],["cluster_appmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":197,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":198,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":623,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_declarations",{"_index":624,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_imports",{"_index":625,"title":{},"body":{"modules/EventsModule.html":{}}}],["cluster_loginmodule",{"_index":741,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_declarations",{"_index":742,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_imports",{"_index":743,"title":{},"body":{"modules/LoginModule.html":{}}}],["cluster_profilemodule",{"_index":777,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":778,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":779,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_signupmodule",{"_index":837,"title":{},"body":{"modules/SignupModule.html":{},"overview.html":{}}}],["cluster_signupmodule_declarations",{"_index":838,"title":{},"body":{"modules/SignupModule.html":{},"overview.html":{}}}],["cluster_signupmodule_imports",{"_index":839,"title":{},"body":{"modules/SignupModule.html":{}}}],["code",{"_index":254,"title":{},"body":{"injectables/ErrorService.html":{}}}],["color",{"_index":383,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["column",{"_index":364,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["commonmodule",{"_index":204,"title":{},"body":{"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["console",{"_index":226,"title":{},"body":{"injectables/ErrorService.html":{}}}],["console.error",{"_index":260,"title":{},"body":{"injectables/ErrorService.html":{}}}],["console.error('an",{"_index":248,"title":{},"body":{"injectables/ErrorService.html":{}}}],["const",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"classes/Logged.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"injectables/UserService.html":{}}}],["constants",{"_index":609,"title":{},"body":{"injectables/EventService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["constructor(actions",{"_index":686,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["constructor(eventservice",{"_index":491,"title":{},"body":{"components/EventListComponent.html":{}}}],["constructor(http",{"_index":586,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["constructor(payload",{"_index":630,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{}}}],["constructor(public",{"_index":639,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{}}}],["constructor(route",{"_index":296,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["constructor(router",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(store",{"_index":872,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["constructor(userservice",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["constructor(validateformservice",{"_index":407,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["contain",{"_index":256,"title":{},"body":{"injectables/ErrorService.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["container",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["contains",{"_index":808,"title":{},"body":{"modules/SharedModule.html":{}}}],["content",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":563,"title":{},"body":{"components/EventListComponent.html":{}}}],["core",{"_index":215,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/auth",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/core.module",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["core/event.service",{"_index":325,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/LayoutEffects.html":{}}}],["core/images.service",{"_index":328,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["core/user.service",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["core/validate",{"_index":426,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["coremodule",{"_index":106,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":890,"title":{},"body":{"injectables/UserService.html":{}}}],["cover",{"_index":356,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["coverage",{"_index":934,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crafted",{"_index":657,"title":{},"body":{"components/HomePageComponent.html":{}}}],["crate",{"_index":412,"title":{},"body":{"components/EventFormComponent.html":{}}}],["create",{"_index":419,"title":{},"body":{"components/EventFormComponent.html":{}}}],["createform",{"_index":405,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["date",{"_index":278,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{}}}],["datevalue",{"_index":434,"title":{},"body":{"components/EventFormComponent.html":{}}}],["dd/mm/yyyy",{"_index":351,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["declarations",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["decorators",{"_index":695,"title":{},"body":{"injectables/LayoutEffects.html":{},"components/SignupFormComponent.html":{}}}],["default",{"_index":323,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["delete",{"_index":302,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["delete(`${environment.apiurl}events/${id",{"_index":619,"title":{},"body":{"injectables/EventService.html":{}}}],["deleteevent",{"_index":291,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["deleteevent(event",{"_index":300,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["deleteevent(id",{"_index":591,"title":{},"body":{"injectables/EventService.html":{}}}],["dependencies",{"_index":96,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":235,"title":{},"body":{"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["descriptionvalue",{"_index":436,"title":{},"body":{"components/EventFormComponent.html":{}}}],["destroy",{"_index":499,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["detail",{"_index":286,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["detail'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["detail.component",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{},"modules/ProfileModule.html":{}}}],["detail.component.html",{"_index":288,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["detail.component.scss",{"_index":287,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["detail.component.ts",{"_index":284,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ProfileDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:17",{"_index":757,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["detail.component.ts:19",{"_index":320,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:20",{"_index":321,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":322,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":298,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":765,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":758,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":319,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":761,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":307,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:50",{"_index":310,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:62",{"_index":315,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:77",{"_index":301,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail/event",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"modules/EventsModule.html":{},"coverage.html":{}}}],["detail/profile",{"_index":754,"title":{},"body":{"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["details",{"_index":345,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["determine",{"_index":894,"title":{},"body":{"injectables/UserService.html":{}}}],["dev",{"_index":998,"title":{},"body":{"index.html":{}}}],["development",{"_index":993,"title":{},"body":{"index.html":{}}}],["different",{"_index":227,"title":{},"body":{"injectables/ErrorService.html":{}}}],["directive",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["directives",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["directory",{"_index":1007,"title":{},"body":{"index.html":{}}}],["display",{"_index":360,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["display:inline",{"_index":674,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dist",{"_index":1006,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["dynamic",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":346,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["effect",{"_index":696,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["effectsmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.forroot([layouteffects",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["elementref",{"_index":821,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["email",{"_index":715,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/User.html":{},"injectables/ValidateFormService.html":{}}}],["empty",{"_index":922,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["end",{"_index":372,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{}}}],["entrycomponents",{"_index":806,"title":{},"body":{"modules/SharedModule.html":{}}}],["environment",{"_index":606,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":607,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{}}}],["err",{"_index":721,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["error",{"_index":234,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/LayoutEffects.html":{},"interfaces/State-1.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/variables.html":{}}}],["error.error",{"_index":239,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error.error.message",{"_index":249,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error.service",{"_index":214,"title":{},"body":{"modules/CoreModule.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["error.status",{"_index":261,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errorevent",{"_index":241,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errors",{"_index":229,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/ValidateFormService.html":{}}}],["errorservice",{"_index":199,"title":{"injectables/ErrorService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["eui",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["event",{"_index":69,"title":{"interfaces/Event.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State-1.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["event.addedby",{"_index":341,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["event.date",{"_index":350,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["event.description",{"_index":352,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["event.location",{"_index":349,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["event.service",{"_index":209,"title":{},"body":{"modules/CoreModule.html":{}}}],["event.title",{"_index":347,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["eventdetailcomponent",{"_index":68,"title":{"components/EventDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventdetails/:id",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["eventform/:id",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["eventformcomponent",{"_index":71,"title":{"components/EventFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventlistcomponent",{"_index":73,"title":{"components/EventListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["events",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/ToolbarComponent.html":{}}}],["events.site",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events/event",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["events/events.module",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["events[0",{"_index":549,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventservice",{"_index":200,"title":{"injectables/EventService.html":{}},"body":{"modules/CoreModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/LayoutEffects.html":{},"coverage.html":{},"overview.html":{}}}],["eventsmodule",{"_index":107,"title":{"modules/EventsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsui",{"_index":987,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1015,"title":{},"body":{"index.html":{}}}],["exists",{"_index":303,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["explaining",{"_index":921,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["export",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["exports",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["facing",{"_index":263,"title":{},"body":{"injectables/ErrorService.html":{}}}],["false",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":386,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["fb",{"_index":408,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["field",{"_index":798,"title":{},"body":{"modules/SharedModule.html":{},"injectables/ValidateFormService.html":{}}}],["field.errors",{"_index":924,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.email",{"_index":932,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.maxlength",{"_index":930,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.maxlength.requiredlength",{"_index":931,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.minlength",{"_index":927,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.minlength.requiredlength",{"_index":929,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.required",{"_index":925,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["files",{"_index":1003,"title":{},"body":{"index.html":{}}}],["filter",{"_index":496,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["filteredevents",{"_index":852,"title":{},"body":{"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["fired",{"_index":417,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["flag",{"_index":1009,"title":{},"body":{"index.html":{}}}],["flex",{"_index":361,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["flow",{"_index":363,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["font",{"_index":385,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form",{"_index":401,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["form.component",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/SignupModule.html":{}}}],["form.component.html",{"_index":403,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.scss",{"_index":402,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts",{"_index":400,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:16",{"_index":713,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:17",{"_index":709,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:19",{"_index":421,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:20",{"_index":422,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{}}}],["form.component.ts:21",{"_index":824,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:22",{"_index":410,"title":{},"body":{"components/EventFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:23",{"_index":813,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:25",{"_index":423,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:26",{"_index":711,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:32",{"_index":415,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:39",{"_index":814,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:42",{"_index":712,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:49",{"_index":411,"title":{},"body":{"components/EventFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:56",{"_index":816,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:72",{"_index":416,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.service",{"_index":213,"title":{},"body":{"modules/CoreModule.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.service.ts",{"_index":916,"title":{},"body":{"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["form.service.ts:13",{"_index":920,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["form.service.ts:4",{"_index":918,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["form/event",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventFormComponent.html":{},"modules/EventsModule.html":{},"coverage.html":{}}}],["form/login",{"_index":706,"title":{},"body":{"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"coverage.html":{}}}],["form/signup",{"_index":810,"title":{},"body":{"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"coverage.html":{}}}],["formbuilder",{"_index":409,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["formgroup",{"_index":420,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["formsmodule",{"_index":784,"title":{},"body":{"modules/SharedModule.html":{}}}],["found",{"_index":722,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["found.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":749,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":748,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":747,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:11",{"_index":750,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:15",{"_index":751,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["fresh",{"_index":653,"title":{},"body":{"components/HomePageComponent.html":{}}}],["full",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":856,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{},"coverage.html":{}}}],["functions",{"_index":982,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":989,"title":{},"body":{"index.html":{}}}],["generic",{"_index":233,"title":{},"body":{"injectables/ErrorService.html":{}}}],["get('https://api.unsplash.com/photos/random?orientation=landscape&query=event",{"_index":684,"title":{},"body":{"injectables/ImagesService.html":{}}}],["get_filtered_events",{"_index":633,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_filtered_events_error",{"_index":637,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_filtered_events_success",{"_index":635,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["geterror",{"_index":917,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["geterror(name",{"_index":919,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["getevent",{"_index":292,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["getevent(id",{"_index":593,"title":{},"body":{"injectables/EventService.html":{}}}],["getevents",{"_index":487,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["getfilteredevents",{"_index":584,"title":{"classes/GetFilteredEvents.html":{}},"body":{"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getfilteredevents(filter",{"_index":596,"title":{},"body":{"injectables/EventService.html":{}}}],["getfilteredeventserror",{"_index":641,"title":{"classes/GetFilteredEventsError.html":{}},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getfilteredeventssuccess",{"_index":640,"title":{"classes/GetFilteredEventsSuccess.html":{}},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getimage",{"_index":293,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{}}}],["getting",{"_index":985,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":755,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["graph",{"_index":1021,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":568,"title":{},"body":{"components/EventListComponent.html":{}}}],["guard",{"_index":178,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.service.ts",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guard.service.ts:16",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.service.ts:6",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":666,"title":{},"body":{"components/HomePageComponent.html":{}}}],["h2",{"_index":671,"title":{},"body":{"components/HomePageComponent.html":{}}}],["h3",{"_index":393,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["h4",{"_index":775,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["hammerjs",{"_index":805,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["handle",{"_index":246,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handleerror",{"_index":220,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handleerror(error",{"_index":222,"title":{},"body":{"injectables/ErrorService.html":{}}}],["happened",{"_index":267,"title":{},"body":{"injectables/ErrorService.html":{}}}],["header",{"_index":389,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["headers",{"_index":611,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["height",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{}}}],["home",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["homepagecomponent",{"_index":75,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":655,"title":{},"body":{"components/HomePageComponent.html":{}}}],["html",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["http",{"_index":230,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["http://localhost:3000",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1000,"title":{},"body":{"index.html":{}}}],["http://server.open",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_header_key_content_type",{"_index":612,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["http_header_value_application_json",{"_index":608,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":587,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":206,"title":{},"body":{"modules/CoreModule.html":{}}}],["httperrorresponse",{"_index":223,"title":{},"body":{"injectables/ErrorService.html":{}}}],["httpheaders",{"_index":602,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["id",{"_index":279,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"components/ProfileDetailComponent.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["idvalue",{"_index":440,"title":{},"body":{"components/EventFormComponent.html":{}}}],["image",{"_index":312,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{}}}],["images.service",{"_index":211,"title":{},"body":{"modules/CoreModule.html":{}}}],["imagesservice",{"_index":201,"title":{"injectables/ImagesService.html":{}},"body":{"modules/CoreModule.html":{},"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["imageurl",{"_index":289,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["img",{"_index":394,"title":{},"body":{"components/EventDetailComponent.html":{},"components/HomePageComponent.html":{}}}],["img.urls.small",{"_index":336,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["implements",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["import('./login/login.module').then(m",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile.module').then(m",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./signup/signup.module').then(m",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{}}}],["include",{"_index":353,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["incorrect",{"_index":891,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":182,"title":{"index.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["inicialize",{"_index":815,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["initialstate",{"_index":854,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":190,"title":{"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["injectables",{"_index":217,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"overview.html":{}}}],["inline",{"_index":661,"title":{},"body":{"components/HomePageComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["input",{"_index":819,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["insert",{"_index":413,"title":{},"body":{"components/EventFormComponent.html":{}}}],["instanceof",{"_index":240,"title":{},"body":{"injectables/ErrorService.html":{}}}],["instanze",{"_index":710,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["interface",{"_index":272,"title":{"interfaces/Event.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/User.html":{}},"body":{"interfaces/Event.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":273,"title":{},"body":{"interfaces/Event.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isauthenticated",{"_index":482,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["isn't",{"_index":933,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["isowner",{"_index":294,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["isowner(event",{"_index":314,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["italic",{"_index":576,"title":{},"body":{"components/EventListComponent.html":{}}}],["item",{"_index":561,"title":{},"body":{"components/EventListComponent.html":{}}}],["items",{"_index":565,"title":{},"body":{"components/EventListComponent.html":{}}}],["json.parse(localstorage.getitem('user",{"_index":449,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/ProfileDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["json.parse(userstring",{"_index":340,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["json.stringify(r",{"_index":904,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(us[0",{"_index":911,"title":{},"body":{"injectables/UserService.html":{}}}],["justify",{"_index":371,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["karma",{"_index":1017,"title":{},"body":{"index.html":{}}}],["kinds",{"_index":228,"title":{},"body":{"injectables/ErrorService.html":{}}}],["later",{"_index":271,"title":{},"body":{"injectables/ErrorService.html":{}}}],["layout",{"_index":520,"title":{},"body":{"components/EventListComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["layout.actions",{"_index":853,"title":{},"body":{"interfaces/State-1.html":{}}}],["layout.get_filtered_events",{"_index":861,"title":{},"body":{"interfaces/State-1.html":{}}}],["layout.get_filtered_events_error",{"_index":864,"title":{},"body":{"interfaces/State-1.html":{}}}],["layout.get_filtered_events_success",{"_index":862,"title":{},"body":{"interfaces/State-1.html":{}}}],["layout.getfilteredevents(filter",{"_index":554,"title":{},"body":{"components/EventListComponent.html":{}}}],["layout/get_filtered_events",{"_index":634,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"miscellaneous/variables.html":{}}}],["layout/get_filtered_events_error",{"_index":638,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"miscellaneous/variables.html":{}}}],["layout/get_filtered_events_success",{"_index":636,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"miscellaneous/variables.html":{}}}],["layouteffects",{"_index":129,"title":{"injectables/LayoutEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/LayoutEffects.html":{},"coverage.html":{}}}],["layoutreducer",{"_index":847,"title":{},"body":{"interfaces/State.html":{}}}],["layoutreducer.reducer",{"_index":850,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["layoutreducer.state",{"_index":842,"title":{},"body":{"interfaces/State.html":{}}}],["lazy",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["left",{"_index":378,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/ToolbarComponent.html":{}}}],["legend",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["length",{"_index":928,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["line",{"_index":535,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{}}}],["link",{"_index":573,"title":{},"body":{"components/EventListComponent.html":{}}}],["list",{"_index":479,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["list'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["list.component",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{}}}],["list.component.html",{"_index":481,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.scss",{"_index":480,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts",{"_index":477,"title":{},"body":{"components/EventListComponent.html":{},"coverage.html":{}}}],["list.component.ts:112",{"_index":498,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:42",{"_index":507,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:43",{"_index":508,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:44",{"_index":509,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:45",{"_index":511,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:46",{"_index":512,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:47",{"_index":492,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:52",{"_index":513,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:55",{"_index":502,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:79",{"_index":504,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:86",{"_index":493,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:96",{"_index":495,"title":{},"body":{"components/EventListComponent.html":{}}}],["list/event",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"coverage.html":{}}}],["loadchildren",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":759,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["localstorage",{"_index":317,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["localstorage.getitem('user",{"_index":339,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["localstorage.setitem('user",{"_index":903,"title":{},"body":{"injectables/UserService.html":{}}}],["location",{"_index":280,"title":{},"body":{"interfaces/Event.html":{},"components/EventFormComponent.html":{}}}],["locationvalue",{"_index":432,"title":{},"body":{"components/EventFormComponent.html":{}}}],["log",{"_index":762,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["logged",{"_index":187,"title":{"classes/Logged.html":{}},"body":{"guards/AuthGuard.html":{},"classes/Logged.html":{},"interfaces/State-2.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["login(user",{"_index":888,"title":{},"body":{"injectables/UserService.html":{}}}],["login.actions",{"_index":867,"title":{},"body":{"interfaces/State-2.html":{}}}],["login.logged",{"_index":868,"title":{},"body":{"interfaces/State-2.html":{}}}],["login.logged(false",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["login.logged(true",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["login/logged",{"_index":704,"title":{},"body":{"classes/Logged.html":{},"miscellaneous/variables.html":{}}}],["loginform",{"_index":707,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginform.get('email",{"_index":724,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginform.get('password",{"_index":726,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginform.get(\\'email",{"_index":737,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginform.get(\\'password",{"_index":739,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginformcomponent",{"_index":78,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginmodule",{"_index":740,"title":{"modules/LoginModule.html":{}},"body":{"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["loginreducer",{"_index":845,"title":{},"body":{"interfaces/State.html":{}}}],["loginreducer.reducer",{"_index":849,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["loginreducer.state",{"_index":843,"title":{},"body":{"interfaces/State.html":{}}}],["loginsuscription",{"_index":875,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["logo",{"_index":663,"title":{},"body":{"components/HomePageComponent.html":{}}}],["logout",{"_index":756,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["m.loginmodule",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilemodule",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.signupmodule",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["management",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["map",{"_index":700,"title":{},"body":{"injectables/LayoutEffects.html":{},"injectables/UserService.html":{}}}],["map(r",{"_index":902,"title":{},"body":{"injectables/UserService.html":{}}}],["map(res",{"_index":692,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["map(us",{"_index":907,"title":{},"body":{"injectables/UserService.html":{}}}],["margin",{"_index":365,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["mark",{"_index":505,"title":{},"body":{"components/EventListComponent.html":{}}}],["matbuttonmodule",{"_index":788,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":792,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":598,"title":{},"body":{"injectables/EventService.html":{}}}],["matcheckboxmodule",{"_index":803,"title":{},"body":{"modules/SharedModule.html":{}}}],["matching",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":783,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":796,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":799,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":790,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidetogglemodule",{"_index":801,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattablemodule",{"_index":794,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":786,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":368,"title":{},"body":{"components/EventDetailComponent.html":{},"components/HomePageComponent.html":{},"injectables/ValidateFormService.html":{}}}],["md",{"_index":559,"title":{},"body":{"components/EventListComponent.html":{}}}],["media(max",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{}}}],["message",{"_index":264,"title":{},"body":{"injectables/ErrorService.html":{},"components/HomePageComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["methods",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["min",{"_index":773,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/ValidateFormService.html":{}}}],["miscellaneous",{"_index":981,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":522,"title":{},"body":{"components/EventListComponent.html":{}}}],["models/event.model",{"_index":326,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"interfaces/State-1.html":{}}}],["models/user.model",{"_index":327,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":93,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["modules",{"_index":95,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"modules.html":{},"overview.html":{}}}],["msgs",{"_index":708,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["myeventschange",{"_index":488,"title":{},"body":{"components/EventListComponent.html":{}}}],["name",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":999,"title":{},"body":{"index.html":{}}}],["need",{"_index":500,"title":{},"body":{"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["network",{"_index":244,"title":{},"body":{"injectables/ErrorService.html":{}}}],["new",{"_index":553,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["next",{"_index":534,"title":{},"body":{"components/EventListComponent.html":{}}}],["ng",{"_index":996,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{}}}],["ngondestroy",{"_index":489,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["ngoninit",{"_index":295,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["ngrx/effects",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"injectables/LayoutEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"components/ProfileDetailComponent.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["none",{"_index":382,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["null",{"_index":855,"title":{},"body":{"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":923,"title":{},"body":{"injectables/ValidateFormService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":262,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["obtain",{"_index":494,"title":{},"body":{"components/EventListComponent.html":{}}}],["occurred",{"_index":245,"title":{},"body":{"injectables/ErrorService.html":{}}}],["oftype",{"_index":698,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["oftype('layout/get_filtered_events",{"_index":689,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["ondestroy",{"_index":478,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["oninit",{"_index":285,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["onselectevent",{"_index":490,"title":{},"body":{"components/EventListComponent.html":{}}}],["onselectevent(event",{"_index":503,"title":{},"body":{"components/EventListComponent.html":{}}}],["onsubmit",{"_index":406,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["opacity",{"_index":528,"title":{},"body":{"components/EventListComponent.html":{}}}],["open",{"_index":652,"title":{},"body":{"components/HomePageComponent.html":{}}}],["openathons",{"_index":659,"title":{},"body":{"components/HomePageComponent.html":{}}}],["option",{"_index":880,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["optional",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{}}}],["others",{"_index":231,"title":{},"body":{"injectables/ErrorService.html":{}}}],["out",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["overview",{"_index":1023,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":318,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["p",{"_index":675,"title":{},"body":{"components/HomePageComponent.html":{}}}],["package",{"_index":968,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":388,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["page",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["page'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["page.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":650,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.scss",{"_index":649,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":648,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:11",{"_index":651,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page/home",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["pagenotfound",{"_index":752,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["pagenotfoundcomponent",{"_index":79,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":238,"title":{},"body":{"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["param_id",{"_index":290,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["parameter",{"_index":305,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{}}}],["passed",{"_index":304,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["password",{"_index":717,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["pasword",{"_index":826,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["path",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{}}}],["pathmatch",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":629,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{}}}],["pipe",{"_index":614,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{}}}],["please",{"_index":268,"title":{},"body":{"injectables/ErrorService.html":{}}}],["post(environment.apiurl",{"_index":620,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{}}}],["private",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":1008,"title":{},"body":{"index.html":{}}}],["production",{"_index":1010,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["profiledetailcomponent",{"_index":82,"title":{"components/ProfileDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilemodule",{"_index":776,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["project",{"_index":988,"title":{},"body":{"index.html":{}}}],["properti",{"_index":896,"title":{},"body":{"injectables/UserService.html":{}}}],["properties",{"_index":276,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["property",{"_index":309,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["providers",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["public",{"_index":219,"title":{},"body":{"injectables/ErrorService.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["put(`${environment.apiurl}events/${event.id",{"_index":621,"title":{},"body":{"injectables/EventService.html":{}}}],["radius",{"_index":397,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["random",{"_index":311,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{}}}],["reactive",{"_index":414,"title":{},"body":{"components/EventFormComponent.html":{}}}],["reactiveformsmodule",{"_index":785,"title":{},"body":{"modules/SharedModule.html":{}}}],["readonly",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["redirect",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirectto",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reducer",{"_index":963,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":857,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["reducers",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":1002,"title":{},"body":{"index.html":{}}}],["represent",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["required",{"_index":926,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["res",{"_index":693,"title":{},"body":{"injectables/LayoutEffects.html":{},"components/LoginFormComponent.html":{}}}],["res.email",{"_index":719,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["reset",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["response",{"_index":253,"title":{},"body":{"injectables/ErrorService.html":{}}}],["result",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":604,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["retry(3",{"_index":615,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["return",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["returned",{"_index":251,"title":{},"body":{"injectables/ErrorService.html":{}}}],["returns",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{}}}],["rgba(255,255,255,0.9",{"_index":730,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["right",{"_index":375,"title":{},"body":{"components/EventDetailComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["route",{"_index":299,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["router",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["routermodule",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{}}}],["routermodule.forchild(routes",{"_index":745,"title":{},"body":{"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{}}}],["routermodule.forroot(routes",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":144,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"routes.html":{}}}],["routing",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":564,"title":{},"body":{"components/EventListComponent.html":{}}}],["run",{"_index":995,"title":{},"body":{"index.html":{}}}],["running",{"_index":1011,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":237,"title":{},"body":{"injectables/ErrorService.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":605,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{}}}],["same",{"_index":308,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["save",{"_index":463,"title":{},"body":{"components/EventFormComponent.html":{},"injectables/EventService.html":{}}}],["screen",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{}}}],["section",{"_index":669,"title":{},"body":{"components/HomePageComponent.html":{}}}],["select",{"_index":514,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["selected",{"_index":506,"title":{},"body":{"components/EventListComponent.html":{}}}],["selectedevent",{"_index":483,"title":{},"body":{"components/EventListComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["serve",{"_index":997,"title":{},"body":{"index.html":{}}}],["server",{"_index":994,"title":{},"body":{"index.html":{}}}],["service",{"_index":610,"title":{},"body":{"injectables/EventService.html":{}}}],["service.ts",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":208,"title":{},"body":{"modules/CoreModule.html":{},"components/EventListComponent.html":{}}}],["set",{"_index":895,"title":{},"body":{"injectables/UserService.html":{}}}],["setuser",{"_index":884,"title":{},"body":{"injectables/UserService.html":{}}}],["sevices",{"_index":216,"title":{},"body":{"modules/CoreModule.html":{}}}],["shadow",{"_index":381,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["shadowed",{"_index":536,"title":{},"body":{"components/EventListComponent.html":{}}}],["shared",{"_index":807,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/shared.module",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{}}}],["shared/styles/colors",{"_index":464,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["shared/styles/variables",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["sharedmodule",{"_index":108,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":820,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["showpassword",{"_index":812,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["showpassword(showpassword",{"_index":817,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["side",{"_index":243,"title":{},"body":{"injectables/ErrorService.html":{}}}],["sign",{"_index":731,"title":{},"body":{"components/LoginFormComponent.html":{},"injectables/UserService.html":{}}}],["signup",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["signup(user",{"_index":897,"title":{},"body":{"injectables/UserService.html":{}}}],["signupform",{"_index":811,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupform.get('email",{"_index":831,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupform.get('password",{"_index":832,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupform.get(\\'email",{"_index":834,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupform.get(\\'password",{"_index":835,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupformcomponent",{"_index":84,"title":{"components/SignupFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupmodule",{"_index":836,"title":{"modules/SignupModule.html":{}},"body":{"modules/SignupModule.html":{},"modules.html":{},"overview.html":{}}}],["size",{"_index":358,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["slidemyevents",{"_index":484,"title":{},"body":{"components/EventListComponent.html":{}}}],["sm",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{}}}],["solid",{"_index":567,"title":{},"body":{"components/EventListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"index.html":{}}}],["src/.../app.store.ts",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../layout.actions.ts",{"_index":1031,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../layout.redux.ts",{"_index":983,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../login.actions.ts",{"_index":1032,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../login.redux.ts",{"_index":984,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.store.ts",{"_index":841,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/auth",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/constants",{"_index":943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/core.module.ts",{"_index":203,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/error.service.ts",{"_index":218,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["src/app/core/error.service.ts:18",{"_index":224,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/core/error.service.ts:9",{"_index":221,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/core/event.service.ts",{"_index":582,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{}}}],["src/app/core/event.service.ts:109",{"_index":597,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:14",{"_index":588,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:23",{"_index":595,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:39",{"_index":594,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:55",{"_index":592,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:73",{"_index":590,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:91",{"_index":600,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/images.service.ts",{"_index":679,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["src/app/core/images.service.ts:12",{"_index":680,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/app/core/images.service.ts:21",{"_index":681,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/app/core/user.service.ts",{"_index":882,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/user.service.ts:15",{"_index":885,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:22",{"_index":899,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:29",{"_index":898,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:53",{"_index":889,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:74",{"_index":892,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:82",{"_index":886,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:90",{"_index":893,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/validate",{"_index":915,"title":{},"body":{"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["src/app/events/event",{"_index":283,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"coverage.html":{}}}],["src/app/events/events.module.ts",{"_index":626,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/home",{"_index":647,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["src/app/login/login",{"_index":705,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/login/login.module.ts",{"_index":744,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/app/models/event.model.ts",{"_index":274,"title":{},"body":{"interfaces/Event.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts",{"_index":881,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/page",{"_index":746,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile",{"_index":753,"title":{},"body":{"components/ProfileDetailComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.module.ts",{"_index":780,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":781,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/signup/signup",{"_index":809,"title":{},"body":{"components/SignupFormComponent.html":{},"coverage.html":{}}}],["src/app/signup/signup.module.ts",{"_index":840,"title":{},"body":{"modules/SignupModule.html":{}}}],["src/app/store/layout/layout.actions.ts",{"_index":628,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/layout/layout.actions.ts:10",{"_index":632,"title":{},"body":{"classes/GetFilteredEvents.html":{}}}],["src/app/store/layout/layout.actions.ts:14",{"_index":645,"title":{},"body":{"classes/GetFilteredEventsSuccess.html":{}}}],["src/app/store/layout/layout.actions.ts:16",{"_index":646,"title":{},"body":{"classes/GetFilteredEventsSuccess.html":{}}}],["src/app/store/layout/layout.actions.ts:20",{"_index":643,"title":{},"body":{"classes/GetFilteredEventsError.html":{}}}],["src/app/store/layout/layout.actions.ts:22",{"_index":644,"title":{},"body":{"classes/GetFilteredEventsError.html":{}}}],["src/app/store/layout/layout.actions.ts:8",{"_index":631,"title":{},"body":{"classes/GetFilteredEvents.html":{}}}],["src/app/store/layout/layout.effects.ts",{"_index":685,"title":{},"body":{"injectables/LayoutEffects.html":{},"coverage.html":{}}}],["src/app/store/layout/layout.effects.ts:17",{"_index":697,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["src/app/store/layout/layout.effects.ts:9",{"_index":687,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["src/app/store/layout/layout.redux.ts",{"_index":851,"title":{},"body":{"interfaces/State-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/login/login.actions.ts",{"_index":701,"title":{},"body":{"classes/Logged.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/login/login.actions.ts:6",{"_index":702,"title":{},"body":{"classes/Logged.html":{}}}],["src/app/store/login/login.actions.ts:8",{"_index":703,"title":{},"body":{"classes/Logged.html":{}}}],["src/app/store/login/login.redux.ts",{"_index":866,"title":{},"body":{"interfaces/State-2.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/toolbar/toolbar.component.ts",{"_index":869,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/toolbar/toolbar.component.ts:15",{"_index":878,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/toolbar/toolbar.component.ts:16",{"_index":877,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/toolbar/toolbar.component.ts:17",{"_index":873,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/toolbar/toolbar.component.ts:22",{"_index":876,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/toolbar/toolbar.component.ts:35",{"_index":874,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":964,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":965,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":986,"title":{"index.html":{}},"body":{}}],["state",{"_index":122,"title":{"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{}},"body":{"modules/AppModule.html":{},"components/EventListComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state('void",{"_index":525,"title":{},"body":{"components/EventListComponent.html":{}}}],["state.filteredevents",{"_index":540,"title":{},"body":{"components/EventListComponent.html":{}}}],["state.logged",{"_index":547,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["statements",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":823,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["storage",{"_index":760,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["store",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Event.html":{},"components/EventListComponent.html":{},"components/ProfileDetailComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["store/layout/layout.actions",{"_index":521,"title":{},"body":{"components/EventListComponent.html":{}}}],["store/layout/layout.effects",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["store/layout/layout.redux",{"_index":848,"title":{},"body":{"interfaces/State.html":{}}}],["store/login/login.actions",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["store/login/login.redux",{"_index":846,"title":{},"body":{"interfaces/State.html":{}}}],["stored",{"_index":316,"title":{},"body":{"components/EventDetailComponent.html":{},"index.html":{}}}],["storemodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot(reducers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":282,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/LoginFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":516,"title":{},"body":{"components/EventListComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["subscriptionlayout",{"_index":485,"title":{},"body":{"components/EventListComponent.html":{}}}],["subscriptionlike",{"_index":510,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["subscriptionlogin",{"_index":486,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["subtitle",{"_index":670,"title":{},"body":{"components/HomePageComponent.html":{}}}],["support",{"_index":1018,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1019,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":858,"title":{},"body":{"interfaces/State-1.html":{}}}],["switchmap",{"_index":699,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["switchmap((filter",{"_index":690,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["system",{"_index":764,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["table",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["tech",{"_index":656,"title":{},"body":{"components/HomePageComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["test",{"_index":1014,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1013,"title":{},"body":{"index.html":{}}}],["text",{"_index":390,"title":{},"body":{"components/EventDetailComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.actions$.pipe",{"_index":688,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["this.addeditform",{"_index":442,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.addeditform.reset",{"_index":452,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.addeditform.value",{"_index":450,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.createform",{"_index":429,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.event",{"_index":333,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["this.event.addedby",{"_index":439,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.date",{"_index":435,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.description",{"_index":437,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.id",{"_index":441,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.location",{"_index":433,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.title",{"_index":431,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.events",{"_index":541,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.events[0",{"_index":543,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.eventservice.addevent(this.event).subscribe((event",{"_index":453,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.eventservice.deleteevent(event.id).subscribe",{"_index":343,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.eventservice.getevent(id).subscribe((event",{"_index":428,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.eventservice.getevent(this.id).subscribe((event",{"_index":332,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.eventservice.getevents().subscribe((events",{"_index":548,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.eventservice.getfilteredevents(filter.payload",{"_index":691,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["this.eventservice.updateevent(this.event).subscribe((event",{"_index":451,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.fb.group",{"_index":443,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.getevent",{"_index":337,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.getevents",{"_index":532,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.getimage",{"_index":331,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.getuser",{"_index":766,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["this.http",{"_index":618,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["this.http.get(`${environment.apiurl}events/${id",{"_index":617,"title":{},"body":{"injectables/EventService.html":{}}}],["this.http.get(`${environment.apiurl}events?${filter",{"_index":622,"title":{},"body":{"injectables/EventService.html":{}}}],["this.http.get(`${environment.apiurl}users?email=${user.email",{"_index":906,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(environment.apiurl",{"_index":613,"title":{},"body":{"injectables/EventService.html":{}}}],["this.id",{"_index":329,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.imagesservice.getimage().subscribe((img",{"_index":334,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.imageurl",{"_index":335,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.isauthenticated",{"_index":546,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["this.loginform",{"_index":714,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.msgs",{"_index":720,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.password.nativeelement.type",{"_index":828,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.route.snapshot.parammap.get(this.param_id",{"_index":427,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.route.snapshot.params[this.param_id",{"_index":330,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.router.navigate(['/events",{"_index":344,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.router.navigate(['/home",{"_index":769,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["this.router.navigate(['/login",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.selectedevent",{"_index":542,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.setuser",{"_index":905,"title":{},"body":{"injectables/UserService.html":{}}}],["this.signupform",{"_index":827,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.signupform.value",{"_index":829,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.slidemyevents",{"_index":550,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.store.dispatch(action",{"_index":555,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.store.dispatch(new",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["this.store.pipe(select('layout')).subscribe((state",{"_index":539,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.store.pipe(select('login')).subscribe((state",{"_index":545,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.store.pipe(select('login')).subscribe(state",{"_index":879,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.subscriptionlayout",{"_index":538,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.subscriptionlayout.unsubscribe",{"_index":556,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.subscriptionlogin",{"_index":544,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.subscriptionlogin.unsubscribe",{"_index":557,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.user",{"_index":767,"title":{},"body":{"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.userservice.checkuser",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{}}}],["this.userservice.login(this.loginform.value).subscribe((res",{"_index":718,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.userservice.logout",{"_index":768,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["this.userservice.signup(this.user).subscribe",{"_index":830,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["throw",{"_index":232,"title":{},"body":{"injectables/ErrorService.html":{}}}],["throwerror",{"_index":236,"title":{},"body":{"injectables/ErrorService.html":{}}}],["throwerror('something",{"_index":265,"title":{},"body":{"injectables/ErrorService.html":{}}}],["title",{"_index":281,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/HomePageComponent.html":{}}}],["titlevalue",{"_index":430,"title":{},"body":{"components/EventFormComponent.html":{}}}],["toggle",{"_index":497,"title":{},"body":{"components/EventListComponent.html":{},"modules/SharedModule.html":{}}}],["toolbar",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar.component.html",{"_index":871,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":870,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar/toolbar.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbarcomponent",{"_index":86,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":562,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["trace",{"_index":225,"title":{},"body":{"injectables/ErrorService.html":{}}}],["transform",{"_index":526,"title":{},"body":{"components/EventListComponent.html":{}}}],["transition",{"_index":517,"title":{},"body":{"components/EventListComponent.html":{}}}],["transition(':enter",{"_index":529,"title":{},"body":{"components/EventListComponent.html":{}}}],["translatex",{"_index":527,"title":{},"body":{"components/EventListComponent.html":{}}}],["translatex(0",{"_index":531,"title":{},"body":{"components/EventListComponent.html":{}}}],["transparent",{"_index":384,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["trigger",{"_index":515,"title":{},"body":{"components/EventListComponent.html":{}}}],["trigger('enterstate",{"_index":524,"title":{},"body":{"components/EventListComponent.html":{}}}],["true",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"interfaces/State-1.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":269,"title":{},"body":{"injectables/ErrorService.html":{}}}],["tslib",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":533,"title":{},"body":{"components/EventListComponent.html":{}}}],["type",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1029,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unit",{"_index":1012,"title":{},"body":{"index.html":{}}}],["unsplash.com",{"_index":313,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{}}}],["unsubscribe",{"_index":501,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["unsuccessful",{"_index":252,"title":{},"body":{"injectables/ErrorService.html":{}}}],["up",{"_index":732,"title":{},"body":{"components/LoginFormComponent.html":{},"injectables/UserService.html":{}}}],["update",{"_index":601,"title":{},"body":{"injectables/EventService.html":{}}}],["updateevent",{"_index":585,"title":{},"body":{"injectables/EventService.html":{}}}],["updateevent(event",{"_index":599,"title":{},"body":{"injectables/EventService.html":{}}}],["uppercase",{"_index":348,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["us[0",{"_index":912,"title":{},"body":{"injectables/UserService.html":{}}}],["us[0].email",{"_index":908,"title":{},"body":{"injectables/UserService.html":{}}}],["us[0].password",{"_index":909,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":763,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["used",{"_index":275,"title":{},"body":{"interfaces/Event.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{},"interfaces/User.html":{}}}],["user",{"_index":44,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.email",{"_index":342,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/ProfileDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["user.id",{"_index":770,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["user.password",{"_index":910,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":210,"title":{},"body":{"modules/CoreModule.html":{}}}],["userdata",{"_index":772,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["usermail",{"_index":551,"title":{},"body":{"components/EventListComponent.html":{}}}],["users",{"_index":901,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":21,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userstring",{"_index":338,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["valid",{"_index":913,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["validate",{"_index":212,"title":{},"body":{"modules/CoreModule.html":{}}}],["validateformservice",{"_index":202,"title":{"injectables/ValidateFormService.html":{}},"body":{"modules/CoreModule.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"overview.html":{}}}],["validateformservice.geterror('date",{"_index":457,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror('description",{"_index":461,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror('email",{"_index":723,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validateformservice.geterror('location",{"_index":459,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror('password",{"_index":725,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validateformservice.geterror('title",{"_index":455,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror(\\'date",{"_index":471,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror(\\'description",{"_index":475,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror(\\'email",{"_index":736,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validateformservice.geterror(\\'location",{"_index":473,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror(\\'password",{"_index":738,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validateformservice.geterror(\\'title",{"_index":469,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators",{"_index":424,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.email",{"_index":716,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.maxlength(25",{"_index":446,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators.maxlength(400",{"_index":448,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators.minlength(10",{"_index":447,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators.minlength(2",{"_index":445,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators.required",{"_index":444,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["value",{"_index":324,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["variable",{"_index":537,"title":{},"body":{"components/EventListComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1033,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":991,"title":{},"body":{"index.html":{}}}],["via",{"_index":1016,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":825,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["viewchild('password",{"_index":822,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["void",{"_index":306,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["weight",{"_index":574,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["went",{"_index":258,"title":{},"body":{"injectables/ErrorService.html":{}}}],["white",{"_index":467,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{}}}],["width",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["wrap",{"_index":771,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["wrong",{"_index":259,"title":{},"body":{"injectables/ErrorService.html":{}}}],["zone.js",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as login from './store/login/login.actions';\nimport { UserService } from './core/user.service';\n\n@Component({\n  selector: 'eui-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n/**\n * Class that represent the main component in the app\n */\nexport class AppComponent {\n\n  constructor(\n    private readonly userService: UserService,\n    private readonly store: Store\n  ) {\n    /**\n     * check user in store\n     */\n    this.userService.checkUser() ? this.store.dispatch(new login.Logged(true))\n                  : this.store.dispatch(new login.Logged(false));\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import './shared/styles/variables';\n\n\n.container {\n  width: 100%;\n  height: 100%;\n}\n\n.content {\n  height: calc(100% - 64px);\n\n  @media(max-width: $screen-sm) {\n    height: calc(100% - 56px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HomePageComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// Modules\nimport { CoreModule } from './core/core.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\nimport { EventsModule } from './events/events.module';\n\n// State Management\nimport { StoreModule } from '@ngrx/store';\nimport { reducers } from './app.store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { LayoutEffects } from './store/layout/layout.effects';\n\n// Components\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    ToolbarComponent,\n    PageNotFoundComponent,\n  ],\n  imports: [\n    CoreModule,\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    EventsModule,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([LayoutEffects])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n/**\n * General Module for the app\n */\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from './core/auth-guard.service';\n\n/**\n * Components\n */\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { EventListComponent } from './events/event-list/event-list.component';\nimport { EventDetailComponent } from './events/event-detail/event-detail.component';\nimport { EventFormComponent } from './events/event-form/event-form.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n/**\n * router with lazy loading\n */\nconst routes: Routes = [\n  {\n    path: 'home',\n    component: HomePageComponent,\n  },\n  {\n    path: 'events',\n    component: EventListComponent,\n  },\n  {\n    path: 'profile',\n    loadChildren: () => \"import('./profile/profile.module').then(m => m.ProfileModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./login/login.module').then(m => m.LoginModule)\",\n  },\n  {\n    path: 'signup',\n    loadChildren: () => \"import('./signup/signup.module').then(m => m.SignupModule)\",\n  },\n  {\n    path: 'eventDetails/:id',\n    component: EventDetailComponent,\n  },\n  {\n    path: 'eventForm/:id',\n    component: EventFormComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard],\n})\n/**\n * Routing Module for the app\n */\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth-guard.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/auth-guard.service.ts:16\n                \n            \n\n\n            \n                \n                    Check if user is logged.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UserService } from '../core/user.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private readonly router: Router,\n    private readonly userService: UserService\n  ) {}\n\n  /**\n   * Check if user is logged.\n   */\n  canActivate(): boolean {\n    if (this.userService.checkUser()) {\n      return true;\n    } else {\n      /**\n       * when user not login, redirect to login\n       */\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nErrorService\n\nErrorService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorService->CoreModule\n\n\n\n\n\nEventService\n\nEventService\n\nCoreModule -->\n\nEventService->CoreModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nCoreModule -->\n\nImagesService->CoreModule\n\n\n\n\n\nUserService\n\nUserService\n\nCoreModule -->\n\nUserService->CoreModule\n\n\n\n\n\nValidateFormService\n\nValidateFormService\n\nCoreModule -->\n\nValidateFormService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ErrorService\n                        \n                        \n                            EventService\n                        \n                        \n                            ImagesService\n                        \n                        \n                            UserService\n                        \n                        \n                            ValidateFormService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\n/**\n * Services\n */\nimport { EventService } from './event.service';\nimport { UserService } from './user.service';\nimport { ImagesService } from './images.service';\nimport { ValidateFormService } from './validate-form.service';\nimport { ErrorService } from './error.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n  ],\n  providers: [\n    ErrorService,\n    EventService,\n    UserService,\n    ImagesService,\n    ValidateFormService\n  ],\n})\n/**\n * Module for core sevices\n */\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/error.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/error.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error.service.ts:18\n                \n            \n\n\n            \n                \n                    Trace in the console different kinds of errors (Http or others) and then throw a generic error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The HttpErrorResponse error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { throwError } from 'rxjs';\n\n\n@Injectable()\nexport class ErrorService {\n  constructor(\n  ) {}\n\n  /**\n   * Trace in the console different kinds of errors (Http or others) and then throw a generic error.\n   *\n   * @param error The HttpErrorResponse error\n   */\n  public handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      /**\n       * A client-side or network error occurred. Handle it accordingly.\n       */\n      console.error('An error occurred:', error.error.message);\n    } else {\n      /**\n       * The backend returned an unsuccessful response code.\n       * The response body may contain clues as to what went wrong.\n       */\n      console.error(\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n      );\n    }\n    /**\n     * return an observable with a user-facing error message\n     */\n    return throwError('Something bad happened; please try again later.');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Event.html":{"url":"interfaces/Event.html","title":"interface - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.model.ts\n        \n\n            \n                Description\n            \n            \n                interface used to store an event\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addedBy\n                                \n                                \n                                        date\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addedBy\n                                    \n                                \n                                \n                                    \n                                        addedBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Event {\n  id: string;\n  title: string;\n  location: string;\n  date: Date;\n  description: string;\n  addedBy: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventDetailComponent.html":{"url":"components/EventDetailComponent.html","title":"component - EventDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/event-detail/event-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-event-detail\n            \n\n            \n                styleUrls\n                ./event-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./event-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                PARAM_ID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteEvent\n                            \n                            \n                                getEvent\n                            \n                            \n                                getImage\n                            \n                            \n                                isOwner\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, eventService: EventService, userService: UserService, imagesService: ImagesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/events/event-detail/event-detail.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imagesService\n                                                  \n                                                        \n                                                                        ImagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:77\n                \n            \n\n\n            \n                \n                    Delete the event, if exists, with the ID passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvent\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:41\n                \n            \n\n\n            \n                \n                    Return the event with the ID is the same that id property\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \ngetImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:50\n                \n            \n\n\n            \n                \n                    Return a random image from unsplash.com\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOwner\n                        \n                        \n                    \n                \n            \n            \n                \nisOwner(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:62\n                \n            \n\n\n            \n                \n                    Return true if user stored in localStorage is the owner of the event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-detail/event-detail.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-detail/event-detail.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-detail/event-detail.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            PARAM_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'id'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-detail/event-detail.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventService } from '../../core/event.service';\nimport { Event } from '../../models/event.model';\nimport { UserService } from '../../core/user.service';\nimport { User } from '../../models/user.model';\nimport { ImagesService } from '../../core/images.service';\n\n@Component({\n  selector: 'eui-event-detail',\n  templateUrl: './event-detail.component.html',\n  styleUrls: ['./event-detail.component.scss']\n})\n/**\n * Class that represent the event detail component in the app\n */\nexport class EventDetailComponent implements OnInit {\n\n  event: Event;\n  id: string;\n  imageUrl: string;\n\n  private readonly PARAM_ID = 'id';\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly eventService: EventService,\n    private readonly userService: UserService,\n    private readonly imagesService: ImagesService\n  ) {}\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params[this.PARAM_ID];\n    this.getImage();\n  }\n\n  /**\n   * Return the event with the ID is the same that id property\n   */\n  getEvent() {\n    this.eventService.getEvent(this.id).subscribe((event: Event) => {\n      this.event = event;\n    });\n  }\n\n  /**\n   * Return a random image from unsplash.com\n   */\n  getImage() {\n    this.imagesService.getImage().subscribe((img) => {\n      this.imageUrl = img.urls.small;\n      this.getEvent();\n    });\n  }\n\n  /**\n   * Return true if user stored in localStorage is the owner of the event\n   *\n   * @param event Event to check\n   */\n  isOwner(event: Event) {\n    let isOwner = false;\n    const userString = localStorage.getItem('user');\n    if (userString) {\n      const user: User = JSON.parse(userString);\n      isOwner = event.addedBy === user.email;\n    }\n    return isOwner;\n  }\n\n  /**\n   * Delete the event, if exists, with the ID passed as parameter\n   *\n   * @param id  Event ID\n   */\n  deleteEvent(event: Event) {\n    if (this.userService.checkUser()) {\n      this.eventService.deleteEvent(event.id).subscribe(() => {\n        this.router.navigate(['/events']);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n      Event details\n  \n\n  \n    \n      \n          \n            Delete Event\n          \n\n          \n            Edit Event\n        \n      \n    \n    \n      \n        \n          {{ event.title | uppercase }}\n        \n        \n          {{ event.location }} - {{ event.date | date: \"dd/MM/yyyy\" }}\n        \n        \n            {{ event.addedBy}}\n        \n      \n\n      \n        \n      \n\n      \n        {{ event.description }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./event-detail.component.scss\n                \n                @import '../../shared/styles/variables';\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt2.jpg', center, cover);\n  background-size: cover;\n}\n\n.event-card-details {\n  display: flex;\n  flex: 1;\n  flex-flow: column;\n  margin: 0 auto;\n  max-width: 800px;\n}\n\n.edit-event-btn {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 2rem;\n}\n\n.delete-btn {\n  margin-right: 6px;\n}\n\n.button-edit {\n  margin-left: 10px;\n}\n\n.event {\n  box-shadow: none;\n  background-color: transparent;\n  font-family: $acn-font;\n  padding: 0;\n  margin: 0 auto;\n\n  .header {\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    margin-bottom: 1rem;\n\n    .title h3 {\n      margin: 0;\n    }\n  }\n}\n\n.img {\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\nimg {\n  width: 75%;\n  margin: 0;\n  border-radius: 4px;\n}\n\n.description {\n  padding: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Event details                                    Delete Event                                Edit Event                                              {{ event.title | uppercase }}                          {{ event.location }} - {{ event.date | date: \"dd/MM/yyyy\" }}                            {{ event.addedBy}}                                                {{ event.description }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventFormComponent.html":{"url":"components/EventFormComponent.html","title":"component - EventFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/event-form/event-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-event-form\n            \n\n            \n                styleUrls\n                ./event-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./event-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addEditForm\n                            \n                            \n                                event\n                            \n                            \n                                    Private\n                                    Readonly\n                                PARAM_ID\n                            \n                            \n                                    Public\n                                    Readonly\n                                validateFormService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validateFormService: ValidateFormService, fb: FormBuilder, eventService: EventService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/events/event-form/event-form.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validateFormService\n                                                  \n                                                        \n                                                                        ValidateFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-form/event-form.component.ts:49\n                \n            \n\n\n            \n                \n                    Crate the form used to insert or edit events\nreactive form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-form/event-form.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-form/event-form.component.ts:72\n                \n            \n\n\n            \n                \n                    Fired when user click on \"Create\" button of the form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEditForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-form/event-form.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-form/event-form.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            PARAM_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'id'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-form/event-form.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            validateFormService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidateFormService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-form/event-form.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Event } from '../../models/event.model';\nimport { User } from '../../models/user.model';\nimport { ValidateFormService } from '../../core/validate-form.service';\nimport { EventService } from '../../core/event.service';\n\n@Component({\n  selector: 'eui-event-form',\n  templateUrl: './event-form.component.html',\n  styleUrls: ['./event-form.component.scss']\n})\n/**\n * Class that represent the event form component in the app\n */\nexport class EventFormComponent implements OnInit {\n\n  addEditForm: FormGroup;\n  event: Event;\n\n  private readonly PARAM_ID = 'id';\n\n  constructor(\n    public readonly validateFormService: ValidateFormService,\n    private readonly fb: FormBuilder,\n    private readonly eventService: EventService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get(this.PARAM_ID);\n\n    if (id) {\n      this.eventService.getEvent(id).subscribe((event: Event) => {\n        this.event = event;\n        this.createForm();\n      });\n    } else {\n      this.createForm();\n    }\n  }\n\n  /**\n   * Crate the form used to insert or edit events\n   * reactive form\n   */\n  createForm() {\n    const titleValue = this.event ? this.event.title : '';\n    const locationValue = this.event ? this.event.location : '';\n    const dateValue = this.event ? this.event.date : '';\n    const descriptionValue = this.event ? this.event.description : '';\n    const addedByValue = this.event ? this.event.addedBy : '';\n    const idValue = this.event ? this.event.id : '';\n\n    this.addEditForm = this.fb.group({\n      title: [titleValue, [Validators.required]],\n      location: [locationValue, [Validators.required, Validators.minLength(2),\n                                  Validators.maxLength(25)]],\n      date: [dateValue, [Validators.required]],\n      description: [descriptionValue, [Validators.required, Validators.minLength(10),\n                                        Validators.maxLength(400)]],\n      addedBy: [addedByValue, []],\n      id: [idValue, []],\n    });\n  }\n\n  /**\n   * Fired when user click on \"Create\" button of the form\n   */\n  onSubmit() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    this.event = this.addEditForm.value;\n    this.event.addedBy = user.email;\n    if (this.event.id) {\n      this.eventService.updateEvent(this.event).subscribe((event: Event) => {\n        this.addEditForm.reset();\n        this.router.navigate(['/events']);\n      });\n    } else {\n      this.eventService.addEvent(this.event).subscribe((event: Event) => {\n        this.addEditForm.reset();\n        this.router.navigate(['/events']);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      Add Event\n    \n\n    \n      \n        \n          \n          \n            {{validateFormService.getError('Title', addEditForm.get('title'))}}\n          \n        \n\n        \n          \n          \n            {{validateFormService.getError('Date', addEditForm.get('date'))}}\n          \n        \n        \n        \n          \n          \n            {{validateFormService.getError('Location', addEditForm.get('location'))}}\n          \n        \n\n        \n          \n          \n            {{validateFormService.getError('Description', addEditForm.get('description'))}}\n          \n        \n\n        \n          \n            Save\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./event-form.component.scss\n                \n                // @import '../../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt4.jpg', center, cover);\n  background-size: cover;\n}\n\n.form {\n  display: flex;\n  justify-content: center;\n}\n\nform {\n  display: flex;\n  flex-flow: column;\n  width: 50%;\n  font-family: $acn-font;\n  background-color: white;\n  padding: 20px;\n  border-radius: 4px;\n}\n\n.save-btn {\n  display: flex;\n  justify-content: flex-end;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Add Event                                                      {{validateFormService.getError(\\'Title\\', addEditForm.get(\\'title\\'))}}                                                          {{validateFormService.getError(\\'Date\\', addEditForm.get(\\'date\\'))}}                                                                  {{validateFormService.getError(\\'Location\\', addEditForm.get(\\'location\\'))}}                                                          {{validateFormService.getError(\\'Description\\', addEditForm.get(\\'description\\'))}}                                                Save                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventListComponent.html":{"url":"components/EventListComponent.html","title":"component - EventListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/event-list/event-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-event-list\n            \n\n            \n                styleUrls\n                ./event-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./event-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                selectedEvent\n                            \n                            \n                                slideMyEvents\n                            \n                            \n                                subscriptionLayout\n                            \n                            \n                                subscriptionLogin\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEvents\n                            \n                            \n                                myEventsChange\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/events/event-list/event-list.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:86\n                \n            \n\n\n            \n                \n                    Obtain the event list\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            myEventsChange\n                        \n                        \n                    \n                \n            \n            \n                \nmyEventsChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:96\n                \n            \n\n\n            \n                \n                    Fired when the \"my events\" filter is toggle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:112\n                \n            \n\n\n            \n                \n                    After destroy the component we need unsubscribe.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelectEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonSelectEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:79\n                \n            \n\n\n            \n                \n                    Mark the event as selected\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideMyEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionLayout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubscriptionLike\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubscriptionLike\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { SubscriptionLike } from 'rxjs';\nimport { trigger, style, state, transition, animate } from '@angular/animations';\nimport * as layout from '../../store/layout/layout.actions';\n\n/**\n * models\n */\nimport { Event } from '../../models/event.model';\nimport { User } from '../../models/user.model';\n\n/**\n * services\n */\nimport { UserService } from '../../core/user.service';\nimport { EventService } from '../../core/event.service';\n\n@Component({\n  selector: 'eui-event-list',\n  templateUrl: './event-list.component.html',\n  styleUrls: ['./event-list.component.scss'],\n  animations: [\n    trigger('enterState', [\n      state('void', style({\n        transform: 'translateX(-100%)',\n        opacity: 0,\n      })),\n      transition(':enter', [\n        animate(300, style({\n          transform: 'translateX(0)',\n          opacity: 1,\n        }))\n      ]),\n    ])\n  ]\n})\n/**\n * Class that represent the Event list component in the app\n */\nexport class EventListComponent implements OnInit, OnDestroy {\n  events: Event[];\n  selectedEvent: Event;\n  slideMyEvents: boolean;\n  subscriptionLayout: SubscriptionLike;\n  subscriptionLogin: SubscriptionLike;\n  isAuthenticated: boolean;\n\n  constructor(\n    private readonly eventService: EventService,\n    private readonly store: Store,\n    public userService: UserService,\n  ) {}\n\n  ngOnInit() {\n    this.getEvents();\n\n    // tslint:disable-next-line: no-shadowed-variable\n    this.subscriptionLayout = this.store.pipe(select('layout')).subscribe((state) => {\n      if (state && state.filteredEvents) {\n        this.events = state.filteredEvents;\n        this.selectedEvent = this.events[0];\n      }\n    });\n\n    // tslint:disable-next-line: no-shadowed-variable\n    this.subscriptionLogin = this.store.pipe(select('login')).subscribe((state) => {\n      if (state) {\n        this.isAuthenticated = state.logged;\n      }\n    });\n  }\n\n  /**\n   * Mark the event as selected\n   *\n   * @param event The event\n   */\n  onSelectEvent(event: Event) {\n    this.selectedEvent = event;\n  }\n\n  /**\n   * Obtain the event list\n   */\n  getEvents() {\n    this.eventService.getEvents().subscribe((events: Event[]) => {\n      this.events = events;\n      this.selectedEvent = events[0];\n    });\n  }\n\n  /**\n   * Fired when the \"my events\" filter is toggle\n   */\n  myEventsChange() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n\n    if (this.slideMyEvents && user) {\n      const userMail = user.email;\n      const filter = 'addedBy=' + userMail;\n      const action = new layout.GetFilteredEvents(filter);\n      this.store.dispatch(action);\n    } else {\n      this.getEvents();\n    }\n  }\n\n  /**\n   * After destroy the component we need unsubscribe.\n   */\n  ngOnDestroy() {\n    this.subscriptionLayout.unsubscribe();\n    this.subscriptionLogin.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    Events\n  \n\n  \n    \n      \n        Add Event\n      \n      \n        \n          \n              Filter:\n              \n                My events\n              \n          \n        \n      \n    \n    \n      \n\n        \n            \n              \n                  {{ event.title | uppercase }}\n              \n              \n                {{ event.location }} - {{ event.date | date: \"dd/MM/yyyy\" }}\n              \n              \n                  {{ event.addedBy}}\n              \n            \n            \n              {{ event.description }}\n            \n        \n\n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./event-list.component.scss\n                \n                @import '../../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt2.jpg', center, cover);\n  background-size: cover;\n}\n\n.content {\n  width: 70%;\n  margin: 0 auto;\n\n  @media(max-width: $screen-md) {\n    width: 80%;\n  }\n\n  @media(max-width: $screen-sm) {\n    width: 100%;\n  }\n\n  .item {\n    margin-top: 2rem;\n  }\n\n  .control {\n    display: flex;\n    flex-flow: row;\n    align-items: flex-end;\n    border-bottom: 1px solid $gray;\n    padding-bottom: 0.8rem;\n    color: white;\n  }\n\n  button {\n    margin-left: auto;\n  }\n\n  .events {\n    width: 90%;\n    margin: 4rem auto;\n\n    .event {\n      margin-bottom: 1.5rem;\n    }\n\n    .link-event {\n      font-weight: 900;\n      margin: 0 2rem 0 0;\n    }\n\n    .date {\n      font-style: italic;\n      font-size: 14px;\n    }\n\n    .bottom {\n      font-weight: 300;\n      margin-top: 0.3rem;\n      font-size: 15px;\n    }\n  }\n  .description {\n    width: 95%;\n    margin: 0 auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Events                      Add Event                                            Filter:                              My events                                                                                                        {{ event.title | uppercase }}                                            {{ event.location }} - {{ event.date | date: \"dd/MM/yyyy\" }}                                              {{ event.addedBy}}                                                    {{ event.description }}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/event.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEvent\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                getEvent\n                            \n                            \n                                getEvents\n                            \n                            \n                                getFilteredEvents\n                            \n                            \n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/event.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEvent\n                        \n                        \n                    \n                \n            \n            \n                \naddEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:73\n                \n            \n\n\n            \n                \n                    Save the event passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event to add\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEvent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:55\n                \n            \n\n\n            \n                \n                    Delete the event, if exists, with the ID passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event ID\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvent\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:39\n                \n            \n\n\n            \n                \n                    Return the event with the ID passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event ID\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:23\n                \n            \n\n\n            \n                \n                    Return the event list.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFilteredEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetFilteredEvents(filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:109\n                \n            \n\n\n            \n                \n                    Return the event list that match with the filter string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String used to filter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \nupdateEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:91\n                \n            \n\n\n            \n                \n                    Update the event passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Event } from '../models/event.model';\nimport { HTTP_HEADER_VALUE_APPLICATION_JSON } from './constants-service';\nimport { ErrorService } from './error.service';\n\n@Injectable()\nexport class EventService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly errorService: ErrorService,\n    ) {}\n\n  /**\n   * Return the event list.\n   */\n  getEvents(): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http.get(environment.apiURL + 'events', { headers }).pipe(\n      retry(3),\n      catchError(this.errorService.handleError)\n    );\n  }\n\n  /**\n   * Return the event with the ID passed as parameter\n   *\n   * @param id Event ID\n   */\n  getEvent(id: string): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http.get(`${environment.apiURL}events/${id}`, { headers }).pipe(\n      retry(3),\n      catchError(this.errorService.handleError)\n    );\n  }\n\n  /**\n   * Delete the event, if exists, with the ID passed as parameter\n   *\n   * @param id  Event ID\n   */\n  deleteEvent(id: string): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http\n      .delete(`${environment.apiURL}events/${id}`, { headers })\n      .pipe(\n        retry(3),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n  /**\n   * Save the event passed as parameter\n   *\n   * @param event Event to add\n   */\n  addEvent(event: Event): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http\n      .post(environment.apiURL + 'events/', event, { headers })\n      .pipe(\n        retry(3),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n  /**\n   * Update the event passed as parameter\n   *\n   * @param event Event to update\n   */\n  updateEvent(event: Event): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http\n      .put(`${environment.apiURL}events/${event.id}`, event, { headers })\n      .pipe(\n        retry(3),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n  /**\n   * Return the event list that match with the filter string\n   *\n   * @param filter String used to filter\n   */\n  getFilteredEvents(filter): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http.get(`${environment.apiURL}events?${filter}`, { headers }).pipe(\n      retry(3),\n      catchError(this.errorService.handleError)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\n\nEventDetailComponent\n\nEventDetailComponent\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nEventDetailComponent->EventsModule\n\n\n\n\n\nEventFormComponent\n\nEventFormComponent\n\nEventsModule -->\n\nEventFormComponent->EventsModule\n\n\n\n\n\nEventListComponent\n\nEventListComponent\n\nEventsModule -->\n\nEventListComponent->EventsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/events/events.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EventDetailComponent\n                        \n                        \n                            EventFormComponent\n                        \n                        \n                            EventListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Modules\nimport { SharedModule } from '../shared/shared.module';\n\n// Components\nimport { EventListComponent } from './event-list/event-list.component';\nimport { EventFormComponent } from './event-form/event-form.component';\nimport { EventDetailComponent } from './event-detail/event-detail.component';\n\n@NgModule({\n  declarations: [\n    EventListComponent,\n    EventFormComponent,\n    EventDetailComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ]\n})\n/**\n * Module for Events\n */\nexport class EventsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetFilteredEvents.html":{"url":"classes/GetFilteredEvents.html","title":"class - GetFilteredEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetFilteredEvents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/layout/layout.actions.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GET_FILTERED_EVENTS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const GET_FILTERED_EVENTS = 'layout/GET_FILTERED_EVENTS';\nexport const GET_FILTERED_EVENTS_SUCCESS = 'layout/GET_FILTERED_EVENTS_SUCCESS';\nexport const GET_FILTERED_EVENTS_ERROR = 'layout/GET_FILTERED_EVENTS_ERROR';\n\nexport class GetFilteredEvents implements Action {\n  readonly type = GET_FILTERED_EVENTS;\n\n  constructor(public payload: string) {}\n}\n\nexport class GetFilteredEventsSuccess implements Action {\n  readonly type = GET_FILTERED_EVENTS_SUCCESS;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class GetFilteredEventsError implements Action {\n  readonly type = GET_FILTERED_EVENTS_ERROR;\n\n  constructor(public payload: any) {}\n}\n\n\nexport type Actions = GetFilteredEvents | GetFilteredEventsSuccess | GetFilteredEventsError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetFilteredEventsError.html":{"url":"classes/GetFilteredEventsError.html","title":"class - GetFilteredEventsError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetFilteredEventsError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/layout/layout.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GET_FILTERED_EVENTS_ERROR\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const GET_FILTERED_EVENTS = 'layout/GET_FILTERED_EVENTS';\nexport const GET_FILTERED_EVENTS_SUCCESS = 'layout/GET_FILTERED_EVENTS_SUCCESS';\nexport const GET_FILTERED_EVENTS_ERROR = 'layout/GET_FILTERED_EVENTS_ERROR';\n\nexport class GetFilteredEvents implements Action {\n  readonly type = GET_FILTERED_EVENTS;\n\n  constructor(public payload: string) {}\n}\n\nexport class GetFilteredEventsSuccess implements Action {\n  readonly type = GET_FILTERED_EVENTS_SUCCESS;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class GetFilteredEventsError implements Action {\n  readonly type = GET_FILTERED_EVENTS_ERROR;\n\n  constructor(public payload: any) {}\n}\n\n\nexport type Actions = GetFilteredEvents | GetFilteredEventsSuccess | GetFilteredEventsError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetFilteredEventsSuccess.html":{"url":"classes/GetFilteredEventsSuccess.html","title":"class - GetFilteredEventsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetFilteredEventsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any[])\n                    \n                \n                        \n                            \n                                Defined in src/app/store/layout/layout.actions.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GET_FILTERED_EVENTS_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const GET_FILTERED_EVENTS = 'layout/GET_FILTERED_EVENTS';\nexport const GET_FILTERED_EVENTS_SUCCESS = 'layout/GET_FILTERED_EVENTS_SUCCESS';\nexport const GET_FILTERED_EVENTS_ERROR = 'layout/GET_FILTERED_EVENTS_ERROR';\n\nexport class GetFilteredEvents implements Action {\n  readonly type = GET_FILTERED_EVENTS;\n\n  constructor(public payload: string) {}\n}\n\nexport class GetFilteredEventsSuccess implements Action {\n  readonly type = GET_FILTERED_EVENTS_SUCCESS;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class GetFilteredEventsError implements Action {\n  readonly type = GET_FILTERED_EVENTS_ERROR;\n\n  constructor(public payload: any) {}\n}\n\n\nexport type Actions = GetFilteredEvents | GetFilteredEventsSuccess | GetFilteredEventsError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/home-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-home-page\n            \n\n            \n                styleUrls\n                ./home-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/home-page.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'eui-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\n/**\n * Class that represent the home page component in the app\n */\nexport class HomePageComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n    \n      Home\n    \n    \n      \n    \n\n    \n      \n          Open Events\n        \n\n        \n          All our events\n        \n\n        \n          \n            A new and fresh application to host all our tech events crafted from\n            Accenture Openathons\n          \n        \n    \n\n\n\n    \n\n    \n                \n                    ./home-page.component.scss\n                \n                @import '../shared/styles/colors';\n@import '../shared/styles/variables';\n\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt1.jpg', bottom, contain);\n  background-size: cover;\n  display: flex;\n  flex-flow: column;\n  text-align: center;\n  display: inline-block;\n}\n\n.logo {\n\n  img {\n    width: 250px;\n    border-radius: 4px;\n    margin-bottom: 20px;\n  }\n}\n\n.title {\n  color: $black;\n\n  h1 {\n    font-size: 2.2rem;\n    margin: 3rem 0 0 0;\n  }\n}\n\n.section-title {\n  text-align: left;\n}\n\n.subtitle {\n\n  h2{\n    font-size: 2rem;\n    font-weight: 100;\n    margin-top: 0.3rem;\n  }\n}\n\n.background-card {\n  background-color: white;\n  border-radius: 4px;\n  padding-bottom: 30px;\n  width: 65%;\n  display:inline-block;\n}\n\n.message {\n  text-align: center;\n\n  p {\n    display: inline-block;\n    margin: 0;\n    font-size: 1.3rem;\n    font-weight: 300;\n    max-width: 600px;\n    line-height: 1.4;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Home                                      Open Events                          All our events                                      A new and fresh application to host all our tech events crafted from            Accenture Openathons                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesService.html":{"url":"injectables/ImagesService.html","title":"injectable - ImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/images.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/images.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \ngetImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/images.service.ts:21\n                \n            \n\n\n            \n                \n                    Return a random image from unsplash.com\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { ErrorService } from './error.service';\n\n\n@Injectable()\nexport class ImagesService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly errorService: ErrorService,\n  ) {}\n\n  /**\n   * Return a random image from unsplash.com\n   */\n  getImage(): Observable {\n    const headers = new HttpHeaders({\n      Authorization: 'Client-ID 9f354e7919a3f56e537616f46b1c1e87b5632d7c7227f2bd469762eed79a6296'\n    });\n\n    return this.http\n      .get('https://api.unsplash.com/photos/random?orientation=landscape&query=event', { headers })\n      .pipe(\n        retry(3),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutEffects.html":{"url":"injectables/LayoutEffects.html","title":"injectable - LayoutEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LayoutEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getFilteredEvents$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, eventService: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/layout/layout.effects.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFilteredEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType('layout/GET_FILTERED_EVENTS'),\n    switchMap((filter: any) => this.eventService.getFilteredEvents(filter.payload)\n      .pipe(\n        map(res => ({ type: 'layout/GET_FILTERED_EVENTS_SUCCESS', payload: res })),\n        catchError(error => of({ type: 'layout/GET_FILTERED_EVENTS_ERROR', payload: error }))\n      )\n    )\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.effects.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { EventService } from '../../core/event.service';\n\n\n@Injectable()\nexport class LayoutEffects {\n\n  constructor(\n    private readonly actions$: Actions,\n    private readonly eventService: EventService\n  ) {}\n\n  @Effect()\n  getFilteredEvents$ = this.actions$.pipe(\n    ofType('layout/GET_FILTERED_EVENTS'),\n    switchMap((filter: any) => this.eventService.getFilteredEvents(filter.payload)\n      .pipe(\n        map(res => ({ type: 'layout/GET_FILTERED_EVENTS_SUCCESS', payload: res })),\n        catchError(error => of({ type: 'layout/GET_FILTERED_EVENTS_ERROR', payload: error }))\n      )\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logged.html":{"url":"classes/Logged.html","title":"class - Logged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/login/login.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/login/login.actions.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/login/login.actions.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LOGGED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/login/login.actions.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGGED = 'login/logged';\n\nexport class Logged implements Action {\n  readonly type = LOGGED;\n\n  constructor(public payload: boolean) {}\n}\n\nexport type Actions = Logged;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login-form/login-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-login-form\n            \n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                msgs\n                            \n                            \n                                    Public\n                                    Readonly\n                                validateFormService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validateFormService: ValidateFormService, fb: FormBuilder, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login-form/login-form.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validateFormService\n                                                  \n                                                        \n                                                                        ValidateFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login-form/login-form.component.ts:32\n                \n            \n\n\n            \n                \n                    instanze form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login-form/login-form.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login-form/login-form.component.ts:42\n                \n            \n\n\n            \n                \n                    Fired when user click on \"Login\" button in the form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login-form/login-form.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msgs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login-form/login-form.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            validateFormService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidateFormService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login-form/login-form.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../core/user.service';\nimport { ValidateFormService } from '../../core/validate-form.service';\n\n@Component({\n  selector: 'eui-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\n/**\n * Class that represent the login form component in the app\n */\nexport class LoginFormComponent implements OnInit {\n  loginForm: FormGroup;\n  msgs: string;\n\n  constructor(\n    public readonly validateFormService: ValidateFormService,\n    private readonly fb: FormBuilder,\n    private readonly router: Router,\n    private readonly userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.createForm();\n  }\n/**\n * instanze form\n */\n  createForm() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /**\n   * Fired when user click on \"Login\" button in the form\n   */\n  onSubmit() {\n    this.userService.login(this.loginForm.value).subscribe((res: any) => {\n      if (res.email) {\n        this.router.navigate(['/events']);\n      } else {\n        this.msgs = res;\n      }\n    }, err => this.msgs = 'Email not found.');\n  }\n\n}\n\n    \n\n    \n        \n    \n      Login\n    \n\n    \n      \n        \n          \n          \n            {{validateFormService.getError('email', loginForm.get('email'))}}\n          \n        \n        \n          \n          \n            {{validateFormService.getError('password', loginForm.get('password'))}}\n          \n        \n\n        \n          {{msgs}} \n        \n\n        \n          Need an account? Signup\n          \n            Login\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                // @import '../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt5.jpg', center, contain);\n  background-size: cover;\n}\n\n.form {\n  display: flex;\n  justify-content: center;\n}\n\n.form-login {\n  border-radius: 4px;\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  padding: 1rem;\n  background-color: rgba(255,255,255,0.9);\n}\n\n.login-btn {\n  text-align: right;\n  margin-top: 2rem;\n\n  .sign-up {\n    font-size: 12px;\n    margin-bottom: 0.5rem;\n\n    a {\n      font-weight: 600;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Login                                                      {{validateFormService.getError(\\'email\\', loginForm.get(\\'email\\'))}}                                                          {{validateFormService.getError(\\'password\\', loginForm.get(\\'password\\'))}}                                    {{msgs}}                           Need an account? Signup                      Login                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginModule.html":{"url":"modules/LoginModule.html","title":"module - LoginModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_declarations\n\n\n\ncluster_LoginModule_imports\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nLoginFormComponent->LoginModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLoginModule -->\n\nSharedModule->LoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LoginFormComponent } from './login-form/login-form.component';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginFormComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    LoginFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ]\n})\n/**\n * Module for Login\n */\nexport class LoginModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/page-not-found/page-not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/page-not-found/page-not-found.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/page-not-found/page-not-found.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'eui-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\n/**\n * Class that represent the pageNotFound component in the app\n */\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        Page not found\n    \n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                @import '../shared/styles/variables';\n\n.container {\n    @include container();\n    @include background('/assets/imgs/patt2.jpg', center, cover);\n    background-size: cover;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Page not found    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileDetailComponent.html":{"url":"components/ProfileDetailComponent.html","title":"component - ProfileDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile-detail/profile-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-profile-detail\n            \n\n            \n                styleUrls\n                ./profile-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile-detail/profile-detail.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile-detail/profile-detail.component.ts:32\n                \n            \n\n\n            \n                \n                    get user from local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile-detail/profile-detail.component.ts:39\n                \n            \n\n\n            \n                \n                    Log out use from the system\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile-detail/profile-detail.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile-detail/profile-detail.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../core/user.service';\nimport { User } from '../../models/user.model';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport * as login from '../../store/login/login.actions';\n\n@Component({\n  selector: 'eui-profile-detail',\n  templateUrl: './profile-detail.component.html',\n  styleUrls: ['./profile-detail.component.scss']\n})\n/**\n * Class that represent the detail profile component in the app\n */\nexport class ProfileDetailComponent implements OnInit {\n  user: User;\n\n  constructor(\n    private readonly userService: UserService,\n    private readonly router: Router,\n    private readonly store: Store,\n  ) {}\n\n  ngOnInit() {\n    this.getUser();\n  }\n\n  /**\n   * get user from local storage\n   */\n  getUser() {\n    this.user = JSON.parse(localStorage.getItem('user'));\n  }\n\n  /**\n   * Log out use from the system\n   */\n  logout() {\n    this.userService.logout();\n    this.store.dispatch(new login.Logged(false));\n    this.router.navigate(['/home']);\n  }\n\n}\n\n    \n\n    \n        \n  \n      User Profile\n  \n\n  \n    \n      \n        Email: \n         {{user.email}}\n      \n      \n        ID: \n         {{user.id}}\n      \n    \n  \n\n  \n    \n      Logout\n    \n  \n\n\n\n    \n\n    \n                \n                    ./profile-detail.component.scss\n                \n                // @import '../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt5.jpg', center, contain);\n  background-size: cover;\n}\n\n.wrap {\n  display: flex;\n  justify-content: center;\n}\n\n.userData {\n  margin-bottom: 20px;\n  padding: 1rem;\n  background-color: rgba(255,255,255,0.9);\n  border-radius: 4px;\n  min-width: 35%;\n  h4 {\n    display: inline-block;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        User Profile                      Email:          {{user.email}}                    ID:          {{user.id}}                        Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nProfileDetailComponent\n\nProfileDetailComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileDetailComponent->ProfileModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileDetailComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ProfileDetailComponent } from './profile-detail/profile-detail.component';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileDetailComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    ProfileDetailComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ]\n})\n/**\n * Module for Profile\n */\nexport class ProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\n/**\n * Angular material\n */\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { RouterModule } from '@angular/router';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\nimport 'hammerjs';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatListModule,\n    MatCardModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    RouterModule,\n    MatSlideToggleModule,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatListModule,\n    MatCardModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    RouterModule,\n    MatSlideToggleModule,\n    MatCheckboxModule,\n  ],\n  entryComponents: [],\n})\n\n/**\n * shared module contains component by angular material\n */\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupFormComponent.html":{"url":"components/SignupFormComponent.html","title":"component - SignupFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/signup/signup-form/signup-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-signup-form\n            \n\n            \n                styleUrls\n                ./signup-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signup-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                signupForm\n                            \n                            \n                                user\n                            \n                            \n                                    Public\n                                    Readonly\n                                validateFormService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validateFormService: ValidateFormService, fb: FormBuilder, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/signup/signup-form/signup-form.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validateFormService\n                                                  \n                                                        \n                                                                        ValidateFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup-form/signup-form.component.ts:39\n                \n            \n\n\n            \n                \n                    inicialize form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup-form/signup-form.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup-form/signup-form.component.ts:56\n                \n            \n\n\n            \n                \n                    Fired when user click on \"Signup\" button in the form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showPassword\n                        \n                        \n                    \n                \n            \n            \n                \nshowPassword(showPassword: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup-form/signup-form.component.ts:49\n                \n            \n\n\n            \n                \n                    change type of input when click in check show password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    showPassword\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('password', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup-form/signup-form.component.ts:21\n                            \n                        \n\n                \n                    \n                        ViewChild to be able to change input type in pasword\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup-form/signup-form.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup-form/signup-form.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            validateFormService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidateFormService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup-form/signup-form.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\nimport { UserService } from '../../core/user.service';\nimport { ValidateFormService } from '../../core/validate-form.service';\n\n@Component({\n  selector: 'eui-signup-form',\n  templateUrl: './signup-form.component.html',\n  styleUrls: ['./signup-form.component.scss']\n})\n/**\n * Class that represent the Signup component in the app\n */\nexport class SignupFormComponent implements OnInit {\n\n  /**\n   * ViewChild to be able to change input type in pasword\n   */\n  @ViewChild('password', {static: false}) password: ElementRef;\n  signupForm: FormGroup;\n  user: User;\n\n  constructor(\n    public readonly validateFormService: ValidateFormService,\n    private readonly fb: FormBuilder,\n    private readonly router: Router,\n    private readonly userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  /**\n   * inicialize form\n   */\n  createForm() {\n    this.signupForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /**\n   * change type of input when click in check show password\n   */\n  showPassword(showPassword: boolean) {\n    this.password.nativeElement.type = showPassword ? 'text' : 'password';\n  }\n\n  /**\n   * Fired when user click on \"Signup\" button in the form\n   */\n  onSubmit() {\n    this.user = this.signupForm.value;\n    this.userService.signup(this.user).subscribe(() => {\n      this.router.navigate(['/events']);\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n      Signup\n    \n\n    \n      \n        \n          \n          \n            {{validateFormService.getError('email', signupForm.get('email'))}}\n          \n        \n        \n          \n          \n            {{validateFormService.getError('password', signupForm.get('password'))}}\n          \n        \n          \n            Show password\n          \n\n\n        \n          Already have an account? Login\n          \n            Signup\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./signup-form.component.scss\n                \n                // @import '../../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt5.jpg', center, contain);\n  background-size: cover;\n}\n\n.form {\n  display: flex;\n  justify-content: center;\n}\n\n.form-signup {\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  padding: 1rem;\n  background-color: rgba(255,255,255,0.9);\n  border-radius: 4px;\n}\n\n.login-btn {\n  text-align: right;\n  margin-top: 2rem;\n\n  .login {\n    font-size: 12px;\n    margin-bottom: 0.5rem;\n\n    a {\n      font-weight: 600;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Signup                                                      {{validateFormService.getError(\\'email\\', signupForm.get(\\'email\\'))}}                                                          {{validateFormService.getError(\\'password\\', signupForm.get(\\'password\\'))}}                                        Show password                            Already have an account? Login                      Signup                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SignupModule.html":{"url":"modules/SignupModule.html","title":"module - SignupModule","body":"\n                   \n\n\n\n\n    Modules\n    SignupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SignupModule\n\n\n\ncluster_SignupModule_declarations\n\n\n\ncluster_SignupModule_imports\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\n\n\nSignupModule\n\nSignupModule\n\nSignupModule -->\n\nSignupFormComponent->SignupModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSignupModule -->\n\nSharedModule->SignupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/signup/signup.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SignupFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SignupFormComponent } from './signup-form/signup-form.component';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupFormComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    SignupFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ]\n})\n/**\n * Module for Signup\n */\nexport class SignupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.store.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        layout\n                                \n                                \n                                        login\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                    \n                                \n                                \n                                    \n                                        layout:     layoutReducer.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     layoutReducer.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                    \n                                \n                                \n                                    \n                                        login:     loginReducer.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     loginReducer.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap } from '@ngrx/store';\n\nimport * as loginReducer from './store/login/login.redux';\nimport * as layoutReducer from './store/layout/layout.redux';\n\nexport interface State {\n  login: loginReducer.State;\n  layout: layoutReducer.State;\n}\n\nexport const reducers: ActionReducerMap = {\n  login: loginReducer.reducer,\n  layout: layoutReducer.reducer,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-1.html":{"url":"interfaces/State-1.html","title":"interface - State-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.redux.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        filteredEvents\n                                \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filteredEvents\n                                    \n                                \n                                \n                                    \n                                        filteredEvents:         Event[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Event[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as layout from './layout.actions';\nimport { Event } from '../../models/event.model';\n\nexport interface State {\n  filteredEvents: Event[];\n  loading: boolean;\n  error: any;\n}\n\nexport const initialState: State = {\n  filteredEvents: [],\n  loading: false,\n  error: null\n};\n\nexport function reducer(state: State = initialState, action: layout.Actions): State {\n  switch (action.type) {\n    case layout.GET_FILTERED_EVENTS:\n      return {\n        ...state,\n        filteredEvents: [],\n        loading: true,\n        error: null\n      };\n\n    case layout.GET_FILTERED_EVENTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        filteredEvents: action.payload,\n        error: null\n      };\n\n    case layout.GET_FILTERED_EVENTS_ERROR:\n      return {\n        ...state,\n        filteredEvents: [],\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-2.html":{"url":"interfaces/State-2.html","title":"interface - State-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/login/login.redux.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        logged\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logged\n                                    \n                                \n                                \n                                    \n                                        logged:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as login from './login.actions';\n\nexport interface State {\n  logged: boolean;\n}\n\nexport const initialState: State = {\n  logged: false\n};\n\nexport function reducer(state: State = initialState, action: login.Actions): State {\n\n  if (action.type === login.LOGGED) {\n    return {\n      ...state,\n      logged: action.payload\n    };\n  } else {\n    return state;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/toolbar/toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-toolbar\n            \n\n            \n                styleUrls\n                ./toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                subscriptionLogin\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/toolbar/toolbar.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/toolbar/toolbar.component.ts:35\n                \n            \n\n\n            \n                \n                    After destroy the component loginSuscription need unsubscribe.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/toolbar/toolbar.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toolbar/toolbar.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubscriptionLike\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toolbar/toolbar.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toolbar/toolbar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { SubscriptionLike } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\n\n@Component({\n  selector: 'eui-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\n/**\n * Class that represent the toolbar component in top\n */\nexport class ToolbarComponent implements OnInit, OnDestroy {\n  user: User;\n  isAuthenticated: boolean;\n  subscriptionLogin: SubscriptionLike;\n  constructor(\n    private readonly store: Store\n  ) {}\n\n  ngOnInit() {\n    this.subscriptionLogin = this.store.pipe(select('login')).subscribe(state => {\n      if (state) {\n        this.isAuthenticated = state.logged;\n        if ( this.isAuthenticated) {\n          this.user = JSON.parse(localStorage.getItem('user'));\n        }\n      }\n    });\n  }\n  /**\n   * After destroy the component loginSuscription need unsubscribe.\n   */\n  ngOnDestroy() {\n    if (this.subscriptionLogin) {\n      this.subscriptionLogin.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  Home\n  Events\n  {{user.email}}\n  Login\n\n\n    \n\n    \n                \n                    ./toolbar.component.scss\n                \n                .toolbar {\n\n    .option {\n      margin-left: 10px;\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Home  Events  {{user.email}}  Login'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                interface used to store the user\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUser\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                setUser\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorService: ErrorService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkUser\n                        \n                        \n                    \n                \n            \n            \n                \ncheckUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:82\n                \n            \n\n\n            \n                \n                    Return true if user is authenticated, false in other case.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:53\n                \n            \n\n\n            \n                \n                    Log in user in the system if the password is correct.\nIf the password is incorrect return a string message\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Use to log in\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:74\n                \n            \n\n\n            \n                \n                    Log out the user in the system\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:90\n                \n            \n\n\n            \n                \n                    Determine if user is authenticated and then set result in isAuthenticated properti\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:29\n                \n            \n\n\n            \n                \n                    Sign up the user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User to sign up\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { catchError, retry, map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { User } from '../models/user.model';\nimport * as login from '../store/login/login.actions';\nimport { ErrorService } from './error.service';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly errorService: ErrorService,\n    private readonly store: Store,\n  ) {}\n\n  isAuthenticated: boolean;\n\n  /**\n   * Sign up the user\n   *\n   * @param user User to sign up\n   */\n  signup(user: User): Observable {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    return this.http\n      .post(environment.apiURL + 'users/', user, { headers })\n      .pipe(\n        retry(3),\n        map(r => {\n          localStorage.setItem('user', JSON.stringify(r));\n          this.setUser();\n        }),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n  /**\n   * Log in user in the system if the password is correct.\n   *\n   * If the password is incorrect return a string message\n   *\n   * @param user Use to log in\n   */\n  login(user: User): Observable {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    return this.http.get(`${environment.apiURL}users?email=${user.email}`, { headers }).pipe(\n      retry(3),\n      map(us => {\n        if (us[0].email && us[0].password === user.password) {\n          localStorage.setItem('user', JSON.stringify(us[0]));\n          this.setUser();\n        }\n        return us[0].password === user.password ? us[0] : 'Password not valid.';\n      }),\n      catchError(this.errorService.handleError)\n    );\n  }\n\n  /**\n   * Log out the user in the system\n   */\n  logout() {\n    localStorage.setItem('user', '');\n    return false;\n  }\n\n  /**\n   * Return true if user is authenticated, false in other case.\n   */\n  checkUser(): boolean {\n    this.setUser();\n    return this.isAuthenticated;\n  }\n\n  /**\n   * Determine if user is authenticated and then set result in isAuthenticated properti\n   */\n  private setUser() {\n    this.isAuthenticated = true;\n    this.isAuthenticated = Boolean(localStorage.getItem('user'));\n    this.isAuthenticated ? this.store.dispatch(new login.Logged(true)) : this.store.dispatch(new login.Logged(false));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateFormService.html":{"url":"injectables/ValidateFormService.html","title":"injectable - ValidateFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validate-form.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/validate-form.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError(name: string, field: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validate-form.service.ts:13\n                \n            \n\n\n            \n                \n                    If field has errors, return an error message explaining it. An empty string if it has not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Field name\n\n                                    \n                                \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Field object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateFormService {\n  constructor() {}\n\n  /**\n   * If field has errors, return an error message explaining it. An empty string if it has not.\n   *\n   * @param name Field name\n   * @param field Field object\n   */\n  getError(name: string, field: any): string {\n    if (field.errors) {\n      if (field.errors.required) {\n        return `${name} is required`;\n      } else if (field.errors.minlength) {\n        return `${name} min length is ${field.errors.minlength.requiredLength}`;\n      } else if (field.errors.maxlength) {\n        return `${name} max length is ${field.errors.maxlength.requiredLength}`;\n      } else if (field.errors.email) {\n        return `${name} isn't a valid email`;\n      }\n    }\n    return '';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.store.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.store.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/auth-guard.service.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/constants-service.ts\n            \n            variable\n            HTTP_HEADER_KEY_CONTENT_TYPE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/constants-service.ts\n            \n            variable\n            HTTP_HEADER_VALUE_APPLICATION_JSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/event.service.ts\n            \n            injectable\n            EventService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/core/images.service.ts\n            \n            injectable\n            ImagesService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/user.service.ts\n            \n            injectable\n            UserService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/core/validate-form.service.ts\n            \n            injectable\n            ValidateFormService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/events/event-detail/event-detail.component.ts\n            \n            component\n            EventDetailComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/events/event-form/event-form.component.ts\n            \n            component\n            EventFormComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/events/event-list/event-list.component.ts\n            \n            component\n            EventListComponent\n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                src/app/home-page/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/login/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/models/event.model.ts\n            \n            interface\n            Event\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            User\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/profile/profile-detail/profile-detail.component.ts\n            \n            component\n            ProfileDetailComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/signup/signup-form/signup-form.component.ts\n            \n            component\n            SignupFormComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            class\n            GetFilteredEvents\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            class\n            GetFilteredEventsError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            class\n            GetFilteredEventsSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            variable\n            GET_FILTERED_EVENTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            variable\n            GET_FILTERED_EVENTS_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            variable\n            GET_FILTERED_EVENTS_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.effects.ts\n            \n            injectable\n            LayoutEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.redux.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.redux.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.redux.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/login/login.actions.ts\n            \n            class\n            Logged\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/login/login.actions.ts\n            \n            variable\n            LOGGED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/login/login.redux.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/store/login/login.redux.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/login/login.redux.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.0.1\n        \n            @angular/cdk : ^8.0.1\n        \n            @angular/common : ~8.0.1\n        \n            @angular/compiler : ~8.0.1\n        \n            @angular/core : ~8.0.1\n        \n            @angular/forms : ~8.0.1\n        \n            @angular/material : ^8.0.1\n        \n            @angular/platform-browser : ~8.0.1\n        \n            @angular/platform-browser-dynamic : ~8.0.1\n        \n            @angular/router : ~8.0.1\n        \n            @ngrx/effects : ^8.0.1\n        \n            @ngrx/store : ^8.0.1\n        \n            hammerjs : ^2.0.8\n        \n            i : ^0.3.6\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            reducer   (src/.../layout.redux.ts)\n                        \n                        \n                            reducer   (src/.../login.redux.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/layout/layout.redux.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/store/login/login.redux.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEventsUi\nThis project was generated with Angular CLI version 8.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SignupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_declarations\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_SignupModule\n\n\n\ncluster_SignupModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nSharedModule->LoginModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nSignupModule\n\nSignupModule\n\nSignupModule -->\n\nSharedModule->SignupModule\n\n\n\n\n\nErrorService\n\nErrorService\n\nCoreModule -->\n\nErrorService->CoreModule\n\n\n\n\n\nEventService\n\nEventService\n\nCoreModule -->\n\nEventService->CoreModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nCoreModule -->\n\nImagesService->CoreModule\n\n\n\n\n\nUserService\n\nUserService\n\nCoreModule -->\n\nUserService->CoreModule\n\n\n\n\n\nValidateFormService\n\nValidateFormService\n\nCoreModule -->\n\nValidateFormService->CoreModule\n\n\n\n\n\nEventDetailComponent\n\nEventDetailComponent\n\nEventsModule -->\n\nEventDetailComponent->EventsModule\n\n\n\n\n\nEventFormComponent\n\nEventFormComponent\n\nEventsModule -->\n\nEventFormComponent->EventsModule\n\n\n\n\n\nEventListComponent\n\nEventListComponent\n\nEventsModule -->\n\nEventListComponent->EventsModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nLoginModule -->\n\nLoginFormComponent->LoginModule\n\n\n\n\n\nProfileDetailComponent\n\nProfileDetailComponent\n\nProfileModule -->\n\nProfileDetailComponent->ProfileModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nSignupModule -->\n\nSignupFormComponent->SignupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Actions   (src/.../layout.actions.ts)\n                        \n                        \n                            Actions   (src/.../login.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/layout/layout.actions.ts\n    \n    \n        \n            \n                \n                    \n                    Actions\n                \n            \n            \n                \n                            GetFilteredEvents | GetFilteredEventsSuccess | GetFilteredEventsError\n\n                \n            \n        \n    \n    src/app/store/login/login.actions.ts\n    \n    \n        \n            \n                \n                    \n                    Actions\n                \n            \n            \n                \n                            Logged\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            GET_FILTERED_EVENTS   (src/.../layout.actions.ts)\n                        \n                        \n                            GET_FILTERED_EVENTS_ERROR   (src/.../layout.actions.ts)\n                        \n                        \n                            GET_FILTERED_EVENTS_SUCCESS   (src/.../layout.actions.ts)\n                        \n                        \n                            HTTP_HEADER_KEY_CONTENT_TYPE   (src/.../constants-service.ts)\n                        \n                        \n                            HTTP_HEADER_VALUE_APPLICATION_JSON   (src/.../constants-service.ts)\n                        \n                        \n                            initialState   (src/.../login.redux.ts)\n                        \n                        \n                            initialState   (src/.../layout.redux.ts)\n                        \n                        \n                            LOGGED   (src/.../login.actions.ts)\n                        \n                        \n                            reducers   (src/.../app.store.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiURL: 'http://localhost:3000/'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiURL: 'http://server.open-events.site/'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/layout/layout.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GET_FILTERED_EVENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'layout/GET_FILTERED_EVENTS'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GET_FILTERED_EVENTS_ERROR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'layout/GET_FILTERED_EVENTS_ERROR'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GET_FILTERED_EVENTS_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'layout/GET_FILTERED_EVENTS_SUCCESS'\n                        \n                    \n\n\n            \n        \n\n    src/app/core/constants-service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_HEADER_KEY_CONTENT_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Content-Type'\n                        \n                    \n\n                \n                    \n                        General constants\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_HEADER_VALUE_APPLICATION_JSON\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'application/json'\n                        \n                    \n\n\n            \n        \n\n    src/app/store/login/login.redux.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  logged: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/layout/layout.redux.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  filteredEvents: [],\n  loading: false,\n  error: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/login/login.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOGGED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'login/logged'\n                        \n                    \n\n\n            \n        \n\n    src/app/app.store.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  login: loginReducer.reducer,\n  layout: layoutReducer.reducer,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
