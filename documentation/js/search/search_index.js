var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.485,1,1.145]],["body/components/AppComponent.html",[0,0.79,1,1.866,2,1.509,3,0.239,4,0.211,5,1.41,6,1.41,7,1.41,8,1.41,9,0.211,10,2.822,11,1.41,12,2.858,13,2.858,14,4.594,15,1.948,16,5.264,17,1.948,18,4.594,19,0.974,20,2.822,21,2.296,22,3.372,23,0.705,24,3.324,25,0.751,26,0.024,27,0.977,28,0.462,29,0.751,30,0.534,31,0.499,32,1.238,33,1.254,34,2.491,35,1.741,36,0.331,37,1.41,38,3.324,39,1.238,40,0.239,41,1.606,42,1.254,43,2.046,44,1.092,45,2.491,46,3.442,47,2.822,48,2.491,49,1.508,50,1.508,51,2.235,52,3.1,53,4.468,54,1.508,55,4.594,56,3.324,57,2.822,58,2.822,59,2.822,60,3.324,61,0.907,62,1.948,63,1.948,64,1.41,65,2.408,66,1.41,67,1.41,68,1.027,69,1.528,70,1.948,71,1.027,72,2.232,73,1.027,74,1.41,75,1.027,76,1.238,77,1.41,78,1.092,79,1.027,80,1.238,81,1.41,82,1.092,83,1.238,84,1.092,85,1.162,86,1.092,87,1.41,88,1.41,89,1.41,90,0.011,91,0.016,92,0.011]],["title/modules/AppModule.html",[93,0.951,94,2.353]],["body/modules/AppModule.html",[1,2.203,2,1.062,3,0.233,4,0.205,9,0.205,26,0.025,30,0.613,31,0.485,32,1.204,36,0.233,39,1.678,40,0.233,61,0.882,75,1.887,76,1.204,79,1.887,80,1.204,86,2.007,90,0.011,91,0.015,92,0.011,93,1.229,94,4.724,95,1.789,96,1.466,97,2.523,98,2.715,99,2.192,100,1.466,101,2.743,102,2.743,103,2.743,104,2.743,105,3.76,106,3.76,107,3.76,108,2.772,109,2.359,110,1.692,111,1.37,112,3.231,113,2.192,114,4.505,115,3.824,116,2.421,117,2.192,118,3.231,119,3.231,120,1.989,121,3.231,122,1.204,123,3.231,124,3.231,125,2.181,126,3.231,127,3.231,128,2.421,129,2.181,130,3.231,131,2.181,132,2.743,133,3.231,134,2.181,135,2.743,136,3.231,137,4.505,138,3.231,139,3.231,140,3.231,141,2.743]],["title/modules/AppRoutingModule.html",[93,0.951,105,2.146]],["body/modules/AppRoutingModule.html",[0,0.849,2,1.169,3,0.256,4,0.226,9,0.226,26,0.025,30,0.587,31,0.534,33,0.971,36,0.256,39,1.325,40,0.256,68,1.486,71,1.486,73,1.486,75,1.486,76,2.031,79,1.486,80,1.325,83,1.325,85,1.244,90,0.012,91,0.016,92,0.012,93,0.971,95,1.413,99,1.731,100,1.614,105,2.962,113,1.731,117,2.342,131,2.401,132,3.02,134,2.401,135,3.02,142,3.558,143,3.558,144,3.087,145,2.962,146,1.325,147,3.943,148,3.558,149,3.558,150,5.453,151,2.401,152,3.02,153,2.401,154,2.666,155,2.401,156,2.401,157,1.863,158,3.558,159,2.666,160,0.971,161,4.475,162,1.863,163,5.453,164,3.558,165,3.558,166,4.085,167,3.558,168,3.558,169,3.558,170,3.558,171,3.558,172,3.558,173,3.558,174,3.558,175,3.558,176,3.558,177,3.558]],["title/guards/AuthGuard.html",[147,2.353,178,2.612]],["body/guards/AuthGuard.html",[3,0.299,4,0.264,9,0.264,19,1.129,21,2.488,23,1.129,25,0.938,26,0.024,27,0.77,28,0.577,29,0.938,30,0.527,31,0.623,33,1.454,35,2.173,36,0.299,40,0.299,41,1.863,42,1.454,43,3.278,44,1.933,45,3.11,90,0.014,91,0.018,92,0.014,146,1.546,147,3.595,157,3.439,166,5.574,179,4.15,180,4.993,181,3.523,182,0.533,183,1.75,184,4.15,185,4.15,186,4.15,187,2.789,188,1.282,189,2.417,190,1.75,191,1.451,192,2.417,193,2.554,194,4.15,195,4.15,196,2.173]],["title/modules/CoreModule.html",[93,0.951,106,2.146]],["body/modules/CoreModule.html",[3,0.279,4,0.246,9,0.246,21,2.401,26,0.025,30,0.598,31,0.581,36,0.279,40,0.279,61,1.057,90,0.013,91,0.017,92,0.013,93,1.39,95,1.538,96,1.757,97,2.478,98,2.028,99,2.769,100,1.757,106,4.293,109,2.667,110,2.028,111,1.642,113,1.884,117,2.478,197,3.287,198,3.287,199,3.136,200,2.924,201,3.648,202,3.136,203,3.873,204,3.134,205,2.192,206,5.092,207,2.383,208,3.287,209,3.873,210,3.873,211,3.873,212,3.873,213,2.613,214,2.613,215,3.873,216,3.873]],["title/injectables/ErrorService.html",[190,1.145,199,1.696]],["body/injectables/ErrorService.html",[3,0.263,4,0.232,9,0.232,19,1.172,23,1.039,25,0.826,26,0.024,27,0.678,28,0.508,29,0.826,30,0.496,31,0.548,36,0.263,40,0.263,44,1.201,90,0.012,91,0.017,92,0.012,182,0.47,183,1.61,188,1.128,190,1.61,192,2.223,199,2.384,207,2.249,217,1.914,218,3.102,219,2.508,220,4.9,221,3.654,222,4.9,223,6.34,224,3.654,225,4.9,226,4.9,227,4.9,228,4.9,229,4.159,230,3.307,231,4.9,232,4.9,233,4.9,234,4.103,235,1.658,236,3.654,237,1.778,238,2.068,239,4.9,240,3.654,241,3.654,242,3.102,243,3.654,244,3.654,245,4.9,246,3.654,247,3.654,248,3.654,249,3.654,250,4.9,251,4.9,252,3.654,253,4.9,254,4.159,255,4.9,256,2.249,257,3.654,258,3.654,259,3.654,260,3.654,261,3.654,262,2.466,263,3.654,264,2.466,265,3.654,266,3.654,267,3.654,268,3.654,269,3.654,270,3.654,271,3.654]],["title/interfaces/Event.html",[69,1.012,272,1.384]],["body/interfaces/Event.html",[3,0.322,4,0.284,9,0.284,22,2.341,26,0.024,28,0.931,40,0.322,69,1.768,90,0.015,91,0.019,92,0.015,182,0.575,235,2.978,272,2.218,273,2.531,274,3.795,275,3.017,276,1.432,277,4.778,278,4.583,279,3.339,280,5.413,281,4.303,282,2.652]],["title/components/EventDetailComponent.html",[0,0.485,68,1.076]],["body/components/EventDetailComponent.html",[0,0.564,1,0.563,2,0.915,3,0.123,4,0.109,5,0.727,6,0.727,7,0.727,8,0.727,9,0.109,11,0.727,12,2.466,13,2.466,15,1.181,17,1.181,19,0.59,21,1.875,23,1.181,25,0.795,26,0.025,27,0.827,28,0.7,29,0.795,30,0.47,31,0.257,33,0.468,35,0.897,36,0.201,37,0.727,39,0.638,40,0.123,41,1.834,42,1.431,43,1.714,44,1.464,45,1.284,49,0.777,50,1.264,51,1.355,54,1.264,61,0.468,62,1.181,63,1.181,64,0.727,65,1.718,66,0.727,67,0.727,68,1.251,69,2.012,70,1.181,71,0.529,72,1.492,73,0.529,74,0.727,75,0.529,76,0.638,77,0.727,78,0.563,79,0.529,80,0.638,81,0.727,82,0.563,83,0.638,84,0.563,85,0.599,86,0.563,87,0.727,88,0.727,89,0.727,90,0.006,91,0.009,92,0.006,146,0.638,153,3.849,157,2.636,160,0.76,182,0.22,183,0.915,188,1.377,189,0.777,191,0.974,192,2.284,193,1.714,196,0.897,200,2.284,201,2.849,235,1.264,238,1.576,276,0.714,278,1.88,279,3.097,281,1.156,282,1.66,283,3.849,284,1.284,285,1.596,286,2.987,287,2.987,288,2.364,289,3.519,290,2.987,291,2.364,292,3.439,293,3.439,294,4.458,295,1.972,296,1.714,297,3.439,298,2.785,299,2.364,300,2.785,301,1.714,302,3.784,303,2.364,304,2.364,305,2.364,306,1.838,307,1.714,308,2.785,309,2.785,310,1.714,311,2.364,312,2.364,313,2.364,314,2.785,315,1.714,316,2.364,317,2.785,318,2.785,319,1.714,320,1.714,321,1.714,322,1.714,323,0.777,324,0.834,325,1.156,326,1.055,327,0.897,328,1.714,329,1.714,330,1.714,331,1.714,332,1.714,333,1.455,334,1.714,335,1.714,336,1.714,337,1.714,338,2.785,339,1.714,340,1.714,341,2.987,342,1.055,343,1.714,344,1.156,345,3.519,346,3.439,347,2.364,348,2.364,349,2.364,350,2.364,351,2.364,352,2.364,353,1.355,354,1.284,355,1.972,356,1.355,357,1.355,358,0.834,359,1.455,360,1.843,361,2.501,362,1.156,363,0.97,364,1.055,365,2.839,366,2.743,367,2.364,368,1.284,369,1.714,370,1.88,371,1.714,372,1.156,373,1.992,374,1.714,375,1.284,376,1.714,377,1.055,378,1.156,379,1.455,380,1.714,381,1.714,382,1.714,383,0.897,384,1.714,385,1.576,386,1.455,387,1.455,388,1.458,389,1.714,390,1.88,391,1.714,392,1.156,393,1.714,394,2.364,395,1.455,396,0.897,397,0.97,398,0.97,399,1.714]],["title/components/EventFormComponent.html",[0,0.485,71,1.076]],["body/components/EventFormComponent.html",[0,0.6,1,0.627,2,0.998,3,0.137,4,0.121,5,0.81,6,0.81,7,0.81,8,0.81,9,0.121,11,0.81,12,2.54,13,2.54,15,1.289,17,1.289,19,0.644,23,1.157,25,0.432,26,0.025,27,0.702,28,0.655,29,0.432,30,0.504,31,0.287,33,0.521,36,0.219,37,0.81,39,0.711,40,0.137,41,1.839,42,1.573,44,1.547,49,0.866,50,1.379,51,0.929,54,1.379,61,0.521,62,1.289,63,1.289,64,0.81,65,1.829,66,0.81,67,0.81,68,0.59,69,1.917,70,1.289,71,1.332,72,1.605,73,0.59,74,0.81,75,0.59,76,0.711,77,0.81,78,0.627,79,0.59,80,0.711,81,0.81,82,0.627,83,0.711,84,0.627,85,0.668,86,0.627,87,0.81,88,0.81,89,0.81,90,0.006,91,0.01,92,0.006,146,0.711,155,3.796,157,2.754,160,1.49,162,1.591,182,0.245,183,0.998,188,1.169,191,1.063,200,2.386,202,2.737,213,1.289,219,1.717,235,0.866,275,2.051,276,0.779,277,1.431,278,1.289,279,2.466,280,1.621,281,1.289,282,0.711,283,3.796,285,1.717,290,3.212,295,2.099,297,3.662,299,3.212,306,1.717,323,0.866,324,0.929,325,1.289,326,1.175,327,1,333,4.634,342,1.175,344,2.051,346,2.579,353,1.479,355,1.479,356,1.479,357,1.479,358,0.929,360,1.982,361,2.466,363,1.081,364,1.175,370,1.289,371,1.87,372,1.289,377,1.87,383,1,385,1.72,386,1.621,387,1.621,388,1,396,1,397,1.081,398,1.081,400,1.289,401,4.41,402,2.835,403,2.277,404,3.784,405,3.232,406,3.232,407,1.431,408,2.835,409,3.232,410,2.579,411,1.621,412,3.039,413,3.039,414,3.039,415,1.431,416,1.91,417,2.051,418,2.277,419,3.039,420,2.835,421,1.91,422,1.621,423,1.91,424,1.431,425,1.175,426,1.431,427,1.91,428,1.91,429,2.277,430,3.039,431,1.91,432,3.039,433,1.91,434,3.039,435,1.91,436,3.039,437,1.91,438,3.039,439,3.039,440,3.039,441,3.039,442,1.91,443,1.431,444,3.232,445,1.91,446,1.91,447,1.91,448,1.91,449,1.289,450,1.91,451,1.91,452,3.039,453,1.91,454,2.277,455,1.91,456,1.91,457,1.91,458,1.91,459,1.91,460,1.91,461,1.91,462,1.91,463,3.212,464,1.081,465,1.91,466,1.91,467,1.431,468,1.431,469,1.91,470,1.91,471,1.91,472,1.91,473,1.91,474,1.91,475,1.91,476,1.91]],["title/components/EventListComponent.html",[0,0.485,73,1.076]],["body/components/EventListComponent.html",[0,0.649,1,0.536,2,0.879,3,0.117,4,0.104,5,0.692,6,0.692,7,0.692,8,0.692,9,0.104,11,0.692,12,2.431,13,2.431,15,1.134,17,1.134,19,0.567,21,2.042,22,2.581,23,1.237,25,0.605,26,0.025,27,0.73,28,0.741,29,0.605,30,0.504,31,0.245,32,0.607,33,0.445,35,0.854,36,0.193,37,0.692,39,0.607,40,0.117,41,0.935,42,0.73,44,1.292,49,0.74,50,1.214,51,2.398,52,1.805,54,0.74,57,2.27,58,2.27,59,1.384,61,0.445,62,1.134,63,1.134,64,0.692,65,1.668,66,0.692,67,0.692,68,0.504,69,1.948,70,1.134,71,0.504,72,1.442,73,1.215,74,0.692,75,0.504,76,0.607,77,0.692,78,0.536,79,0.504,80,0.607,81,0.692,82,0.536,83,0.607,84,0.536,85,0.57,86,0.536,87,0.692,88,0.692,89,0.692,90,0.006,91,0.009,92,0.006,122,1.267,151,4,160,1.074,162,2.941,182,0.21,183,0.879,188,1.341,189,1.785,191,0.935,200,2.117,208,1.384,219,1.543,235,1.214,237,0.794,238,0.923,276,0.686,277,1.222,278,2.295,283,4,285,1.543,295,1.914,306,1.97,325,1.101,326,1.004,327,0.854,341,2.27,342,1.004,347,2.27,348,2.27,349,2.27,350,2.27,351,2.27,352,2.27,353,1.302,354,1.222,355,0.794,356,1.302,357,0.794,358,1.655,360,0.854,361,1.781,362,1.101,363,0.923,365,2.694,366,2.872,367,3.339,372,1.101,373,2.227,374,1.646,377,1.004,378,1.101,383,0.854,385,2.458,388,0.854,391,1.004,396,0.854,417,1.805,449,1.101,454,2.004,464,0.923,467,1.222,477,1.384,478,2.886,479,3.686,480,3.4,481,2.675,482,2.548,483,3.4,484,3.4,485,3.4,486,2.886,487,3.339,488,3.934,489,3.339,490,2.675,491,1.631,492,2.675,493,1.631,494,2.675,495,1.631,496,3.686,497,2.27,498,1.631,499,2.27,500,2.004,501,2.27,502,1.631,503,2.675,504,1.631,505,2.675,506,2.675,507,1.631,508,1.631,509,1.631,510,3.686,511,1.631,512,1.631,513,1.631,514,1.384,515,1.631,516,3.934,517,1.631,518,1.631,519,1.384,520,1.101,521,1.631,522,1.631,523,1.631,524,1.631,525,1.631,526,2.675,527,1.631,528,2.675,529,1.631,530,1.631,531,1.631,532,2.675,533,1.631,534,1.631,535,2.675,536,2.675,537,3.4,538,1.631,539,1.384,540,1.384,541,1.222,542,1.384,543,1.631,544,1.631,545,1.631,546,2.675,547,0.794,548,0.854,549,1.631,550,1.631,551,1.631,552,1.384,553,1.631,554,1.631,555,1.631,556,1.631,557,1.646,558,1.631,559,1.631,560,1.631,561,1.631,562,1.631,563,1.631,564,1.631,565,1.631,566,1.631,567,1.631,568,1.631,569,1.805,570,1.631,571,1.631,572,1.631,573,1.384,574,1.384,575,1.631,576,1.631]],["title/injectables/EventService.html",[190,1.145,200,1.582]],["body/injectables/EventService.html",[3,0.161,4,0.142,9,0.142,19,0.73,23,1.184,25,1.213,26,0.025,27,0.996,28,0.707,29,1.213,30,0.517,31,0.337,36,0.161,40,0.161,41,1.205,42,0.94,69,2.016,90,0.008,91,0.012,92,0.008,160,1.464,162,1.804,182,0.288,183,1.132,188,1.656,190,1.132,192,2.827,199,2.718,200,1.563,207,1.38,214,1.513,217,1.174,230,2.325,235,2.305,237,1.091,238,2.876,262,4.258,275,2.325,279,3.263,282,2.248,291,2.925,292,2.925,302,2.925,303,2.925,304,4.894,305,4.894,326,1.38,454,2.582,463,2.925,479,3.997,487,3.997,496,4.553,548,2.809,577,1.904,578,3.446,579,1.677,580,3.446,581,1.68,582,3.528,583,2.243,584,3.446,585,2.243,586,3.446,587,2.243,588,3.446,589,2.243,590,2.243,591,3.446,592,2.243,593,3.446,594,3.446,595,2.243,596,4.709,597,4.185,598,1.513,599,1.68,600,1.513,601,1.513,602,1.904,603,4.185,604,1.904,605,2.243,606,4.669,607,4.019,608,2.243,609,3.62,610,4.019,611,4.019,612,2.243,613,3.144,614,2.243,615,1.904,616,2.243,617,2.243]],["title/modules/EventsModule.html",[93,0.951,107,2.146]],["body/modules/EventsModule.html",[2,1.316,3,0.288,4,0.255,9,0.255,26,0.024,30,0.583,31,0.601,36,0.288,40,0.288,61,1.093,68,2.009,69,1.679,71,2.009,73,2.009,90,0.014,91,0.018,92,0.014,93,1.421,95,2.068,96,1.818,97,2.815,98,2.098,99,1.95,100,1.818,107,4.27,108,2.952,109,2.727,110,2.098,111,1.699,113,2.534,117,2.534,120,2.466,151,2.704,152,3.401,153,2.704,154,3.002,155,2.704,156,2.704,162,2.098,204,3.204,205,2.268,618,3.401,619,3.401,620,4.007,621,4.007]],["title/classes/GetFilteredEvents.html",[36,0.251,579,1.696]],["body/classes/GetFilteredEvents.html",[3,0.289,4,0.255,9,0.255,19,0.851,23,1.227,25,0.908,26,0.024,27,0.746,28,0.935,29,0.908,30,0.36,32,1.496,36,0.417,40,0.477,42,1.733,90,0.014,91,0.018,92,0.014,160,1.58,182,0.516,191,2.143,219,2.366,276,1.337,282,2.283,323,1.822,324,1.955,547,3.091,579,2.818,622,2.472,623,2.273,624,4.007,625,2.711,626,5.215,627,4.017,628,3.564,629,2.711,630,3.21,631,2.472,632,3.21,633,2.472,634,3.908,635,2.952,636,2.952,637,2.273]],["title/classes/GetFilteredEventsError.html",[36,0.251,636,1.973]],["body/classes/GetFilteredEventsError.html",[3,0.291,4,0.257,9,0.257,19,0.858,23,1.232,25,0.915,26,0.024,27,0.751,28,0.936,29,0.915,30,0.363,32,1.507,36,0.418,40,0.478,42,1.738,90,0.014,91,0.018,92,0.014,160,1.586,182,0.52,191,2.15,219,2.378,276,1.344,282,1.507,323,1.836,324,1.969,547,3.098,579,2.55,622,2.491,623,2.29,624,4.015,625,2.731,628,3.225,629,2.731,630,3.225,631,2.491,632,3.577,633,2.491,634,3.922,635,2.966,636,3.29,637,2.29,638,5.24,639,4.047]],["title/classes/GetFilteredEventsSuccess.html",[36,0.251,635,1.973]],["body/classes/GetFilteredEventsSuccess.html",[3,0.291,4,0.257,9,0.257,19,0.858,23,1.232,25,0.915,26,0.024,27,0.751,28,0.936,29,0.915,30,0.363,32,1.507,36,0.418,40,0.478,42,1.738,90,0.014,91,0.018,92,0.014,160,1.586,182,0.52,191,2.15,219,2.378,276,1.344,282,1.507,323,1.836,324,1.969,547,3.098,579,2.55,622,2.491,623,2.29,624,4.015,625,2.731,628,3.225,629,2.731,630,3.577,631,2.491,632,3.225,633,2.491,634,3.922,635,3.29,636,2.966,637,2.29,640,5.24,641,4.047]],["title/components/HomePageComponent.html",[0,0.485,75,1.076]],["body/components/HomePageComponent.html",[0,0.733,1,0.925,2,1.342,3,0.203,4,0.179,5,1.194,6,1.194,7,1.194,8,1.194,9,0.179,11,1.194,12,2.773,13,2.773,15,1.732,17,1.732,19,1.019,23,0.597,26,0.024,27,0.758,30,0.431,31,0.423,33,0.768,36,0.294,37,1.194,39,1.049,40,0.203,49,1.277,50,1.853,51,2.339,52,1.9,53,2.39,61,0.768,62,1.732,63,1.732,64,1.194,65,2.236,66,1.194,67,1.194,68,0.87,69,1.395,70,1.732,71,0.87,72,2.038,73,0.87,74,1.194,75,1.628,76,2.409,77,1.194,78,0.925,79,0.87,80,1.964,81,1.194,82,0.925,83,1.049,84,0.925,85,0.985,86,0.925,87,1.194,88,1.194,89,1.194,90,0.01,91,0.014,92,0.01,134,2.756,162,3.057,256,1.733,264,1.9,281,2.756,285,1.277,353,1.987,355,1.987,356,1.37,357,2.339,358,2.565,359,2.39,360,2.517,361,2.139,363,1.594,364,1.733,365,2.761,366,3.245,368,2.11,373,2.72,374,1.733,378,1.9,383,2.139,385,3.168,388,1.474,390,3.243,391,2.958,394,2.39,396,2.139,397,2.312,398,2.312,464,1.594,467,2.11,468,2.11,548,2.139,557,1.733,569,2.756,573,2.39,574,2.39,642,3.467,643,2.39,644,4.806,645,4.084,646,2.816,647,4.084,648,4.084,649,4.084,650,4.084,651,4.084,652,4.084,653,4.084,654,4.084,655,2.816,656,3.467,657,4.079,658,2.816,659,2.816,660,2.816,661,2.816,662,2.816,663,2.816,664,2.816,665,2.816,666,2.816,667,2.816,668,2.816,669,2.816,670,2.816,671,2.816,672,2.816,673,2.816,674,2.816]],["title/injectables/ImagesService.html",[190,1.145,201,1.973]],["body/injectables/ImagesService.html",[3,0.291,4,0.256,9,0.256,19,1.109,23,1.109,25,0.912,26,0.024,27,0.749,28,0.562,29,0.912,30,0.57,31,0.606,36,0.291,40,0.291,41,1.83,42,1.428,90,0.014,91,0.018,92,0.014,160,1.102,182,0.519,183,1.719,188,1.247,190,1.719,192,2.634,199,3.229,201,2.961,207,2.484,214,2.724,217,2.114,230,3.531,237,1.964,242,3.426,262,3.917,279,2.114,293,5.213,311,4.441,312,4.441,313,4.441,548,2.114,581,3.024,582,4.601,597,3.92,598,2.724,599,3.024,600,2.724,606,3.92,609,2.724,610,3.024,611,3.024,613,3.024,675,3.426,676,4.037,677,4.037,678,4.037,679,4.037,680,4.037]],["title/injectables/LayoutEffects.html",[129,2.353,190,1.145]],["body/injectables/LayoutEffects.html",[3,0.277,4,0.245,9,0.245,19,1.076,23,1.076,25,0.871,26,0.025,27,0.715,28,0.872,29,0.871,30,0.562,31,0.578,36,0.277,40,0.277,41,1.775,42,1.385,90,0.013,91,0.017,92,0.013,128,2.888,129,3.426,182,0.495,190,1.668,200,2.977,217,2.018,234,3.124,237,1.875,276,1.302,323,1.749,324,1.875,325,2.601,579,2.762,598,2.601,600,2.601,609,3.426,624,3.713,631,3.124,633,3.124,637,3.643,681,3.271,682,3.854,683,3.854,684,5.076,685,5.076,686,5.076,687,5.076,688,5.076,689,4.309,690,5.076,691,3.271,692,5.676,693,3.854,694,3.854,695,3.854,696,3.271]],["title/classes/Logged.html",[36,0.251,187,1.825]],["body/classes/Logged.html",[3,0.323,4,0.285,9,0.285,19,0.95,23,1.292,25,1.013,26,0.024,27,0.832,28,0.932,29,1.013,30,0.402,32,1.67,36,0.323,40,0.439,42,1.664,90,0.015,91,0.019,92,0.015,160,1.223,182,0.576,187,3.508,189,2.896,191,1.956,219,2.538,276,1.434,323,2.034,324,2.182,547,2.967,622,2.759,624,3.929,625,3.026,634,3.026,637,2.538,697,3.026,698,5.593,699,4.483,700,3.806]],["title/components/LoginFormComponent.html",[0,0.485,78,1.145]],["body/components/LoginFormComponent.html",[0,0.659,1,0.746,2,1.143,3,0.163,4,0.144,5,0.963,6,0.963,7,0.963,8,0.963,9,0.144,11,0.963,12,2.65,13,2.65,15,1.475,17,1.475,19,0.737,21,2.09,23,1.189,25,0.513,26,0.024,27,0.785,28,0.659,29,0.513,30,0.503,31,0.341,33,1.789,35,1.189,36,0.25,37,0.963,39,0.846,40,0.163,41,1.479,42,1.471,44,1.143,49,1.03,50,1.578,51,1.105,54,1.03,61,0.62,62,1.475,63,1.475,64,0.963,65,2.01,66,0.963,67,0.963,68,0.701,69,1.228,70,1.475,71,0.701,72,1.793,73,0.701,74,0.963,75,0.701,76,0.846,77,0.963,78,1.557,79,0.701,80,0.846,81,0.963,82,0.746,83,0.846,84,0.746,85,1.479,86,0.746,87,0.963,88,0.963,89,0.963,90,0.008,91,0.012,92,0.008,146,0.846,157,2.938,182,0.292,183,1.143,188,1.306,191,1.217,202,2.888,213,1.533,219,1.919,256,1.398,276,0.892,282,1.296,285,1.919,295,2.306,306,1.919,344,1.533,353,1.693,355,1.693,356,1.105,357,1.693,358,1.693,360,1.822,361,2.215,363,1.285,364,1.398,365,1.822,370,1.533,371,1.398,373,1.285,374,1.398,375,1.701,377,2.141,383,1.189,385,1.969,388,1.189,390,1.533,391,1.398,392,1.533,396,1.189,397,1.285,398,1.285,400,1.533,401,4.446,402,3.168,403,2.607,405,3.551,406,3.551,407,1.701,408,3.168,409,3.551,415,1.701,417,2.348,418,2.607,420,3.168,422,1.928,424,1.701,425,1.398,426,1.701,429,1.701,443,1.701,444,2.607,464,1.285,500,2.607,557,1.398,569,1.533,689,1.928,701,4.913,702,4.337,703,4.229,704,5.11,705,3.479,706,3.479,707,1.928,708,2.271,709,2.271,710,2.271,711,2.141,712,1.928,713,1.533,714,2.271,715,2.271,716,3.479,717,2.271,718,1.928,719,1.928,720,2.271,721,1.928,722,2.271,723,2.953,724,1.701,725,1.701,726,1.701,727,1.928,728,1.928,729,1.928,730,1.928,731,1.928,732,1.928,733,2.271,734,1.928,735,2.271]],["title/modules/LoginModule.html",[93,0.951,736,2.353]],["body/modules/LoginModule.html",[0,0.579,3,0.3,4,0.264,9,0.264,26,0.025,30,0.576,31,0.624,33,1.456,36,0.3,40,0.3,61,1.135,78,2.195,90,0.014,91,0.018,92,0.014,93,1.456,95,1.653,96,1.888,97,2.866,98,2.179,99,2.025,100,1.888,108,2.982,109,2.794,110,2.179,111,1.765,113,2.596,117,2.596,120,2.561,144,3.333,145,2.561,146,1.55,156,2.808,160,1.135,161,2.808,204,3.284,205,2.355,702,3.118,736,4.567,737,3.532,738,3.532,739,4.161,740,4.161,741,3.118]],["title/components/PageNotFoundComponent.html",[0,0.485,79,1.076]],["body/components/PageNotFoundComponent.html",[0,0.805,1,1.144,2,1.558,3,0.251,4,0.221,5,1.476,6,1.476,7,1.476,8,1.476,9,0.221,11,1.476,12,2.88,13,2.88,15,2.011,17,2.011,19,1.143,23,1.005,26,0.024,27,0.88,30,0.425,31,0.522,33,0.95,36,0.341,37,1.476,39,1.297,40,0.251,49,1.579,50,2.151,61,0.95,62,2.011,63,2.011,64,1.476,65,2.455,66,1.476,67,1.476,68,1.075,69,1.565,70,2.011,71,1.075,72,2.287,73,1.075,74,1.476,75,1.075,76,1.297,77,1.476,78,1.144,79,1.788,80,2.486,81,1.476,82,1.144,83,1.297,84,1.144,85,1.217,86,1.144,87,1.476,88,1.476,89,1.476,90,0.012,91,0.016,92,0.012,131,3.639,182,0.447,183,1.558,188,1.075,191,1.658,285,2.447,295,2.818,306,1.579,353,2.307,354,2.608,355,1.694,356,2.307,357,1.694,358,1.694,718,4.915,742,4.577,743,2.955,744,5.393,745,4.742,746,3.481,747,3.481,748,3.481]],["title/components/ProfileDetailComponent.html",[0,0.485,82,1.145]],["body/components/ProfileDetailComponent.html",[0,0.702,1,0.846,2,1.256,3,0.185,4,0.164,5,1.092,6,1.092,7,1.092,8,1.092,9,0.164,11,1.092,12,2.724,13,2.724,15,1.622,17,1.622,19,0.811,20,2.185,21,2.106,22,3.066,23,1.144,25,0.582,26,0.024,27,0.847,28,0.532,29,0.582,30,0.539,31,0.386,32,0.959,33,1.043,34,1.929,35,1.348,36,0.275,37,1.092,39,0.959,40,0.185,41,1.595,42,1.245,44,2.054,46,1.929,48,1.929,49,1.168,50,1.735,51,1.253,54,1.168,61,0.702,62,1.622,63,1.622,64,1.092,65,2.142,66,1.092,67,1.092,68,0.795,69,1.324,70,1.622,71,0.795,72,1.935,73,0.795,74,1.092,75,0.795,76,0.959,77,1.092,78,0.846,79,0.795,80,0.959,81,1.092,82,1.659,83,2.363,84,0.846,85,0.9,86,0.846,87,1.092,88,1.092,89,1.092,90,0.009,91,0.013,92,0.009,111,1.622,146,0.959,157,3.066,182,0.331,183,1.256,188,1.409,191,1.337,256,1.584,276,0.981,279,2.002,284,1.929,285,2.07,286,3.873,287,3.873,288,3.246,295,2.457,306,2.07,327,1.348,342,2.353,353,1.861,355,1.861,356,1.253,357,1.861,358,1.253,360,2.002,361,1.348,365,1.348,371,1.584,373,1.457,383,1.348,388,1.348,392,1.737,396,1.348,397,1.457,398,1.457,449,1.737,464,1.457,468,1.929,656,2.185,657,2.185,711,2.353,724,1.929,726,1.929,749,4.799,750,4.236,751,5.05,752,4.799,753,3.824,754,2.574,755,3.824,756,3.824,757,2.574,758,3.246,759,2.865,760,3.246,761,2.574,762,2.574,763,1.929,764,2.574,765,2.574,766,3.824,767,2.574,768,2.574,769,2.185,770,2.574,771,2.574]],["title/modules/ProfileModule.html",[93,0.951,772,2.353]],["body/modules/ProfileModule.html",[0,0.579,3,0.3,4,0.264,9,0.264,26,0.025,30,0.576,31,0.624,36,0.3,40,0.3,61,1.135,82,2.195,83,1.987,90,0.014,91,0.018,92,0.014,93,1.456,95,1.653,96,1.888,97,2.866,98,2.179,99,2.025,100,1.888,108,2.982,109,2.794,110,2.179,111,1.765,113,2.596,117,2.596,120,2.561,144,3.333,145,2.561,146,1.55,154,3.118,160,1.135,161,2.808,204,3.284,205,2.355,741,3.118,750,3.118,772,4.567,773,3.532,774,3.532,775,4.161,776,4.161]],["title/modules/SharedModule.html",[93,0.951,108,1.582]],["body/modules/SharedModule.html",[0,0.547,3,0.283,4,0.25,9,0.25,26,0.025,30,0.624,31,0.59,36,0.283,40,0.283,90,0.013,91,0.017,92,0.013,93,1.072,95,1.56,97,1.912,100,1.783,108,2.332,113,1.912,117,2.501,145,3.526,146,1.463,425,2.418,497,3.335,777,3.929,778,4.363,779,5.141,780,5.73,781,5.73,782,5.73,783,3.929,784,5.73,785,3.929,786,5.73,787,3.929,788,5.73,789,3.929,790,5.73,791,3.929,792,5.73,793,3.929,794,3.335,795,5.73,796,3.929,797,5.73,798,3.929,799,5.141,800,3.929,801,3.335,802,3.929,803,3.929,804,3.929]],["title/components/SignupFormComponent.html",[0,0.485,84,1.145]],["body/components/SignupFormComponent.html",[0,0.625,1,0.676,2,1.059,3,0.148,4,0.131,5,0.873,6,0.873,7,0.873,8,0.873,9,0.131,11,0.873,12,2.589,13,2.589,15,1.367,17,1.367,19,0.683,21,2.016,23,1.221,25,0.729,26,0.024,27,0.835,28,0.82,29,0.729,30,0.502,31,0.309,33,1.332,35,1.077,36,0.232,37,0.873,39,0.766,40,0.148,41,1.389,42,1.413,43,1.984,44,1.841,49,0.933,50,1.462,51,1.001,54,0.933,61,0.561,62,1.367,63,1.367,64,0.873,65,1.907,66,0.873,67,0.873,68,0.635,69,1.153,70,1.367,71,0.635,72,1.685,73,0.635,74,0.873,75,0.635,76,0.766,77,0.873,78,0.676,79,0.635,80,0.766,81,0.873,82,0.676,83,0.766,84,1.477,85,2.234,86,0.676,87,0.873,88,0.873,89,0.873,90,0.007,91,0.011,92,0.007,146,0.766,157,2.834,182,0.264,183,1.059,188,1.388,189,1.803,191,1.127,196,1.688,202,2.803,213,1.389,219,1.803,256,1.266,276,0.826,285,1.803,295,2.188,306,2.04,327,1.077,344,1.389,353,1.568,355,1.568,356,1.001,357,1.568,358,1.568,360,1.688,361,2.081,363,1.165,364,1.266,365,1.688,370,1.389,371,1.266,373,1.165,374,1.266,375,1.542,377,1.984,383,1.077,385,1.824,388,1.077,390,2.175,391,1.266,392,1.389,396,1.077,397,1.165,398,1.165,400,1.389,401,4.198,402,2.977,403,2.415,405,3.369,406,3.369,407,1.542,408,2.977,409,3.369,410,1.746,411,1.746,415,1.542,417,2.175,418,3.369,420,2.977,424,1.542,425,1.266,426,1.542,429,1.542,443,1.542,444,2.415,464,1.165,557,1.266,569,1.389,691,1.746,707,1.746,711,1.266,712,1.746,713,3.888,719,1.746,721,1.746,723,2.736,724,1.542,725,1.542,726,1.542,729,1.746,730,1.746,731,1.746,732,1.746,734,1.746,763,1.542,805,5.002,806,4.416,807,3.973,808,4.496,809,3.223,810,2.058,811,3.223,812,2.058,813,3.223,814,3.817,815,4.496,816,4.496,817,3.973,818,3.223,819,3.223,820,2.058,821,3.973,822,3.223,823,2.058,824,2.058,825,2.058,826,2.058,827,2.058,828,2.058,829,3.223,830,2.058,831,2.058]],["title/modules/SignupModule.html",[93,0.951,832,2.353]],["body/modules/SignupModule.html",[0,0.579,3,0.3,4,0.264,9,0.264,26,0.025,30,0.576,31,0.624,36,0.3,40,0.3,61,1.135,84,2.195,85,1.866,90,0.014,91,0.018,92,0.014,93,1.456,95,1.653,96,1.888,97,2.866,98,2.179,99,2.025,100,1.888,108,2.982,109,2.794,110,2.179,111,1.765,113,2.596,117,2.596,120,2.561,144,3.333,145,2.561,146,1.55,156,2.808,160,1.135,161,2.808,204,3.284,205,2.355,741,3.118,806,3.118,832,4.567,833,3.532,834,3.532,835,4.161,836,4.161]],["title/interfaces/State.html",[122,1.298,272,1.384]],["body/interfaces/State.html",[3,0.338,4,0.298,9,0.298,26,0.024,28,0.8,30,0.558,32,1.747,33,1.816,40,0.414,90,0.016,91,0.019,92,0.016,122,2.142,125,3.166,160,1.28,182,0.603,272,1.863,273,2.655,276,1.475,520,4.491,837,3.515,838,6.221,839,6.221,840,4.882,841,4.691,842,4.691,843,4.691,844,4.691,845,3.982,846,3.982]],["title/interfaces/State-1.html",[122,1.086,272,1.158,362,1.968]],["body/interfaces/State-1.html",[3,0.289,4,0.255,9,0.255,26,0.024,28,0.806,30,0.468,40,0.417,69,1.779,90,0.014,91,0.018,92,0.014,122,2.53,159,5.034,160,1.096,182,0.516,189,2.627,192,2.781,193,2.472,196,3.033,234,4.135,272,1.595,273,2.273,276,1.337,323,1.822,326,2.472,520,2.711,547,1.955,847,2.711,848,5.703,849,5.215,850,3.519,851,4.916,852,3.009,853,3.009,854,4.017,855,3.409,856,4.916,857,4.017,858,4.017,859,4.427,860,4.017]],["title/interfaces/State-2.html",[122,1.086,272,1.158,861,2.917]],["body/interfaces/State-2.html",[3,0.332,4,0.293,9,0.293,26,0.024,28,0.641,30,0.413,33,1.258,40,0.444,90,0.016,91,0.019,92,0.016,122,2.546,160,1.258,182,0.593,187,3.532,189,2.801,192,2.582,196,2.415,272,1.831,273,2.61,276,1.459,547,2.244,850,3.841,852,3.455,853,3.455,855,3.914,859,3.914,862,3.112,863,5.692,864,4.611]],["title/components/ToolbarComponent.html",[0,0.485,86,1.145]],["body/components/ToolbarComponent.html",[0,0.821,1,0.955,2,1.373,3,0.209,4,0.185,5,1.233,6,1.233,7,1.233,8,1.233,9,0.185,11,1.233,12,2.79,13,2.79,15,1.772,17,1.772,19,0.886,22,3.09,23,1.251,25,0.657,26,0.024,27,0.908,28,0.744,29,0.657,30,0.48,31,0.436,32,1.083,33,1.335,36,0.301,37,1.233,40,0.209,41,1.016,42,0.793,44,1.939,61,0.793,62,1.772,63,1.772,64,1.233,65,2.269,66,1.233,67,1.233,68,0.898,69,1.42,70,1.772,71,0.898,72,2.075,73,0.898,74,1.233,75,0.898,76,1.823,77,1.233,78,0.955,79,0.898,80,1.083,81,1.233,82,0.955,83,1.083,84,0.955,85,1.016,86,1.758,87,2.404,88,1.233,89,1.233,90,0.01,91,0.014,92,0.01,122,1.083,162,2.188,182,0.374,183,1.373,188,1.291,189,1.896,191,1.461,237,1.414,276,1.072,285,2.22,295,2.603,306,1.896,327,1.522,342,2.572,365,1.522,378,1.962,379,2.467,449,1.962,478,4.153,482,3.666,486,4.153,489,4.541,499,3.547,500,3.131,501,3.547,510,4.153,514,2.467,539,3.547,540,2.467,541,3.131,542,2.467,552,2.467,557,1.789,763,2.178,865,2.467,866,4.893,867,4.179,868,2.907,869,4.179,870,2.907,871,4.179,872,2.907,873,2.907,874,2.907,875,2.907]],["title/interfaces/User.html",[44,1.145,272,1.384]],["body/interfaces/User.html",[3,0.348,4,0.307,9,0.307,22,2.53,26,0.023,28,0.877,40,0.348,44,2.07,90,0.016,91,0.02,92,0.016,182,0.621,235,2.192,272,2.326,273,2.734,275,3.26,276,1.502,279,3.431,282,2.612,711,4.032,713,4.421,876,4.101]],["title/injectables/UserService.html",[21,1.298,190,1.145]],["body/injectables/UserService.html",[3,0.176,4,0.155,9,0.155,19,0.78,21,1.371,22,3.014,23,1.22,25,1,26,0.025,27,0.821,28,0.772,29,1,30,0.543,31,0.367,32,0.911,33,1.208,34,1.833,36,0.176,40,0.176,41,1.94,42,1.208,44,2.251,46,2.758,47,2.076,48,1.833,54,1.67,85,1.287,90,0.015,91,0.012,92,0.008,111,1.561,160,1.004,182,0.314,183,1.209,188,1.63,189,2.395,190,1.209,192,2.749,193,2.724,196,2.317,199,2.801,207,1.505,214,1.651,217,1.281,230,2.484,235,1.67,237,1.19,238,2.083,262,3.563,264,2.484,276,0.944,282,1.371,306,1.11,327,1.281,482,3.956,541,3.689,548,1.927,581,1.833,582,3.689,597,3.316,598,1.651,599,1.833,600,1.651,601,1.651,602,2.076,606,3.689,609,2.484,610,2.758,611,2.758,613,1.833,615,2.076,696,2.076,713,3.563,727,4.179,728,4.179,752,4.179,758,4.709,759,2.758,760,4.179,856,3.124,877,2.076,878,4.923,879,4.923,880,2.446,881,2.446,882,4.923,883,3.681,884,2.446,885,3.681,886,3.681,887,2.446,888,2.446,889,3.681,890,3.681,891,3.681,892,3.681,893,2.446,894,2.446,895,3.124,896,2.446,897,2.446,898,4.425,899,2.446,900,4.425,901,2.446,902,2.446,903,2.446,904,3.681,905,3.681,906,2.446,907,2.446,908,2.076,909,2.446]],["title/injectables/ValidateFormService.html",[190,1.145,202,1.696]],["body/injectables/ValidateFormService.html",[3,0.283,4,0.25,9,0.25,19,1.214,23,1.09,25,0.888,26,0.024,27,1.255,28,0.547,29,0.888,30,0.352,31,0.59,36,0.283,40,0.283,90,0.013,91,0.017,92,0.013,182,0.505,183,1.689,188,1.213,190,1.689,192,2.991,202,2.501,217,2.057,229,4.363,234,3.164,235,1.783,238,2.91,264,3.469,282,2.456,368,2.944,711,2.418,769,3.335,794,5.793,908,3.335,910,4.863,911,3.335,912,5.141,913,3.929,914,5.141,915,3.929,916,5.141,917,5.141,918,4.363,919,3.929,920,3.929,921,3.929,922,3.929,923,5.141,924,3.929,925,3.929,926,3.929,927,3.929,928,3.929]],["title/coverage.html",[929,4.029]],["body/coverage.html",[0,0.896,1,0.964,9,0.186,10,2.49,21,1.092,26,0.024,28,0.408,36,0.387,44,0.964,52,1.979,68,0.906,69,0.851,71,0.906,73,0.906,75,0.906,78,0.964,79,0.906,82,0.964,84,0.964,86,0.964,90,0.01,91,0.014,92,0.01,122,1.832,125,1.979,129,1.979,131,1.979,134,1.979,147,1.979,151,1.979,153,1.979,155,1.979,178,2.197,180,2.49,181,2.49,187,2.203,190,1.945,199,1.427,200,1.331,201,1.66,202,1.427,218,2.49,272,2.259,274,2.49,283,3.319,284,3.151,366,4.289,395,2.49,400,3.319,477,2.49,548,1.536,577,2.49,579,1.427,601,2.839,603,2.197,607,2.197,623,3.35,628,1.805,630,1.805,632,1.805,635,1.66,636,1.66,642,2.49,643,2.49,675,2.49,681,2.49,697,2.839,701,2.49,702,2.197,725,2.197,742,2.49,743,2.49,749,2.49,750,2.197,805,2.49,806,2.197,837,3.151,847,3.319,850,2.839,852,3.151,862,3.319,865,2.49,876,2.49,877,2.49,910,2.49,911,2.49,929,2.49,930,2.933,931,2.933,932,2.933,933,4.918,934,4.918,935,6.523,936,6.591,937,5.688,938,5.372,939,3.57,940,3.57,941,2.933,942,2.933,943,2.933,944,2.933,945,2.933,946,2.933,947,2.933,948,2.933,949,2.933,950,2.933,951,4.206,952,2.933,953,4.206,954,4.206,955,2.933,956,2.933,957,2.933,958,5.688,959,3.57,960,2.49,961,2.49,962,2.933,963,2.933]],["title/dependencies.html",[96,1.901,964,2.917]],["body/dependencies.html",[26,0.024,31,0.708,32,1.757,90,0.016,91,0.02,92,0.016,96,2.141,115,4.9,116,4.325,128,3.535,146,1.757,205,2.671,237,2.296,425,2.904,519,4.005,801,4.005,965,7.093,966,4.719,967,4.719,968,4.719,969,4.719,970,4.719,971,4.719,972,4.719,973,4.719,974,4.719,975,4.719,976,4.719]],["title/miscellaneous/functions.html",[977,1.651,978,3.556]],["body/miscellaneous/functions.html",[25,1.356,26,0.023,27,1.113,29,1.356,90,0.017,91,0.02,92,0.017,122,2.473,182,0.646,188,1.852,547,3.23,847,3.392,853,4.493,862,3.392,959,5.635,977,2.845,978,4.266,979,4.266,980,4.266]],["title/index.html",[182,0.375,981,2.917,982,2.917]],["body/index.html",[0,0.827,4,0.27,26,0.018,27,0.789,39,1.582,43,2.615,90,0.014,91,0.018,92,0.014,111,1.802,254,3.606,316,3.606,372,4.224,548,2.225,759,4.456,778,5.048,814,3.606,983,4.248,984,5.407,985,4.248,986,5.947,987,4.248,988,4.248,989,4.248,990,5.407,991,6.464,992,6.714,993,4.248,994,4.248,995,4.248,996,4.248,997,4.248,998,4.248,999,4.248,1000,4.248,1001,5.947,1002,4.248,1003,6.464,1004,4.248,1005,4.248,1006,4.248,1007,4.248,1008,4.248,1009,3.606,1010,5.407,1011,5.407,1012,6.26,1013,4.248,1014,5.407,1015,5.407,1016,4.248,1017,4.248,1018,4.248,1019,4.248,1020,5.947,1021,4.248,1022,4.248,1023,4.248]],["title/modules.html",[95,1.885]],["body/modules.html",[26,0.02,90,0.017,91,0.02,92,0.017,94,3.33,95,1.96,105,3.037,106,3.037,107,3.037,108,2.239,116,5.136,736,3.33,772,3.33,832,3.33,1024,6.855,1025,6.855,1026,6.991,1027,5.931,1028,5.931]],["title/overview.html",[1029,4.029]],["body/overview.html",[1,2.093,2,1.127,21,1.993,26,0.024,61,0.936,68,1.652,71,1.652,73,1.652,75,1.652,78,1.758,79,1.652,82,1.758,84,1.758,86,1.758,90,0.012,91,0.016,92,0.012,93,0.936,94,4.726,95,1.362,96,1.556,97,1.669,98,1.796,99,1.669,100,1.556,101,2.911,102,2.911,103,2.911,104,2.911,105,3.293,106,4.198,107,4.136,108,2.89,109,2.458,110,1.796,111,1.454,178,2.57,197,2.911,198,2.911,199,2.604,200,2.428,201,3.029,202,2.604,217,1.796,273,1.941,362,2.315,366,2.111,618,2.911,619,2.911,622,2.111,736,4.199,737,2.911,738,2.911,772,4.199,773,2.911,774,2.911,832,4.199,833,2.911,834,2.911,1029,2.911,1030,3.43,1031,3.43,1032,3.43,1033,3.43,1034,3.43]],["title/routes.html",[144,2.686]],["body/routes.html",[26,0.022,90,0.019,91,0.022,92,0.019,144,3.158]],["title/miscellaneous/typealiases.html",[977,1.651,1035,4.19]],["body/miscellaneous/typealiases.html",[26,0.023,28,0.733,90,0.018,91,0.021,92,0.018,182,0.678,187,2.76,579,2.565,623,2.984,635,2.984,636,2.984,637,3.816,697,3.557,977,2.984,1036,5.271,1037,4.474,1038,4.474]],["title/miscellaneous/variables.html",[977,1.651,1039,3.556]],["body/miscellaneous/variables.html",[26,0.024,28,0.952,33,0.999,54,1.662,90,0.012,91,0.017,92,0.012,122,1.828,125,3.312,141,3.109,159,2.744,182,0.471,187,2.898,193,2.254,196,2.898,234,2.254,282,2.363,323,3.084,324,3.307,520,2.472,601,3.989,603,3.677,604,3.109,607,3.677,623,2.073,628,3.02,629,2.472,630,3.02,631,2.254,632,3.02,633,2.254,697,2.472,700,3.109,837,2.744,840,3.109,845,3.109,846,3.109,847,2.472,848,3.109,850,3.989,851,3.109,862,2.472,895,3.109,918,4.165,939,3.109,940,4.697,960,3.109,961,3.109,977,2.073,979,3.109,980,3.109,1009,4.165,1037,4.697,1038,3.109,1039,3.109,1040,3.662,1041,3.662,1042,4.907,1043,3.662,1044,4.907,1045,3.662,1046,3.662,1047,3.662]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":366,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.3.6",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["0.3rem",{"_index":574,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{}}}],["0.5rem",{"_index":730,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["0.8rem",{"_index":564,"title":{},"body":{"components/EventListComponent.html":{}}}],["0.9.1",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":362,"title":{"interfaces/State-1.html":{}},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"overview.html":{}}}],["1.3rem",{"_index":671,"title":{},"body":{"components/HomePageComponent.html":{}}}],["1.4",{"_index":674,"title":{},"body":{"components/HomePageComponent.html":{}}}],["1.5rem",{"_index":567,"title":{},"body":{"components/EventListComponent.html":{}}}],["1.9.0",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1031,"title":{},"body":{"overview.html":{}}}],["100",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["10px",{"_index":379,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["12px",{"_index":729,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["14",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":572,"title":{},"body":{"components/EventListComponent.html":{}}}],["15px",{"_index":575,"title":{},"body":{"components/EventListComponent.html":{}}}],["1px",{"_index":561,"title":{},"body":{"components/EventListComponent.html":{}}}],["1rem",{"_index":392,"title":{},"body":{"components/EventDetailComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["2",{"_index":861,"title":{"interfaces/State-2.html":{}},"body":{}}],["2.0.8",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["2.2rem",{"_index":662,"title":{},"body":{"components/HomePageComponent.html":{}}}],["2/6",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":468,"title":{},"body":{"components/EventFormComponent.html":{},"components/HomePageComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["22",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":659,"title":{},"body":{"components/HomePageComponent.html":{}}}],["28",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["2rem",{"_index":374,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["300",{"_index":573,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{}}}],["30px",{"_index":667,"title":{},"body":{"components/HomePageComponent.html":{}}}],["33",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":770,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["36",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["3rem",{"_index":663,"title":{},"body":{"components/HomePageComponent.html":{}}}],["4",{"_index":1033,"title":{},"body":{"overview.html":{}}}],["4/10",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["4/11",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["4/14",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":725,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["4px",{"_index":398,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["4rem",{"_index":566,"title":{},"body":{"components/EventListComponent.html":{}}}],["5",{"_index":1034,"title":{},"body":{"overview.html":{}}}],["5/8",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":466,"title":{},"body":{"components/EventFormComponent.html":{}}}],["56px",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["5px",{"_index":399,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["6",{"_index":1032,"title":{},"body":{"overview.html":{}}}],["6.4.0",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":731,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["600px",{"_index":672,"title":{},"body":{"components/HomePageComponent.html":{}}}],["62",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["65",{"_index":668,"title":{},"body":{"components/HomePageComponent.html":{}}}],["6px",{"_index":376,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["70",{"_index":553,"title":{},"body":{"components/EventListComponent.html":{}}}],["75",{"_index":395,"title":{},"body":{"components/EventDetailComponent.html":{},"coverage.html":{}}}],["8",{"_index":1030,"title":{},"body":{"overview.html":{}}}],["8.0.1",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":988,"title":{},"body":{"index.html":{}}}],["80",{"_index":555,"title":{},"body":{"components/EventListComponent.html":{}}}],["800px",{"_index":369,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["90",{"_index":565,"title":{},"body":{"components/EventListComponent.html":{}}}],["900",{"_index":570,"title":{},"body":{"components/EventListComponent.html":{}}}],["95",{"_index":576,"title":{},"body":{"components/EventListComponent.html":{}}}],["9f354e7919a3f56e537616f46b1c1e87b5632d7c7227f2bd469762eed79a6296",{"_index":679,"title":{},"body":{"injectables/ImagesService.html":{}}}],["accenture",{"_index":653,"title":{},"body":{"components/HomePageComponent.html":{}}}],["accordingly",{"_index":247,"title":{},"body":{"injectables/ErrorService.html":{}}}],["account",{"_index":723,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["acn",{"_index":387,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["action",{"_index":547,"title":{},"body":{"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["action.payload",{"_index":859,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["action.type",{"_index":855,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["actionreducermap",{"_index":840,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":637,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"miscellaneous/typealiases.html":{}}}],["activatedroute",{"_index":297,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["actual_component",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["add",{"_index":454,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["addedby",{"_index":277,"title":{},"body":{"interfaces/Event.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{}}}],["addedbyvalue",{"_index":438,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform",{"_index":404,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get('date",{"_index":458,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get('description",{"_index":462,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get('location",{"_index":460,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get('title",{"_index":456,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get(\\'date",{"_index":472,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get(\\'description",{"_index":476,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get(\\'location",{"_index":474,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addeditform.get(\\'title",{"_index":470,"title":{},"body":{"components/EventFormComponent.html":{}}}],["addevent",{"_index":578,"title":{},"body":{"injectables/EventService.html":{}}}],["addevent(event",{"_index":584,"title":{},"body":{"injectables/EventService.html":{}}}],["again",{"_index":270,"title":{},"body":{"injectables/ErrorService.html":{}}}],["aliases",{"_index":1036,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":391,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["already",{"_index":829,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["angular",{"_index":778,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["angular/animations",{"_index":519,"title":{},"body":{"components/EventListComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":205,"title":{},"body":{"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":207,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":425,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":785,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":789,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":800,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":793,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":796,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":787,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/slide",{"_index":798,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/table",{"_index":791,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":783,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"dependencies.html":{}}}],["animate",{"_index":518,"title":{},"body":{"components/EventListComponent.html":{}}}],["animate(300",{"_index":530,"title":{},"body":{"components/EventListComponent.html":{}}}],["animations",{"_index":523,"title":{},"body":{"components/EventListComponent.html":{}}}],["apiurl",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{}}}],["app.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.store",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":649,"title":{},"body":{"components/HomePageComponent.html":{}}}],["application/json",{"_index":895,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":94,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":105,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":1004,"title":{},"body":{"index.html":{}}}],["authenticated",{"_index":882,"title":{},"body":{"injectables/UserService.html":{}}}],["authguard",{"_index":147,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authorization",{"_index":678,"title":{},"body":{"injectables/ImagesService.html":{}}}],["auto",{"_index":367,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["automatically",{"_index":997,"title":{},"body":{"index.html":{}}}],["available",{"_index":1028,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":250,"title":{},"body":{"injectables/ErrorService.html":{}}}],["background",{"_index":357,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["background('/assets/imgs/patt1.jpg",{"_index":655,"title":{},"body":{"components/HomePageComponent.html":{}}}],["background('/assets/imgs/patt2.jpg",{"_index":354,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["background('/assets/imgs/patt4.jpg",{"_index":465,"title":{},"body":{"components/EventFormComponent.html":{}}}],["background('/assets/imgs/patt5.jpg",{"_index":724,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["bad",{"_index":266,"title":{},"body":{"injectables/ErrorService.html":{}}}],["black",{"_index":660,"title":{},"body":{"components/HomePageComponent.html":{}}}],["block",{"_index":657,"title":{},"body":{"components/HomePageComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["body",{"_index":255,"title":{},"body":{"injectables/ErrorService.html":{}}}],["boolean",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"classes/Logged.html":{},"components/SignupFormComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["boolean(localstorage.getitem('user",{"_index":909,"title":{},"body":{"injectables/UserService.html":{}}}],["bootstrap",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["border",{"_index":396,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["bottom",{"_index":373,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["box",{"_index":380,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["browse",{"_index":1026,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":370,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["build",{"_index":1003,"title":{},"body":{"index.html":{}}}],["button",{"_index":377,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["calc(100",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["canactivate",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["card",{"_index":359,"title":{},"body":{"components/EventDetailComponent.html":{},"components/HomePageComponent.html":{}}}],["case",{"_index":856,"title":{},"body":{"interfaces/State-1.html":{},"injectables/UserService.html":{}}}],["catcherror",{"_index":598,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{}}}],["catcherror(error",{"_index":690,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["catcherror(this.errorservice.handleerror",{"_index":611,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["center",{"_index":355,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["change",{"_index":814,"title":{},"body":{"components/SignupFormComponent.html":{},"index.html":{}}}],["check",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{}}}],["checkuser",{"_index":878,"title":{},"body":{"injectables/UserService.html":{}}}],["class",{"_index":36,"title":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["classes",{"_index":622,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"overview.html":{}}}],["cli",{"_index":986,"title":{},"body":{"index.html":{}}}],["click",{"_index":418,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["client",{"_index":242,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/ImagesService.html":{}}}],["clues",{"_index":257,"title":{},"body":{"injectables/ErrorService.html":{}}}],["cluster_appmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":197,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":198,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":618,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_declarations",{"_index":619,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_imports",{"_index":620,"title":{},"body":{"modules/EventsModule.html":{}}}],["cluster_loginmodule",{"_index":737,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_declarations",{"_index":738,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_imports",{"_index":739,"title":{},"body":{"modules/LoginModule.html":{}}}],["cluster_profilemodule",{"_index":773,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":774,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":775,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_signupmodule",{"_index":833,"title":{},"body":{"modules/SignupModule.html":{},"overview.html":{}}}],["cluster_signupmodule_declarations",{"_index":834,"title":{},"body":{"modules/SignupModule.html":{},"overview.html":{}}}],["cluster_signupmodule_imports",{"_index":835,"title":{},"body":{"modules/SignupModule.html":{}}}],["code",{"_index":254,"title":{},"body":{"injectables/ErrorService.html":{},"index.html":{}}}],["color",{"_index":383,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["column",{"_index":364,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["commonmodule",{"_index":204,"title":{},"body":{"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["console",{"_index":226,"title":{},"body":{"injectables/ErrorService.html":{}}}],["console.error",{"_index":260,"title":{},"body":{"injectables/ErrorService.html":{}}}],["console.error('an",{"_index":248,"title":{},"body":{"injectables/ErrorService.html":{}}}],["const",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"classes/Logged.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"injectables/UserService.html":{}}}],["constants",{"_index":604,"title":{},"body":{"injectables/EventService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["constructor(actions",{"_index":682,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["constructor(eventservice",{"_index":491,"title":{},"body":{"components/EventListComponent.html":{}}}],["constructor(http",{"_index":581,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["constructor(payload",{"_index":625,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{}}}],["constructor(public",{"_index":634,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{}}}],["constructor(route",{"_index":296,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["constructor(router",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(store",{"_index":868,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["constructor(userservice",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["constructor(validateformservice",{"_index":407,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["contain",{"_index":256,"title":{},"body":{"injectables/ErrorService.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["container",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["contains",{"_index":804,"title":{},"body":{"modules/SharedModule.html":{}}}],["content",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":558,"title":{},"body":{"components/EventListComponent.html":{}}}],["core",{"_index":215,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/auth",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/core.module",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["core/event.service",{"_index":325,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/LayoutEffects.html":{}}}],["core/images.service",{"_index":328,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["core/user.service",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["core/validate",{"_index":426,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["coremodule",{"_index":106,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":885,"title":{},"body":{"injectables/UserService.html":{}}}],["cover",{"_index":356,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["coverage",{"_index":929,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crafted",{"_index":652,"title":{},"body":{"components/HomePageComponent.html":{}}}],["crate",{"_index":412,"title":{},"body":{"components/EventFormComponent.html":{}}}],["create",{"_index":419,"title":{},"body":{"components/EventFormComponent.html":{}}}],["createform",{"_index":405,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["date",{"_index":278,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{}}}],["datevalue",{"_index":434,"title":{},"body":{"components/EventFormComponent.html":{}}}],["dd/mm/yyyy",{"_index":351,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["declarations",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["decorators",{"_index":691,"title":{},"body":{"injectables/LayoutEffects.html":{},"components/SignupFormComponent.html":{}}}],["default",{"_index":323,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["delete",{"_index":302,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["delete(`${environment.apiurl}events/${id",{"_index":614,"title":{},"body":{"injectables/EventService.html":{}}}],["deleteevent",{"_index":291,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["deleteevent(event",{"_index":300,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["deleteevent(id",{"_index":586,"title":{},"body":{"injectables/EventService.html":{}}}],["dependencies",{"_index":96,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":235,"title":{},"body":{"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["descriptionvalue",{"_index":436,"title":{},"body":{"components/EventFormComponent.html":{}}}],["destroy",{"_index":499,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["detail",{"_index":286,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["detail'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["detail.component",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{},"modules/ProfileModule.html":{}}}],["detail.component.html",{"_index":288,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["detail.component.scss",{"_index":287,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["detail.component.ts",{"_index":284,"title":{},"body":{"components/EventDetailComponent.html":{},"components/ProfileDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:17",{"_index":753,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["detail.component.ts:19",{"_index":320,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:20",{"_index":321,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":322,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":298,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":761,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":754,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":319,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":757,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":307,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:50",{"_index":310,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:62",{"_index":315,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail.component.ts:77",{"_index":301,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["detail/event",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"modules/EventsModule.html":{},"coverage.html":{}}}],["detail/profile",{"_index":750,"title":{},"body":{"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["details",{"_index":345,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["determine",{"_index":889,"title":{},"body":{"injectables/UserService.html":{}}}],["dev",{"_index":994,"title":{},"body":{"index.html":{}}}],["development",{"_index":989,"title":{},"body":{"index.html":{}}}],["different",{"_index":227,"title":{},"body":{"injectables/ErrorService.html":{}}}],["directive",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["directives",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1002,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1006,"title":{},"body":{"index.html":{}}}],["display",{"_index":360,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["display:inline",{"_index":669,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dist",{"_index":1005,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["dynamic",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1017,"title":{},"body":{"index.html":{}}}],["edit",{"_index":346,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["effect",{"_index":692,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["effectsmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.forroot([layouteffects",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["elementref",{"_index":817,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["email",{"_index":711,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/User.html":{},"injectables/ValidateFormService.html":{}}}],["empty",{"_index":917,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["end",{"_index":372,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"index.html":{}}}],["entrycomponents",{"_index":802,"title":{},"body":{"modules/SharedModule.html":{}}}],["environment",{"_index":601,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":602,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{}}}],["err",{"_index":717,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["error",{"_index":234,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/LayoutEffects.html":{},"interfaces/State-1.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/variables.html":{}}}],["error.error",{"_index":239,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error.error.message",{"_index":249,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error.service",{"_index":214,"title":{},"body":{"modules/CoreModule.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["error.status",{"_index":261,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errorevent",{"_index":241,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errors",{"_index":229,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/ValidateFormService.html":{}}}],["errorservice",{"_index":199,"title":{"injectables/ErrorService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["eui",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["event",{"_index":69,"title":{"interfaces/Event.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State-1.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["event.addedby",{"_index":341,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["event.date",{"_index":350,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["event.description",{"_index":352,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["event.location",{"_index":349,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["event.service",{"_index":209,"title":{},"body":{"modules/CoreModule.html":{}}}],["event.title",{"_index":347,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["eventdetailcomponent",{"_index":68,"title":{"components/EventDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventdetails/:id",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["eventform/:id",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["eventformcomponent",{"_index":71,"title":{"components/EventFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventlistcomponent",{"_index":73,"title":{"components/EventListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["events",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/ToolbarComponent.html":{}}}],["events.site",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events/event",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["events/events.module",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["events[0",{"_index":544,"title":{},"body":{"components/EventListComponent.html":{}}}],["eventservice",{"_index":200,"title":{"injectables/EventService.html":{}},"body":{"modules/CoreModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/LayoutEffects.html":{},"coverage.html":{},"overview.html":{}}}],["eventsmodule",{"_index":107,"title":{"modules/EventsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsui",{"_index":983,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1014,"title":{},"body":{"index.html":{}}}],["exists",{"_index":303,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["explaining",{"_index":916,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["export",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["exports",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["facing",{"_index":263,"title":{},"body":{"injectables/ErrorService.html":{}}}],["false",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":386,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["fb",{"_index":408,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["field",{"_index":794,"title":{},"body":{"modules/SharedModule.html":{},"injectables/ValidateFormService.html":{}}}],["field.errors",{"_index":919,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.email",{"_index":927,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.maxlength",{"_index":925,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.maxlength.requiredlength",{"_index":926,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.minlength",{"_index":922,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.minlength.requiredlength",{"_index":924,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["field.errors.required",{"_index":920,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["files",{"_index":999,"title":{},"body":{"index.html":{}}}],["filter",{"_index":496,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["filteredevents",{"_index":848,"title":{},"body":{"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["fired",{"_index":417,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["flag",{"_index":1008,"title":{},"body":{"index.html":{}}}],["flex",{"_index":361,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["flow",{"_index":363,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["font",{"_index":385,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form",{"_index":401,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["form.component",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/SignupModule.html":{}}}],["form.component.html",{"_index":403,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.scss",{"_index":402,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts",{"_index":400,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:16",{"_index":709,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:17",{"_index":705,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:19",{"_index":421,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:20",{"_index":422,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{}}}],["form.component.ts:21",{"_index":820,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:22",{"_index":410,"title":{},"body":{"components/EventFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:23",{"_index":809,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:25",{"_index":423,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.component.ts:26",{"_index":707,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:32",{"_index":415,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:39",{"_index":810,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:42",{"_index":708,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:49",{"_index":411,"title":{},"body":{"components/EventFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:56",{"_index":812,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:72",{"_index":416,"title":{},"body":{"components/EventFormComponent.html":{}}}],["form.service",{"_index":213,"title":{},"body":{"modules/CoreModule.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.service.ts",{"_index":911,"title":{},"body":{"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["form.service.ts:13",{"_index":915,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["form.service.ts:4",{"_index":913,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["form/event",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventFormComponent.html":{},"modules/EventsModule.html":{},"coverage.html":{}}}],["form/login",{"_index":702,"title":{},"body":{"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"coverage.html":{}}}],["form/signup",{"_index":806,"title":{},"body":{"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"coverage.html":{}}}],["formbuilder",{"_index":409,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["formgroup",{"_index":420,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["formsmodule",{"_index":780,"title":{},"body":{"modules/SharedModule.html":{}}}],["found",{"_index":718,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["found.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":745,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":744,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":743,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:11",{"_index":746,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:15",{"_index":747,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["fresh",{"_index":648,"title":{},"body":{"components/HomePageComponent.html":{}}}],["full",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":852,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{},"coverage.html":{}}}],["functions",{"_index":978,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1019,"title":{},"body":{"index.html":{}}}],["general",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":1001,"title":{},"body":{"index.html":{}}}],["generated",{"_index":985,"title":{},"body":{"index.html":{}}}],["generic",{"_index":233,"title":{},"body":{"injectables/ErrorService.html":{}}}],["get('https://api.unsplash.com/photos/random?orientation=landscape&query=event",{"_index":680,"title":{},"body":{"injectables/ImagesService.html":{}}}],["get_filtered_events",{"_index":628,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_filtered_events_error",{"_index":632,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_filtered_events_success",{"_index":630,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["geterror",{"_index":912,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["geterror(name",{"_index":914,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["getevent",{"_index":292,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["getevent(id",{"_index":588,"title":{},"body":{"injectables/EventService.html":{}}}],["getevents",{"_index":487,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["getfilteredevents",{"_index":579,"title":{"classes/GetFilteredEvents.html":{}},"body":{"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getfilteredevents(filter",{"_index":591,"title":{},"body":{"injectables/EventService.html":{}}}],["getfilteredeventserror",{"_index":636,"title":{"classes/GetFilteredEventsError.html":{}},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getfilteredeventssuccess",{"_index":635,"title":{"classes/GetFilteredEventsSuccess.html":{}},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getimage",{"_index":293,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{}}}],["getting",{"_index":981,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":751,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["go",{"_index":1022,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1027,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":563,"title":{},"body":{"components/EventListComponent.html":{}}}],["guard",{"_index":178,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.service.ts",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guard.service.ts:16",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.service.ts:6",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":661,"title":{},"body":{"components/HomePageComponent.html":{}}}],["h2",{"_index":666,"title":{},"body":{"components/HomePageComponent.html":{}}}],["h3",{"_index":393,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["h4",{"_index":771,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["hammerjs",{"_index":801,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["handle",{"_index":246,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handleerror",{"_index":220,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handleerror(error",{"_index":222,"title":{},"body":{"injectables/ErrorService.html":{}}}],["happened",{"_index":267,"title":{},"body":{"injectables/ErrorService.html":{}}}],["header",{"_index":389,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["headers",{"_index":606,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["height",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{}}}],["help",{"_index":1020,"title":{},"body":{"index.html":{}}}],["home",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["homepagecomponent",{"_index":75,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":650,"title":{},"body":{"components/HomePageComponent.html":{}}}],["html",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["http",{"_index":230,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["http://localhost:3000",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":996,"title":{},"body":{"index.html":{}}}],["http://server.open",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_header_key_content_type",{"_index":607,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["http_header_value_application_json",{"_index":603,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":582,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":206,"title":{},"body":{"modules/CoreModule.html":{}}}],["httperrorresponse",{"_index":223,"title":{},"body":{"injectables/ErrorService.html":{}}}],["httpheaders",{"_index":597,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["id",{"_index":279,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"components/ProfileDetailComponent.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["idvalue",{"_index":440,"title":{},"body":{"components/EventFormComponent.html":{}}}],["image",{"_index":312,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{}}}],["images.service",{"_index":211,"title":{},"body":{"modules/CoreModule.html":{}}}],["imagesservice",{"_index":201,"title":{"injectables/ImagesService.html":{}},"body":{"modules/CoreModule.html":{},"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["imageurl",{"_index":289,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["img",{"_index":394,"title":{},"body":{"components/EventDetailComponent.html":{},"components/HomePageComponent.html":{}}}],["img.urls.small",{"_index":336,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["implements",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["import('./login/login.module').then(m",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile.module').then(m",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./signup/signup.module').then(m",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{}}}],["include",{"_index":353,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["incorrect",{"_index":886,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":182,"title":{"index.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["inicialize",{"_index":811,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["initialstate",{"_index":850,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":190,"title":{"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["injectables",{"_index":217,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"overview.html":{}}}],["inline",{"_index":656,"title":{},"body":{"components/HomePageComponent.html":{},"components/ProfileDetailComponent.html":{}}}],["input",{"_index":815,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["insert",{"_index":413,"title":{},"body":{"components/EventFormComponent.html":{}}}],["instanceof",{"_index":240,"title":{},"body":{"injectables/ErrorService.html":{}}}],["instanze",{"_index":706,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["interface",{"_index":272,"title":{"interfaces/Event.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/User.html":{}},"body":{"interfaces/Event.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":273,"title":{},"body":{"interfaces/Event.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isauthenticated",{"_index":482,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["isn't",{"_index":928,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["isowner",{"_index":294,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["isowner(event",{"_index":314,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["italic",{"_index":571,"title":{},"body":{"components/EventListComponent.html":{}}}],["item",{"_index":556,"title":{},"body":{"components/EventListComponent.html":{}}}],["items",{"_index":560,"title":{},"body":{"components/EventListComponent.html":{}}}],["json.parse(localstorage.getitem('user",{"_index":449,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/ProfileDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["json.parse(userstring",{"_index":340,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["json.stringify(r",{"_index":899,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(us[0",{"_index":906,"title":{},"body":{"injectables/UserService.html":{}}}],["justify",{"_index":371,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["karma",{"_index":1016,"title":{},"body":{"index.html":{}}}],["kinds",{"_index":228,"title":{},"body":{"injectables/ErrorService.html":{}}}],["later",{"_index":271,"title":{},"body":{"injectables/ErrorService.html":{}}}],["layout",{"_index":520,"title":{},"body":{"components/EventListComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["layout.actions",{"_index":849,"title":{},"body":{"interfaces/State-1.html":{}}}],["layout.get_filtered_events",{"_index":857,"title":{},"body":{"interfaces/State-1.html":{}}}],["layout.get_filtered_events_error",{"_index":860,"title":{},"body":{"interfaces/State-1.html":{}}}],["layout.get_filtered_events_success",{"_index":858,"title":{},"body":{"interfaces/State-1.html":{}}}],["layout.getfilteredevents(filter",{"_index":549,"title":{},"body":{"components/EventListComponent.html":{}}}],["layout/get_filtered_events",{"_index":629,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"miscellaneous/variables.html":{}}}],["layout/get_filtered_events_error",{"_index":633,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"miscellaneous/variables.html":{}}}],["layout/get_filtered_events_success",{"_index":631,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"miscellaneous/variables.html":{}}}],["layouteffects",{"_index":129,"title":{"injectables/LayoutEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/LayoutEffects.html":{},"coverage.html":{}}}],["layoutreducer",{"_index":843,"title":{},"body":{"interfaces/State.html":{}}}],["layoutreducer.reducer",{"_index":846,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["layoutreducer.state",{"_index":838,"title":{},"body":{"interfaces/State.html":{}}}],["lazy",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["left",{"_index":378,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/ToolbarComponent.html":{}}}],["legend",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["length",{"_index":923,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["line",{"_index":673,"title":{},"body":{"components/HomePageComponent.html":{}}}],["link",{"_index":568,"title":{},"body":{"components/EventListComponent.html":{}}}],["list",{"_index":479,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{}}}],["list'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["list.component",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{}}}],["list.component.html",{"_index":481,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.scss",{"_index":480,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts",{"_index":477,"title":{},"body":{"components/EventListComponent.html":{},"coverage.html":{}}}],["list.component.ts:110",{"_index":498,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:42",{"_index":507,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:43",{"_index":508,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:44",{"_index":509,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:45",{"_index":511,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:46",{"_index":512,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:47",{"_index":492,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:52",{"_index":513,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:55",{"_index":502,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:77",{"_index":504,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:84",{"_index":493,"title":{},"body":{"components/EventListComponent.html":{}}}],["list.component.ts:94",{"_index":495,"title":{},"body":{"components/EventListComponent.html":{}}}],["list/event",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventListComponent.html":{},"modules/EventsModule.html":{},"coverage.html":{}}}],["loadchildren",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":755,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["localstorage",{"_index":317,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["localstorage.getitem('user",{"_index":339,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["localstorage.setitem('user",{"_index":898,"title":{},"body":{"injectables/UserService.html":{}}}],["location",{"_index":280,"title":{},"body":{"interfaces/Event.html":{},"components/EventFormComponent.html":{}}}],["locationvalue",{"_index":432,"title":{},"body":{"components/EventFormComponent.html":{}}}],["log",{"_index":758,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["logged",{"_index":187,"title":{"classes/Logged.html":{}},"body":{"guards/AuthGuard.html":{},"classes/Logged.html":{},"interfaces/State-2.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["login(user",{"_index":883,"title":{},"body":{"injectables/UserService.html":{}}}],["login.actions",{"_index":863,"title":{},"body":{"interfaces/State-2.html":{}}}],["login.logged",{"_index":864,"title":{},"body":{"interfaces/State-2.html":{}}}],["login.logged(false",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["login.logged(true",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["login/logged",{"_index":700,"title":{},"body":{"classes/Logged.html":{},"miscellaneous/variables.html":{}}}],["loginform",{"_index":703,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginform.get('email",{"_index":720,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginform.get('password",{"_index":722,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginform.get(\\'email",{"_index":733,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginform.get(\\'password",{"_index":735,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginformcomponent",{"_index":78,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginmodule",{"_index":736,"title":{"modules/LoginModule.html":{}},"body":{"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["loginreducer",{"_index":841,"title":{},"body":{"interfaces/State.html":{}}}],["loginreducer.reducer",{"_index":845,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["loginreducer.state",{"_index":839,"title":{},"body":{"interfaces/State.html":{}}}],["loginsuscription",{"_index":871,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["logo",{"_index":658,"title":{},"body":{"components/HomePageComponent.html":{}}}],["logout",{"_index":752,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["m.loginmodule",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilemodule",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.signupmodule",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["management",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["map",{"_index":696,"title":{},"body":{"injectables/LayoutEffects.html":{},"injectables/UserService.html":{}}}],["map(r",{"_index":897,"title":{},"body":{"injectables/UserService.html":{}}}],["map(res",{"_index":688,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["map(us",{"_index":902,"title":{},"body":{"injectables/UserService.html":{}}}],["margin",{"_index":365,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["mark",{"_index":505,"title":{},"body":{"components/EventListComponent.html":{}}}],["matbuttonmodule",{"_index":784,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":788,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":593,"title":{},"body":{"injectables/EventService.html":{}}}],["matcheckboxmodule",{"_index":799,"title":{},"body":{"modules/SharedModule.html":{}}}],["matching",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":779,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":792,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":795,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":786,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidetogglemodule",{"_index":797,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattablemodule",{"_index":790,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":782,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":368,"title":{},"body":{"components/EventDetailComponent.html":{},"components/HomePageComponent.html":{},"injectables/ValidateFormService.html":{}}}],["md",{"_index":554,"title":{},"body":{"components/EventListComponent.html":{}}}],["media(max",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{}}}],["message",{"_index":264,"title":{},"body":{"injectables/ErrorService.html":{},"components/HomePageComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["methods",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["min",{"_index":769,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/ValidateFormService.html":{}}}],["miscellaneous",{"_index":977,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":522,"title":{},"body":{"components/EventListComponent.html":{}}}],["models/event.model",{"_index":326,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"interfaces/State-1.html":{}}}],["models/user.model",{"_index":327,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":93,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["modules",{"_index":95,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1021,"title":{},"body":{"index.html":{}}}],["msgs",{"_index":704,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["myeventschange",{"_index":488,"title":{},"body":{"components/EventListComponent.html":{}}}],["name",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":995,"title":{},"body":{"index.html":{}}}],["need",{"_index":500,"title":{},"body":{"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["network",{"_index":244,"title":{},"body":{"injectables/ErrorService.html":{}}}],["new",{"_index":548,"title":{},"body":{"components/EventListComponent.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":992,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{}}}],["ngondestroy",{"_index":489,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["ngoninit",{"_index":295,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["ngrx/effects",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"injectables/LayoutEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"components/ProfileDetailComponent.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["none",{"_index":382,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["null",{"_index":851,"title":{},"body":{"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":918,"title":{},"body":{"injectables/ValidateFormService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":262,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["obtain",{"_index":494,"title":{},"body":{"components/EventListComponent.html":{}}}],["occurred",{"_index":245,"title":{},"body":{"injectables/ErrorService.html":{}}}],["oftype",{"_index":694,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["oftype('layout/get_filtered_events",{"_index":685,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["ondestroy",{"_index":478,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["oninit",{"_index":285,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["onselectevent",{"_index":490,"title":{},"body":{"components/EventListComponent.html":{}}}],["onselectevent(event",{"_index":503,"title":{},"body":{"components/EventListComponent.html":{}}}],["onsubmit",{"_index":406,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["opacity",{"_index":528,"title":{},"body":{"components/EventListComponent.html":{}}}],["open",{"_index":647,"title":{},"body":{"components/HomePageComponent.html":{}}}],["openathons",{"_index":654,"title":{},"body":{"components/HomePageComponent.html":{}}}],["option",{"_index":875,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["optional",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{}}}],["others",{"_index":231,"title":{},"body":{"injectables/ErrorService.html":{}}}],["out",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"injectables/UserService.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1029,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":318,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["p",{"_index":670,"title":{},"body":{"components/HomePageComponent.html":{}}}],["package",{"_index":964,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":388,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["page",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["page'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["page.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":645,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.scss",{"_index":644,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":643,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:11",{"_index":646,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page/home",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["pagenotfound",{"_index":748,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["pagenotfoundcomponent",{"_index":79,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":238,"title":{},"body":{"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["param_id",{"_index":290,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["parameter",{"_index":305,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{}}}],["passed",{"_index":304,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/EventService.html":{}}}],["password",{"_index":713,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["pasword",{"_index":822,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["path",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{}}}],["pathmatch",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":624,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{}}}],["pipe",{"_index":609,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{}}}],["please",{"_index":268,"title":{},"body":{"injectables/ErrorService.html":{}}}],["post(environment.apiurl",{"_index":615,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{}}}],["private",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":1007,"title":{},"body":{"index.html":{}}}],["production",{"_index":1009,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["profiledetailcomponent",{"_index":82,"title":{"components/ProfileDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilemodule",{"_index":772,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["project",{"_index":984,"title":{},"body":{"index.html":{}}}],["properti",{"_index":891,"title":{},"body":{"injectables/UserService.html":{}}}],["properties",{"_index":276,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["property",{"_index":309,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["protractor",{"_index":1018,"title":{},"body":{"index.html":{}}}],["providers",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["public",{"_index":219,"title":{},"body":{"injectables/ErrorService.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["put(`${environment.apiurl}events/${event.id",{"_index":616,"title":{},"body":{"injectables/EventService.html":{}}}],["radius",{"_index":397,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["random",{"_index":311,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{}}}],["reactive",{"_index":414,"title":{},"body":{"components/EventFormComponent.html":{}}}],["reactiveformsmodule",{"_index":781,"title":{},"body":{"modules/SharedModule.html":{}}}],["readme",{"_index":1023,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["redirect",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirectto",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reducer",{"_index":959,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":853,"title":{},"body":{"interfaces/State-1.html":{},"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["reducers",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":998,"title":{},"body":{"index.html":{}}}],["represent",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["required",{"_index":921,"title":{},"body":{"injectables/ValidateFormService.html":{}}}],["res",{"_index":689,"title":{},"body":{"injectables/LayoutEffects.html":{},"components/LoginFormComponent.html":{}}}],["res.email",{"_index":715,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["reset",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}],["response",{"_index":253,"title":{},"body":{"injectables/ErrorService.html":{}}}],["result",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":599,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["retry(3",{"_index":610,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["return",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["returned",{"_index":251,"title":{},"body":{"injectables/ErrorService.html":{}}}],["returns",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/functions.html":{}}}],["rgba(255,255,255,0.9",{"_index":726,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["right",{"_index":375,"title":{},"body":{"components/EventDetailComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["route",{"_index":299,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["router",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["routermodule",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{}}}],["routermodule.forchild(routes",{"_index":741,"title":{},"body":{"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{}}}],["routermodule.forroot(routes",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":144,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"routes.html":{}}}],["routing",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":559,"title":{},"body":{"components/EventListComponent.html":{}}}],["run",{"_index":991,"title":{},"body":{"index.html":{}}}],["running",{"_index":1010,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":237,"title":{},"body":{"injectables/ErrorService.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":600,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"injectables/UserService.html":{}}}],["same",{"_index":308,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["save",{"_index":463,"title":{},"body":{"components/EventFormComponent.html":{},"injectables/EventService.html":{}}}],["scaffolding",{"_index":1000,"title":{},"body":{"index.html":{}}}],["screen",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{}}}],["section",{"_index":664,"title":{},"body":{"components/HomePageComponent.html":{}}}],["select",{"_index":514,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["selected",{"_index":506,"title":{},"body":{"components/EventListComponent.html":{}}}],["selectedevent",{"_index":483,"title":{},"body":{"components/EventListComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["serve",{"_index":993,"title":{},"body":{"index.html":{}}}],["server",{"_index":990,"title":{},"body":{"index.html":{}}}],["service",{"_index":605,"title":{},"body":{"injectables/EventService.html":{}}}],["service.ts",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":208,"title":{},"body":{"modules/CoreModule.html":{},"components/EventListComponent.html":{}}}],["set",{"_index":890,"title":{},"body":{"injectables/UserService.html":{}}}],["setuser",{"_index":879,"title":{},"body":{"injectables/UserService.html":{}}}],["sevices",{"_index":216,"title":{},"body":{"modules/CoreModule.html":{}}}],["shadow",{"_index":381,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["shared",{"_index":803,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/shared.module",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{}}}],["shared/styles/colors",{"_index":464,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["shared/styles/variables",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["sharedmodule",{"_index":108,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/SignupModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":816,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["showpassword",{"_index":808,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["showpassword(showpassword",{"_index":813,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["side",{"_index":243,"title":{},"body":{"injectables/ErrorService.html":{}}}],["sign",{"_index":727,"title":{},"body":{"components/LoginFormComponent.html":{},"injectables/UserService.html":{}}}],["signup",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["signup(user",{"_index":892,"title":{},"body":{"injectables/UserService.html":{}}}],["signupform",{"_index":807,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupform.get('email",{"_index":827,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupform.get('password",{"_index":828,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupform.get(\\'email",{"_index":830,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupform.get(\\'password",{"_index":831,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signupformcomponent",{"_index":84,"title":{"components/SignupFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupmodule",{"_index":832,"title":{"modules/SignupModule.html":{}},"body":{"modules/SignupModule.html":{},"modules.html":{},"overview.html":{}}}],["size",{"_index":358,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["slidemyevents",{"_index":484,"title":{},"body":{"components/EventListComponent.html":{}}}],["sm",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/EventListComponent.html":{}}}],["solid",{"_index":562,"title":{},"body":{"components/EventListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"modules/EventsModule.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/HomePageComponent.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"modules/LoginModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"components/SignupFormComponent.html":{},"modules/SignupModule.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"index.html":{}}}],["src/.../app.store.ts",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../layout.actions.ts",{"_index":1037,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../layout.redux.ts",{"_index":979,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../login.actions.ts",{"_index":1038,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../login.redux.ts",{"_index":980,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.store.ts",{"_index":837,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/auth",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/constants",{"_index":939,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/core.module.ts",{"_index":203,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/error.service.ts",{"_index":218,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["src/app/core/error.service.ts:18",{"_index":224,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/core/error.service.ts:9",{"_index":221,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/core/event.service.ts",{"_index":577,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{}}}],["src/app/core/event.service.ts:109",{"_index":592,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:14",{"_index":583,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:23",{"_index":590,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:39",{"_index":589,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:55",{"_index":587,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:73",{"_index":585,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/event.service.ts:91",{"_index":595,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/core/images.service.ts",{"_index":675,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["src/app/core/images.service.ts:12",{"_index":676,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/app/core/images.service.ts:21",{"_index":677,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/app/core/user.service.ts",{"_index":877,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/user.service.ts:15",{"_index":880,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:22",{"_index":894,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:29",{"_index":893,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:53",{"_index":884,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:74",{"_index":887,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:82",{"_index":881,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:90",{"_index":888,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/validate",{"_index":910,"title":{},"body":{"injectables/ValidateFormService.html":{},"coverage.html":{}}}],["src/app/events/event",{"_index":283,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"coverage.html":{}}}],["src/app/events/events.module.ts",{"_index":621,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/home",{"_index":642,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["src/app/login/login",{"_index":701,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/login/login.module.ts",{"_index":740,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/app/models/event.model.ts",{"_index":274,"title":{},"body":{"interfaces/Event.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts",{"_index":876,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/page",{"_index":742,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile",{"_index":749,"title":{},"body":{"components/ProfileDetailComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.module.ts",{"_index":776,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":777,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/signup/signup",{"_index":805,"title":{},"body":{"components/SignupFormComponent.html":{},"coverage.html":{}}}],["src/app/signup/signup.module.ts",{"_index":836,"title":{},"body":{"modules/SignupModule.html":{}}}],["src/app/store/layout/layout.actions.ts",{"_index":623,"title":{},"body":{"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/layout/layout.actions.ts:10",{"_index":627,"title":{},"body":{"classes/GetFilteredEvents.html":{}}}],["src/app/store/layout/layout.actions.ts:14",{"_index":640,"title":{},"body":{"classes/GetFilteredEventsSuccess.html":{}}}],["src/app/store/layout/layout.actions.ts:16",{"_index":641,"title":{},"body":{"classes/GetFilteredEventsSuccess.html":{}}}],["src/app/store/layout/layout.actions.ts:20",{"_index":638,"title":{},"body":{"classes/GetFilteredEventsError.html":{}}}],["src/app/store/layout/layout.actions.ts:22",{"_index":639,"title":{},"body":{"classes/GetFilteredEventsError.html":{}}}],["src/app/store/layout/layout.actions.ts:8",{"_index":626,"title":{},"body":{"classes/GetFilteredEvents.html":{}}}],["src/app/store/layout/layout.effects.ts",{"_index":681,"title":{},"body":{"injectables/LayoutEffects.html":{},"coverage.html":{}}}],["src/app/store/layout/layout.effects.ts:17",{"_index":693,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["src/app/store/layout/layout.effects.ts:9",{"_index":683,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["src/app/store/layout/layout.redux.ts",{"_index":847,"title":{},"body":{"interfaces/State-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/login/login.actions.ts",{"_index":697,"title":{},"body":{"classes/Logged.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/login/login.actions.ts:6",{"_index":698,"title":{},"body":{"classes/Logged.html":{}}}],["src/app/store/login/login.actions.ts:8",{"_index":699,"title":{},"body":{"classes/Logged.html":{}}}],["src/app/store/login/login.redux.ts",{"_index":862,"title":{},"body":{"interfaces/State-2.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/toolbar/toolbar.component.ts",{"_index":865,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/toolbar/toolbar.component.ts:15",{"_index":874,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/toolbar/toolbar.component.ts:16",{"_index":873,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/toolbar/toolbar.component.ts:17",{"_index":869,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/toolbar/toolbar.component.ts:22",{"_index":872,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/toolbar/toolbar.component.ts:35",{"_index":870,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":960,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":961,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":982,"title":{"index.html":{}},"body":{}}],["state",{"_index":122,"title":{"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{}},"body":{"modules/AppModule.html":{},"components/EventListComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state('void",{"_index":525,"title":{},"body":{"components/EventListComponent.html":{}}}],["state.filteredevents",{"_index":535,"title":{},"body":{"components/EventListComponent.html":{}}}],["state.logged",{"_index":542,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["statements",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":819,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["storage",{"_index":756,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["store",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Event.html":{},"components/EventListComponent.html":{},"components/ProfileDetailComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["store/layout/layout.actions",{"_index":521,"title":{},"body":{"components/EventListComponent.html":{}}}],["store/layout/layout.effects",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["store/layout/layout.redux",{"_index":844,"title":{},"body":{"interfaces/State.html":{}}}],["store/login/login.actions",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["store/login/login.redux",{"_index":842,"title":{},"body":{"interfaces/State.html":{}}}],["stored",{"_index":316,"title":{},"body":{"components/EventDetailComponent.html":{},"index.html":{}}}],["storemodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot(reducers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":282,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"components/LoginFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":516,"title":{},"body":{"components/EventListComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["subscriptionlayout",{"_index":485,"title":{},"body":{"components/EventListComponent.html":{}}}],["subscriptionlike",{"_index":510,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["subscriptionlogin",{"_index":486,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["subtitle",{"_index":665,"title":{},"body":{"components/HomePageComponent.html":{}}}],["support",{"_index":1024,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1025,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":854,"title":{},"body":{"interfaces/State-1.html":{}}}],["switchmap",{"_index":695,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["switchmap((filter",{"_index":686,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["system",{"_index":760,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["table",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["tech",{"_index":651,"title":{},"body":{"components/HomePageComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["test",{"_index":1013,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1012,"title":{},"body":{"index.html":{}}}],["text",{"_index":390,"title":{},"body":{"components/EventDetailComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.actions$.pipe",{"_index":684,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["this.addeditform",{"_index":442,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.addeditform.reset",{"_index":452,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.addeditform.value",{"_index":450,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.createform",{"_index":429,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.event",{"_index":333,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{}}}],["this.event.addedby",{"_index":439,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.date",{"_index":435,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.description",{"_index":437,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.id",{"_index":441,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.location",{"_index":433,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.event.title",{"_index":431,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.events",{"_index":536,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.events[0",{"_index":538,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.eventservice.addevent(this.event).subscribe((event",{"_index":453,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.eventservice.deleteevent(event.id).subscribe",{"_index":343,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.eventservice.getevent(id).subscribe((event",{"_index":428,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.eventservice.getevent(this.id).subscribe((event",{"_index":332,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.eventservice.getevents().subscribe((events",{"_index":543,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.eventservice.getfilteredevents(filter.payload",{"_index":687,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["this.eventservice.updateevent(this.event).subscribe((event",{"_index":451,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.fb.group",{"_index":443,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.getevent",{"_index":337,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.getevents",{"_index":532,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.getimage",{"_index":331,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.getuser",{"_index":762,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["this.http",{"_index":613,"title":{},"body":{"injectables/EventService.html":{},"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["this.http.get(`${environment.apiurl}events/${id",{"_index":612,"title":{},"body":{"injectables/EventService.html":{}}}],["this.http.get(`${environment.apiurl}events?${filter",{"_index":617,"title":{},"body":{"injectables/EventService.html":{}}}],["this.http.get(`${environment.apiurl}users?email=${user.email",{"_index":901,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(environment.apiurl",{"_index":608,"title":{},"body":{"injectables/EventService.html":{}}}],["this.id",{"_index":329,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.imagesservice.getimage().subscribe((img",{"_index":334,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.imageurl",{"_index":335,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.isauthenticated",{"_index":541,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["this.loginform",{"_index":710,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.msgs",{"_index":716,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.password.nativeelement.type",{"_index":824,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.route.snapshot.parammap.get(this.param_id",{"_index":427,"title":{},"body":{"components/EventFormComponent.html":{}}}],["this.route.snapshot.params[this.param_id",{"_index":330,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["this.router.navigate(['/events",{"_index":344,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.router.navigate(['/home",{"_index":765,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["this.router.navigate(['/login",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.selectedevent",{"_index":537,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.setuser",{"_index":900,"title":{},"body":{"injectables/UserService.html":{}}}],["this.signupform",{"_index":823,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.signupform.value",{"_index":825,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.slidemyevents",{"_index":545,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.store.dispatch(action",{"_index":550,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.store.dispatch(new",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{}}}],["this.store.pipe(select('layout')).subscribe(state",{"_index":534,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.store.pipe(select('login')).subscribe(state",{"_index":540,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.subscriptionlayout",{"_index":533,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.subscriptionlayout.unsubscribe",{"_index":551,"title":{},"body":{"components/EventListComponent.html":{}}}],["this.subscriptionlogin",{"_index":539,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.subscriptionlogin.unsubscribe",{"_index":552,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.user",{"_index":763,"title":{},"body":{"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.userservice.checkuser",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{}}}],["this.userservice.login(this.loginform.value).subscribe((res",{"_index":714,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.userservice.logout",{"_index":764,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["this.userservice.signup(this.user).subscribe",{"_index":826,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["throw",{"_index":232,"title":{},"body":{"injectables/ErrorService.html":{}}}],["throwerror",{"_index":236,"title":{},"body":{"injectables/ErrorService.html":{}}}],["throwerror('something",{"_index":265,"title":{},"body":{"injectables/ErrorService.html":{}}}],["title",{"_index":281,"title":{},"body":{"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/HomePageComponent.html":{}}}],["titlevalue",{"_index":430,"title":{},"body":{"components/EventFormComponent.html":{}}}],["toggle",{"_index":497,"title":{},"body":{"components/EventListComponent.html":{},"modules/SharedModule.html":{}}}],["toolbar",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar.component.html",{"_index":867,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":866,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar/toolbar.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbarcomponent",{"_index":86,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":557,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["trace",{"_index":225,"title":{},"body":{"injectables/ErrorService.html":{}}}],["transform",{"_index":526,"title":{},"body":{"components/EventListComponent.html":{}}}],["transition",{"_index":517,"title":{},"body":{"components/EventListComponent.html":{}}}],["transition(':enter",{"_index":529,"title":{},"body":{"components/EventListComponent.html":{}}}],["translatex",{"_index":527,"title":{},"body":{"components/EventListComponent.html":{}}}],["translatex(0",{"_index":531,"title":{},"body":{"components/EventListComponent.html":{}}}],["transparent",{"_index":384,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["trigger",{"_index":515,"title":{},"body":{"components/EventListComponent.html":{}}}],["trigger('enterstate",{"_index":524,"title":{},"body":{"components/EventListComponent.html":{}}}],["true",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"components/EventDetailComponent.html":{},"interfaces/State-1.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":269,"title":{},"body":{"injectables/ErrorService.html":{}}}],["tslib",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"interfaces/Event.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"injectables/EventService.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/ImagesService.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1035,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unit",{"_index":1011,"title":{},"body":{"index.html":{}}}],["unsplash.com",{"_index":313,"title":{},"body":{"components/EventDetailComponent.html":{},"injectables/ImagesService.html":{}}}],["unsubscribe",{"_index":501,"title":{},"body":{"components/EventListComponent.html":{},"components/ToolbarComponent.html":{}}}],["unsuccessful",{"_index":252,"title":{},"body":{"injectables/ErrorService.html":{}}}],["up",{"_index":728,"title":{},"body":{"components/LoginFormComponent.html":{},"injectables/UserService.html":{}}}],["update",{"_index":596,"title":{},"body":{"injectables/EventService.html":{}}}],["updateevent",{"_index":580,"title":{},"body":{"injectables/EventService.html":{}}}],["updateevent(event",{"_index":594,"title":{},"body":{"injectables/EventService.html":{}}}],["uppercase",{"_index":348,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventListComponent.html":{}}}],["us[0",{"_index":907,"title":{},"body":{"injectables/UserService.html":{}}}],["us[0].email",{"_index":903,"title":{},"body":{"injectables/UserService.html":{}}}],["us[0].password",{"_index":904,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":759,"title":{},"body":{"components/ProfileDetailComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["used",{"_index":275,"title":{},"body":{"interfaces/Event.html":{},"components/EventFormComponent.html":{},"injectables/EventService.html":{},"interfaces/User.html":{}}}],["user",{"_index":44,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ErrorService.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.email",{"_index":342,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/ProfileDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["user.id",{"_index":766,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["user.password",{"_index":905,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":210,"title":{},"body":{"modules/CoreModule.html":{}}}],["userdata",{"_index":768,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["usermail",{"_index":546,"title":{},"body":{"components/EventListComponent.html":{}}}],["users",{"_index":896,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":21,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"components/EventDetailComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userstring",{"_index":338,"title":{},"body":{"components/EventDetailComponent.html":{}}}],["valid",{"_index":908,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateFormService.html":{}}}],["validate",{"_index":212,"title":{},"body":{"modules/CoreModule.html":{}}}],["validateformservice",{"_index":202,"title":{"injectables/ValidateFormService.html":{}},"body":{"modules/CoreModule.html":{},"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"injectables/ValidateFormService.html":{},"coverage.html":{},"overview.html":{}}}],["validateformservice.geterror('date",{"_index":457,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror('description",{"_index":461,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror('email",{"_index":719,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validateformservice.geterror('location",{"_index":459,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror('password",{"_index":721,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validateformservice.geterror('title",{"_index":455,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror(\\'date",{"_index":471,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror(\\'description",{"_index":475,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror(\\'email",{"_index":732,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validateformservice.geterror(\\'location",{"_index":473,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validateformservice.geterror(\\'password",{"_index":734,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validateformservice.geterror(\\'title",{"_index":469,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators",{"_index":424,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.email",{"_index":712,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.maxlength(25",{"_index":446,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators.maxlength(400",{"_index":448,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators.minlength(10",{"_index":447,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators.minlength(2",{"_index":445,"title":{},"body":{"components/EventFormComponent.html":{}}}],["validators.required",{"_index":444,"title":{},"body":{"components/EventFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["value",{"_index":324,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"classes/GetFilteredEvents.html":{},"classes/GetFilteredEventsError.html":{},"classes/GetFilteredEventsSuccess.html":{},"injectables/LayoutEffects.html":{},"classes/Logged.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{}}}],["variable",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1039,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":987,"title":{},"body":{"index.html":{}}}],["via",{"_index":1015,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":821,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["viewchild('password",{"_index":818,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["void",{"_index":306,"title":{},"body":{"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/LoginFormComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{}}}],["weight",{"_index":569,"title":{},"body":{"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["went",{"_index":258,"title":{},"body":{"injectables/ErrorService.html":{}}}],["white",{"_index":467,"title":{},"body":{"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{}}}],["width",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/EventDetailComponent.html":{},"components/EventFormComponent.html":{},"components/EventListComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileDetailComponent.html":{},"components/SignupFormComponent.html":{}}}],["wrap",{"_index":767,"title":{},"body":{"components/ProfileDetailComponent.html":{}}}],["wrong",{"_index":259,"title":{},"body":{"injectables/ErrorService.html":{}}}],["zone.js",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/EventsModule.html":{},"modules/LoginModule.html":{},"modules/ProfileModule.html":{},"modules/SignupModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as login from './store/login/login.actions';\nimport { UserService } from './core/user.service';\n\n@Component({\n  selector: 'eui-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n/**\n * Class that represent the main component in the app\n */\nexport class AppComponent {\n\n  constructor(\n    private readonly userService: UserService,\n    private readonly store: Store\n  ) {\n    /**\n     * check user in store\n     */\n    this.userService.checkUser() ? this.store.dispatch(new login.Logged(true))\n                  : this.store.dispatch(new login.Logged(false));\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import './shared/styles/variables';\n\n\n.container {\n  width: 100%;\n  height: 100%;\n}\n\n.content {\n  height: calc(100% - 64px);\n\n  @media(max-width: $screen-sm) {\n    height: calc(100% - 56px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HomePageComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// Modules\nimport { CoreModule } from './core/core.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\nimport { EventsModule } from './events/events.module';\n\n// State Management\nimport { StoreModule } from '@ngrx/store';\nimport { reducers } from './app.store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { LayoutEffects } from './store/layout/layout.effects';\n\n// Components\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    ToolbarComponent,\n    PageNotFoundComponent,\n  ],\n  imports: [\n    CoreModule,\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    EventsModule,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([LayoutEffects])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n/**\n * General Module for the app\n */\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from './core/auth-guard.service';\n\n/**\n * Components\n */\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { EventListComponent } from './events/event-list/event-list.component';\nimport { EventDetailComponent } from './events/event-detail/event-detail.component';\nimport { EventFormComponent } from './events/event-form/event-form.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n/**\n * router with lazy loading\n */\nconst routes: Routes = [\n  {\n    path: 'home',\n    component: HomePageComponent,\n  },\n  {\n    path: 'events',\n    component: EventListComponent,\n  },\n  {\n    path: 'profile',\n    loadChildren: () => \"import('./profile/profile.module').then(m => m.ProfileModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./login/login.module').then(m => m.LoginModule)\",\n  },\n  {\n    path: 'signup',\n    loadChildren: () => \"import('./signup/signup.module').then(m => m.SignupModule)\",\n  },\n  {\n    path: 'eventDetails/:id',\n    component: EventDetailComponent,\n  },\n  {\n    path: 'eventForm/:id',\n    component: EventFormComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard],\n})\n/**\n * Routing Module for the app\n */\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth-guard.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/auth-guard.service.ts:16\n                \n            \n\n\n            \n                \n                    Check if user is logged.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UserService } from '../core/user.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private readonly router: Router,\n    private readonly userService: UserService\n  ) {}\n\n  /**\n   * Check if user is logged.\n   */\n  canActivate(): boolean {\n    if (this.userService.checkUser()) {\n      return true;\n    } else {\n      /**\n       * when user not login, redirect to login\n       */\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nErrorService\n\nErrorService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorService->CoreModule\n\n\n\n\n\nEventService\n\nEventService\n\nCoreModule -->\n\nEventService->CoreModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nCoreModule -->\n\nImagesService->CoreModule\n\n\n\n\n\nUserService\n\nUserService\n\nCoreModule -->\n\nUserService->CoreModule\n\n\n\n\n\nValidateFormService\n\nValidateFormService\n\nCoreModule -->\n\nValidateFormService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ErrorService\n                        \n                        \n                            EventService\n                        \n                        \n                            ImagesService\n                        \n                        \n                            UserService\n                        \n                        \n                            ValidateFormService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\n/**\n * Services\n */\nimport { EventService } from './event.service';\nimport { UserService } from './user.service';\nimport { ImagesService } from './images.service';\nimport { ValidateFormService } from './validate-form.service';\nimport { ErrorService } from './error.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n  ],\n  providers: [\n    ErrorService,\n    EventService,\n    UserService,\n    ImagesService,\n    ValidateFormService\n  ],\n})\n/**\n * Module for core sevices\n */\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/error.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/error.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error.service.ts:18\n                \n            \n\n\n            \n                \n                    Trace in the console different kinds of errors (Http or others) and then throw a generic error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The HttpErrorResponse error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { throwError } from 'rxjs';\n\n\n@Injectable()\nexport class ErrorService {\n  constructor(\n  ) {}\n\n  /**\n   * Trace in the console different kinds of errors (Http or others) and then throw a generic error.\n   *\n   * @param error The HttpErrorResponse error\n   */\n  public handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      /**\n       * A client-side or network error occurred. Handle it accordingly.\n       */\n      console.error('An error occurred:', error.error.message);\n    } else {\n      /**\n       * The backend returned an unsuccessful response code.\n       * The response body may contain clues as to what went wrong.\n       */\n      console.error(\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n      );\n    }\n    /**\n     * return an observable with a user-facing error message\n     */\n    return throwError('Something bad happened; please try again later.');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Event.html":{"url":"interfaces/Event.html","title":"interface - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.model.ts\n        \n\n            \n                Description\n            \n            \n                interface used to store an event\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addedBy\n                                \n                                \n                                        date\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addedBy\n                                    \n                                \n                                \n                                    \n                                        addedBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Event {\n  id: string;\n  title: string;\n  location: string;\n  date: Date;\n  description: string;\n  addedBy: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventDetailComponent.html":{"url":"components/EventDetailComponent.html","title":"component - EventDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/event-detail/event-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-event-detail\n            \n\n            \n                styleUrls\n                ./event-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./event-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                PARAM_ID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteEvent\n                            \n                            \n                                getEvent\n                            \n                            \n                                getImage\n                            \n                            \n                                isOwner\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, eventService: EventService, userService: UserService, imagesService: ImagesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/events/event-detail/event-detail.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imagesService\n                                                  \n                                                        \n                                                                        ImagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:77\n                \n            \n\n\n            \n                \n                    Delete the event, if exists, with the ID passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvent\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:41\n                \n            \n\n\n            \n                \n                    Return the event with the ID is the same that id property\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \ngetImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:50\n                \n            \n\n\n            \n                \n                    Return a random image from unsplash.com\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOwner\n                        \n                        \n                    \n                \n            \n            \n                \nisOwner(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:62\n                \n            \n\n\n            \n                \n                    Return true if user stored in localStorage is the owner of the event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-detail/event-detail.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-detail/event-detail.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-detail/event-detail.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-detail/event-detail.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            PARAM_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'id'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-detail/event-detail.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventService } from '../../core/event.service';\nimport { Event } from '../../models/event.model';\nimport { UserService } from '../../core/user.service';\nimport { User } from '../../models/user.model';\nimport { ImagesService } from '../../core/images.service';\n\n@Component({\n  selector: 'eui-event-detail',\n  templateUrl: './event-detail.component.html',\n  styleUrls: ['./event-detail.component.scss']\n})\n/**\n * Class that represent the event detail component in the app\n */\nexport class EventDetailComponent implements OnInit {\n\n  event: Event;\n  id: string;\n  imageUrl: string;\n\n  private readonly PARAM_ID = 'id';\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly eventService: EventService,\n    private readonly userService: UserService,\n    private readonly imagesService: ImagesService\n  ) {}\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params[this.PARAM_ID];\n    this.getImage();\n  }\n\n  /**\n   * Return the event with the ID is the same that id property\n   */\n  getEvent() {\n    this.eventService.getEvent(this.id).subscribe((event: Event) => {\n      this.event = event;\n    });\n  }\n\n  /**\n   * Return a random image from unsplash.com\n   */\n  getImage() {\n    this.imagesService.getImage().subscribe((img) => {\n      this.imageUrl = img.urls.small;\n      this.getEvent();\n    });\n  }\n\n  /**\n   * Return true if user stored in localStorage is the owner of the event\n   *\n   * @param event Event to check\n   */\n  isOwner(event: Event) {\n    let isOwner = false;\n    const userString = localStorage.getItem('user');\n    if (userString) {\n      const user: User = JSON.parse(userString);\n      isOwner = event.addedBy === user.email;\n    }\n    return isOwner;\n  }\n\n  /**\n   * Delete the event, if exists, with the ID passed as parameter\n   *\n   * @param id  Event ID\n   */\n  deleteEvent(event: Event) {\n    if (this.userService.checkUser()) {\n      this.eventService.deleteEvent(event.id).subscribe(() => {\n        this.router.navigate(['/events']);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n      Event details\n  \n\n  \n    \n      \n          \n            Delete Event\n          \n\n          \n            Edit Event\n        \n      \n    \n    \n      \n        \n          {{ event.title | uppercase }}\n        \n        \n          {{ event.location }} - {{ event.date | date: \"dd/MM/yyyy\" }}\n        \n        \n            {{ event.addedBy}}\n        \n      \n\n      \n        \n      \n\n      \n        {{ event.description }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./event-detail.component.scss\n                \n                @import '../../shared/styles/variables';\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt2.jpg', center, cover);\n  background-size: cover;\n}\n\n.event-card-details {\n  display: flex;\n  flex: 1;\n  flex-flow: column;\n  margin: 0 auto;\n  max-width: 800px;\n}\n\n.edit-event-btn {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 2rem;\n}\n\n.delete-btn {\n  margin-right: 6px;\n}\n\n.button-edit {\n  margin-left: 10px;\n}\n\n.event {\n  box-shadow: none;\n  background-color: transparent;\n  font-family: $acn-font;\n  padding: 0;\n  margin: 0 auto;\n\n  .header {\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    margin-bottom: 1rem;\n\n    .title h3 {\n      margin: 0;\n    }\n  }\n}\n\n.img {\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\nimg {\n  width: 75%;\n  margin: 0;\n  border-radius: 4px;\n}\n\n.description {\n  padding: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Event details                                    Delete Event                                Edit Event                                              {{ event.title | uppercase }}                          {{ event.location }} - {{ event.date | date: \"dd/MM/yyyy\" }}                            {{ event.addedBy}}                                                {{ event.description }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventFormComponent.html":{"url":"components/EventFormComponent.html","title":"component - EventFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/event-form/event-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-event-form\n            \n\n            \n                styleUrls\n                ./event-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./event-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addEditForm\n                            \n                            \n                                event\n                            \n                            \n                                    Private\n                                    Readonly\n                                PARAM_ID\n                            \n                            \n                                    Public\n                                    Readonly\n                                validateFormService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validateFormService: ValidateFormService, fb: FormBuilder, eventService: EventService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/events/event-form/event-form.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validateFormService\n                                                  \n                                                        \n                                                                        ValidateFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-form/event-form.component.ts:49\n                \n            \n\n\n            \n                \n                    Crate the form used to insert or edit events\nreactive form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-form/event-form.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-form/event-form.component.ts:72\n                \n            \n\n\n            \n                \n                    Fired when user click on \"Create\" button of the form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEditForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-form/event-form.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-form/event-form.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            PARAM_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'id'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-form/event-form.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            validateFormService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidateFormService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-form/event-form.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Event } from '../../models/event.model';\nimport { User } from '../../models/user.model';\nimport { ValidateFormService } from '../../core/validate-form.service';\nimport { EventService } from '../../core/event.service';\n\n@Component({\n  selector: 'eui-event-form',\n  templateUrl: './event-form.component.html',\n  styleUrls: ['./event-form.component.scss']\n})\n/**\n * Class that represent the event form component in the app\n */\nexport class EventFormComponent implements OnInit {\n\n  addEditForm: FormGroup;\n  event: Event;\n\n  private readonly PARAM_ID = 'id';\n\n  constructor(\n    public readonly validateFormService: ValidateFormService,\n    private readonly fb: FormBuilder,\n    private readonly eventService: EventService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get(this.PARAM_ID);\n\n    if (id) {\n      this.eventService.getEvent(id).subscribe((event: Event) => {\n        this.event = event;\n        this.createForm();\n      });\n    } else {\n      this.createForm();\n    }\n  }\n\n  /**\n   * Crate the form used to insert or edit events\n   * reactive form\n   */\n  createForm() {\n    const titleValue = this.event ? this.event.title : '';\n    const locationValue = this.event ? this.event.location : '';\n    const dateValue = this.event ? this.event.date : '';\n    const descriptionValue = this.event ? this.event.description : '';\n    const addedByValue = this.event ? this.event.addedBy : '';\n    const idValue = this.event ? this.event.id : '';\n\n    this.addEditForm = this.fb.group({\n      title: [titleValue, [Validators.required]],\n      location: [locationValue, [Validators.required, Validators.minLength(2),\n                                  Validators.maxLength(25)]],\n      date: [dateValue, [Validators.required]],\n      description: [descriptionValue, [Validators.required, Validators.minLength(10),\n                                        Validators.maxLength(400)]],\n      addedBy: [addedByValue, []],\n      id: [idValue, []],\n    });\n  }\n\n  /**\n   * Fired when user click on \"Create\" button of the form\n   */\n  onSubmit() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    this.event = this.addEditForm.value;\n    this.event.addedBy = user.email;\n    if (this.event.id) {\n      this.eventService.updateEvent(this.event).subscribe((event: Event) => {\n        this.addEditForm.reset();\n        this.router.navigate(['/events']);\n      });\n    } else {\n      this.eventService.addEvent(this.event).subscribe((event: Event) => {\n        this.addEditForm.reset();\n        this.router.navigate(['/events']);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      Add Event\n    \n\n    \n      \n        \n          \n          \n            {{validateFormService.getError('Title', addEditForm.get('title'))}}\n          \n        \n\n        \n          \n          \n            {{validateFormService.getError('Date', addEditForm.get('date'))}}\n          \n        \n        \n        \n          \n          \n            {{validateFormService.getError('Location', addEditForm.get('location'))}}\n          \n        \n\n        \n          \n          \n            {{validateFormService.getError('Description', addEditForm.get('description'))}}\n          \n        \n\n        \n          \n            Save\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./event-form.component.scss\n                \n                // @import '../../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt4.jpg', center, cover);\n  background-size: cover;\n}\n\n.form {\n  display: flex;\n  justify-content: center;\n}\n\nform {\n  display: flex;\n  flex-flow: column;\n  width: 50%;\n  font-family: $acn-font;\n  background-color: white;\n  padding: 20px;\n  border-radius: 4px;\n}\n\n.save-btn {\n  display: flex;\n  justify-content: flex-end;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Add Event                                                      {{validateFormService.getError(\\'Title\\', addEditForm.get(\\'title\\'))}}                                                          {{validateFormService.getError(\\'Date\\', addEditForm.get(\\'date\\'))}}                                                                  {{validateFormService.getError(\\'Location\\', addEditForm.get(\\'location\\'))}}                                                          {{validateFormService.getError(\\'Description\\', addEditForm.get(\\'description\\'))}}                                                Save                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventListComponent.html":{"url":"components/EventListComponent.html","title":"component - EventListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/event-list/event-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-event-list\n            \n\n            \n                styleUrls\n                ./event-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./event-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                selectedEvent\n                            \n                            \n                                slideMyEvents\n                            \n                            \n                                subscriptionLayout\n                            \n                            \n                                subscriptionLogin\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEvents\n                            \n                            \n                                myEventsChange\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventService, store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/events/event-list/event-list.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:84\n                \n            \n\n\n            \n                \n                    Obtain the event list\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            myEventsChange\n                        \n                        \n                    \n                \n            \n            \n                \nmyEventsChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:94\n                \n            \n\n\n            \n                \n                    Fired when the \"my events\" filter is toggle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:110\n                \n            \n\n\n            \n                \n                    After destroy the component we need unsubscribe.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelectEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonSelectEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/event-list/event-list.component.ts:77\n                \n            \n\n\n            \n                \n                    Mark the event as selected\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideMyEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionLayout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubscriptionLike\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubscriptionLike\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/event-list/event-list.component.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { SubscriptionLike } from 'rxjs';\nimport { trigger, style, state, transition, animate } from '@angular/animations';\nimport * as layout from '../../store/layout/layout.actions';\n\n/**\n * models\n*/\nimport { Event } from '../../models/event.model';\nimport { User } from '../../models/user.model';\n\n/**\n * services\n */\nimport { UserService } from '../../core/user.service';\nimport { EventService } from '../../core/event.service';\n\n@Component({\n  selector: 'eui-event-list',\n  templateUrl: './event-list.component.html',\n  styleUrls: ['./event-list.component.scss'],\n  animations: [\n    trigger('enterState', [\n      state('void', style({\n        transform: 'translateX(-100%)',\n        opacity: 0,\n      })),\n      transition(':enter', [\n        animate(300, style({\n          transform: 'translateX(0)',\n          opacity: 1,\n        }))\n      ]),\n    ])\n  ]\n})\n/**\n * Class that represent the Event list component in the app\n */\nexport class EventListComponent implements OnInit, OnDestroy {\n  events: Event[];\n  selectedEvent: Event;\n  slideMyEvents: boolean;\n  subscriptionLayout: SubscriptionLike;\n  subscriptionLogin: SubscriptionLike;\n  isAuthenticated: boolean;\n\n  constructor(\n    private readonly eventService: EventService,\n    private readonly store: Store,\n    public userService: UserService,\n  ) {}\n\n  ngOnInit() {\n    this.getEvents();\n\n    this.subscriptionLayout = this.store.pipe(select('layout')).subscribe(state => {\n      if (state && state.filteredEvents) {\n        this.events = state.filteredEvents;\n        this.selectedEvent = this.events[0];\n      }\n    });\n\n    this.subscriptionLogin = this.store.pipe(select('login')).subscribe(state => {\n      if (state) {\n        this.isAuthenticated = state.logged;\n      }\n    });\n  }\n\n  /**\n   * Mark the event as selected\n   *\n   * @param event The event\n   */\n  onSelectEvent(event: Event) {\n    this.selectedEvent = event;\n  }\n\n  /**\n   * Obtain the event list\n   */\n  getEvents() {\n    this.eventService.getEvents().subscribe((events: Event[]) => {\n      this.events = events;\n      this.selectedEvent = events[0];\n    });\n  }\n\n  /**\n   * Fired when the \"my events\" filter is toggle\n   */\n  myEventsChange() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n\n    if (this.slideMyEvents && user) {\n      const userMail = user.email;\n      const filter = 'addedBy=' + userMail;\n      const action = new layout.GetFilteredEvents(filter);\n      this.store.dispatch(action);\n    } else {\n      this.getEvents();\n    }\n  }\n\n  /**\n   * After destroy the component we need unsubscribe.\n   */\n  ngOnDestroy() {\n    this.subscriptionLayout.unsubscribe();\n    this.subscriptionLogin.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    Events\n  \n\n  \n    \n      \n        Add Event\n      \n      \n        \n          \n              Filter:\n              \n                My events\n              \n          \n        \n      \n    \n    \n      \n\n        \n            \n              \n                  {{ event.title | uppercase }}\n              \n              \n                {{ event.location }} - {{ event.date | date: \"dd/MM/yyyy\" }}\n              \n              \n                  {{ event.addedBy}}\n              \n            \n            \n              {{ event.description }}\n            \n        \n\n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./event-list.component.scss\n                \n                @import '../../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt2.jpg', center, cover);\n  background-size: cover;\n}\n\n.content {\n  width: 70%;\n  margin: 0 auto;\n\n  @media(max-width: $screen-md) {\n    width: 80%;\n  }\n\n  @media(max-width: $screen-sm) {\n    width: 100%;\n  }\n\n  .item {\n    margin-top: 2rem;\n  }\n\n  .control {\n    display: flex;\n    flex-flow: row;\n    align-items: flex-end;\n    border-bottom: 1px solid $gray;\n    padding-bottom: 0.8rem;\n    color: white;\n  }\n\n  button {\n    margin-left: auto;\n  }\n\n  .events {\n    width: 90%;\n    margin: 4rem auto;\n\n    .event {\n      margin-bottom: 1.5rem;\n    }\n\n    .link-event {\n      font-weight: 900;\n      margin: 0 2rem 0 0;\n    }\n\n    .date {\n      font-style: italic;\n      font-size: 14px;\n    }\n\n    .bottom {\n      font-weight: 300;\n      margin-top: 0.3rem;\n      font-size: 15px;\n    }\n  }\n  .description {\n    width: 95%;\n    margin: 0 auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Events                      Add Event                                            Filter:                              My events                                                                                                        {{ event.title | uppercase }}                                            {{ event.location }} - {{ event.date | date: \"dd/MM/yyyy\" }}                                              {{ event.addedBy}}                                                    {{ event.description }}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/event.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEvent\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                getEvent\n                            \n                            \n                                getEvents\n                            \n                            \n                                getFilteredEvents\n                            \n                            \n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/event.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEvent\n                        \n                        \n                    \n                \n            \n            \n                \naddEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:73\n                \n            \n\n\n            \n                \n                    Save the event passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event to add\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEvent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:55\n                \n            \n\n\n            \n                \n                    Delete the event, if exists, with the ID passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event ID\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvent\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:39\n                \n            \n\n\n            \n                \n                    Return the event with the ID passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event ID\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:23\n                \n            \n\n\n            \n                \n                    Return the event list.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFilteredEvents\n                        \n                        \n                    \n                \n            \n            \n                \ngetFilteredEvents(filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:109\n                \n            \n\n\n            \n                \n                    Return the event list that match with the filter string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String used to filter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \nupdateEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/event.service.ts:91\n                \n            \n\n\n            \n                \n                    Update the event passed as parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Event } from '../models/event.model';\nimport { HTTP_HEADER_VALUE_APPLICATION_JSON } from './constants-service';\nimport { ErrorService } from './error.service';\n\n@Injectable()\nexport class EventService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly errorService: ErrorService,\n    ) {}\n\n  /**\n   * Return the event list.\n   */\n  getEvents(): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http.get(environment.apiURL + 'events', { headers }).pipe(\n      retry(3),\n      catchError(this.errorService.handleError)\n    );\n  }\n\n  /**\n   * Return the event with the ID passed as parameter\n   *\n   * @param id Event ID\n   */\n  getEvent(id: string): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http.get(`${environment.apiURL}events/${id}`, { headers }).pipe(\n      retry(3),\n      catchError(this.errorService.handleError)\n    );\n  }\n\n  /**\n   * Delete the event, if exists, with the ID passed as parameter\n   *\n   * @param id  Event ID\n   */\n  deleteEvent(id: string): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http\n      .delete(`${environment.apiURL}events/${id}`, { headers })\n      .pipe(\n        retry(3),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n  /**\n   * Save the event passed as parameter\n   *\n   * @param event Event to add\n   */\n  addEvent(event: Event): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http\n      .post(environment.apiURL + 'events/', event, { headers })\n      .pipe(\n        retry(3),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n  /**\n   * Update the event passed as parameter\n   *\n   * @param event Event to update\n   */\n  updateEvent(event: Event): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http\n      .put(`${environment.apiURL}events/${event.id}`, event, { headers })\n      .pipe(\n        retry(3),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n  /**\n   * Return the event list that match with the filter string\n   *\n   * @param filter String used to filter\n   */\n  getFilteredEvents(filter): Observable {\n    const headers = new HttpHeaders({\n      HTTP_HEADER_KEY_CONTENT_TYPE : HTTP_HEADER_VALUE_APPLICATION_JSON\n    });\n\n    return this.http.get(`${environment.apiURL}events?${filter}`, { headers }).pipe(\n      retry(3),\n      catchError(this.errorService.handleError)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\n\nEventDetailComponent\n\nEventDetailComponent\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nEventDetailComponent->EventsModule\n\n\n\n\n\nEventFormComponent\n\nEventFormComponent\n\nEventsModule -->\n\nEventFormComponent->EventsModule\n\n\n\n\n\nEventListComponent\n\nEventListComponent\n\nEventsModule -->\n\nEventListComponent->EventsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/events/events.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EventDetailComponent\n                        \n                        \n                            EventFormComponent\n                        \n                        \n                            EventListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Modules\nimport { SharedModule } from '../shared/shared.module';\n\n// Components\nimport { EventListComponent } from './event-list/event-list.component';\nimport { EventFormComponent } from './event-form/event-form.component';\nimport { EventDetailComponent } from './event-detail/event-detail.component';\n\n@NgModule({\n  declarations: [\n    EventListComponent,\n    EventFormComponent,\n    EventDetailComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ]\n})\n/**\n * Module for Events\n */\nexport class EventsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetFilteredEvents.html":{"url":"classes/GetFilteredEvents.html","title":"class - GetFilteredEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetFilteredEvents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/layout/layout.actions.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GET_FILTERED_EVENTS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const GET_FILTERED_EVENTS = 'layout/GET_FILTERED_EVENTS';\nexport const GET_FILTERED_EVENTS_SUCCESS = 'layout/GET_FILTERED_EVENTS_SUCCESS';\nexport const GET_FILTERED_EVENTS_ERROR = 'layout/GET_FILTERED_EVENTS_ERROR';\n\nexport class GetFilteredEvents implements Action {\n  readonly type = GET_FILTERED_EVENTS;\n\n  constructor(public payload: string) {}\n}\n\nexport class GetFilteredEventsSuccess implements Action {\n  readonly type = GET_FILTERED_EVENTS_SUCCESS;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class GetFilteredEventsError implements Action {\n  readonly type = GET_FILTERED_EVENTS_ERROR;\n\n  constructor(public payload: any) {}\n}\n\n\nexport type Actions = GetFilteredEvents | GetFilteredEventsSuccess | GetFilteredEventsError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetFilteredEventsError.html":{"url":"classes/GetFilteredEventsError.html","title":"class - GetFilteredEventsError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetFilteredEventsError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/layout/layout.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GET_FILTERED_EVENTS_ERROR\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const GET_FILTERED_EVENTS = 'layout/GET_FILTERED_EVENTS';\nexport const GET_FILTERED_EVENTS_SUCCESS = 'layout/GET_FILTERED_EVENTS_SUCCESS';\nexport const GET_FILTERED_EVENTS_ERROR = 'layout/GET_FILTERED_EVENTS_ERROR';\n\nexport class GetFilteredEvents implements Action {\n  readonly type = GET_FILTERED_EVENTS;\n\n  constructor(public payload: string) {}\n}\n\nexport class GetFilteredEventsSuccess implements Action {\n  readonly type = GET_FILTERED_EVENTS_SUCCESS;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class GetFilteredEventsError implements Action {\n  readonly type = GET_FILTERED_EVENTS_ERROR;\n\n  constructor(public payload: any) {}\n}\n\n\nexport type Actions = GetFilteredEvents | GetFilteredEventsSuccess | GetFilteredEventsError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetFilteredEventsSuccess.html":{"url":"classes/GetFilteredEventsSuccess.html","title":"class - GetFilteredEventsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetFilteredEventsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any[])\n                    \n                \n                        \n                            \n                                Defined in src/app/store/layout/layout.actions.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GET_FILTERED_EVENTS_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.actions.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const GET_FILTERED_EVENTS = 'layout/GET_FILTERED_EVENTS';\nexport const GET_FILTERED_EVENTS_SUCCESS = 'layout/GET_FILTERED_EVENTS_SUCCESS';\nexport const GET_FILTERED_EVENTS_ERROR = 'layout/GET_FILTERED_EVENTS_ERROR';\n\nexport class GetFilteredEvents implements Action {\n  readonly type = GET_FILTERED_EVENTS;\n\n  constructor(public payload: string) {}\n}\n\nexport class GetFilteredEventsSuccess implements Action {\n  readonly type = GET_FILTERED_EVENTS_SUCCESS;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class GetFilteredEventsError implements Action {\n  readonly type = GET_FILTERED_EVENTS_ERROR;\n\n  constructor(public payload: any) {}\n}\n\n\nexport type Actions = GetFilteredEvents | GetFilteredEventsSuccess | GetFilteredEventsError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/home-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-home-page\n            \n\n            \n                styleUrls\n                ./home-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/home-page.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'eui-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\n/**\n * Class that represent the home page component in the app\n */\nexport class HomePageComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n    \n      Home\n    \n    \n      \n    \n\n    \n      \n          Open Events\n        \n\n        \n          All our events\n        \n\n        \n          \n            A new and fresh application to host all our tech events crafted from\n            Accenture Openathons\n          \n        \n    \n\n\n\n    \n\n    \n                \n                    ./home-page.component.scss\n                \n                @import '../shared/styles/colors';\n@import '../shared/styles/variables';\n\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt1.jpg', bottom, contain);\n  background-size: cover;\n  display: flex;\n  flex-flow: column;\n  text-align: center;\n  display: inline-block;\n}\n\n.logo {\n\n  img {\n    width: 250px;\n    border-radius: 4px;\n    margin-bottom: 20px;\n  }\n}\n\n.title {\n  color: $black;\n\n  h1 {\n    font-size: 2.2rem;\n    margin: 3rem 0 0 0;\n  }\n}\n\n.section-title {\n  text-align: left;\n}\n\n.subtitle {\n\n  h2{\n    font-size: 2rem;\n    font-weight: 100;\n    margin-top: 0.3rem;\n  }\n}\n\n.background-card {\n  background-color: white;\n  border-radius: 4px;\n  padding-bottom: 30px;\n  width: 65%;\n  display:inline-block;\n}\n\n.message {\n  text-align: center;\n\n  p {\n    display: inline-block;\n    margin: 0;\n    font-size: 1.3rem;\n    font-weight: 300;\n    max-width: 600px;\n    line-height: 1.4;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Home                                      Open Events                          All our events                                      A new and fresh application to host all our tech events crafted from            Accenture Openathons                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesService.html":{"url":"injectables/ImagesService.html","title":"injectable - ImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/images.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/images.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \ngetImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/images.service.ts:21\n                \n            \n\n\n            \n                \n                    Return a random image from unsplash.com\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { ErrorService } from './error.service';\n\n\n@Injectable()\nexport class ImagesService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly errorService: ErrorService,\n  ) {}\n\n  /**\n   * Return a random image from unsplash.com\n   */\n  getImage(): Observable {\n    const headers = new HttpHeaders({\n      Authorization: 'Client-ID 9f354e7919a3f56e537616f46b1c1e87b5632d7c7227f2bd469762eed79a6296'\n    });\n\n    return this.http\n      .get('https://api.unsplash.com/photos/random?orientation=landscape&query=event', { headers })\n      .pipe(\n        retry(3),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutEffects.html":{"url":"injectables/LayoutEffects.html","title":"injectable - LayoutEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LayoutEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getFilteredEvents$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, eventService: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/layout/layout.effects.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFilteredEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType('layout/GET_FILTERED_EVENTS'),\n    switchMap((filter: any) => this.eventService.getFilteredEvents(filter.payload)\n      .pipe(\n        map(res => ({ type: 'layout/GET_FILTERED_EVENTS_SUCCESS', payload: res })),\n        catchError(error => of({ type: 'layout/GET_FILTERED_EVENTS_ERROR', payload: error }))\n      )\n    )\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/layout/layout.effects.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { EventService } from '../../core/event.service';\n\n\n@Injectable()\nexport class LayoutEffects {\n\n  constructor(\n    private readonly actions$: Actions,\n    private readonly eventService: EventService\n  ) {}\n\n  @Effect()\n  getFilteredEvents$ = this.actions$.pipe(\n    ofType('layout/GET_FILTERED_EVENTS'),\n    switchMap((filter: any) => this.eventService.getFilteredEvents(filter.payload)\n      .pipe(\n        map(res => ({ type: 'layout/GET_FILTERED_EVENTS_SUCCESS', payload: res })),\n        catchError(error => of({ type: 'layout/GET_FILTERED_EVENTS_ERROR', payload: error }))\n      )\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logged.html":{"url":"classes/Logged.html","title":"class - Logged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/login/login.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/login/login.actions.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/login/login.actions.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LOGGED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/login/login.actions.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGGED = 'login/logged';\n\nexport class Logged implements Action {\n  readonly type = LOGGED;\n\n  constructor(public payload: boolean) {}\n}\n\nexport type Actions = Logged;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login-form/login-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-login-form\n            \n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                msgs\n                            \n                            \n                                    Public\n                                    Readonly\n                                validateFormService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validateFormService: ValidateFormService, fb: FormBuilder, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login-form/login-form.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validateFormService\n                                                  \n                                                        \n                                                                        ValidateFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login-form/login-form.component.ts:32\n                \n            \n\n\n            \n                \n                    instanze form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login-form/login-form.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login-form/login-form.component.ts:42\n                \n            \n\n\n            \n                \n                    Fired when user click on \"Login\" button in the form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login-form/login-form.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msgs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login-form/login-form.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            validateFormService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidateFormService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login-form/login-form.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../core/user.service';\nimport { ValidateFormService } from '../../core/validate-form.service';\n\n@Component({\n  selector: 'eui-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\n/**\n * Class that represent the login form component in the app\n */\nexport class LoginFormComponent implements OnInit {\n  loginForm: FormGroup;\n  msgs: string;\n\n  constructor(\n    public readonly validateFormService: ValidateFormService,\n    private readonly fb: FormBuilder,\n    private readonly router: Router,\n    private readonly userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.createForm();\n  }\n/**\n * instanze form\n */\n  createForm() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /**\n   * Fired when user click on \"Login\" button in the form\n   */\n  onSubmit() {\n    this.userService.login(this.loginForm.value).subscribe((res: any) => {\n      if (res.email) {\n        this.router.navigate(['/events']);\n      } else {\n        this.msgs = res;\n      }\n    }, err => this.msgs = 'Email not found.');\n  }\n\n}\n\n    \n\n    \n        \n    \n      Login\n    \n\n    \n      \n        \n          \n          \n            {{validateFormService.getError('email', loginForm.get('email'))}}\n          \n        \n        \n          \n          \n            {{validateFormService.getError('password', loginForm.get('password'))}}\n          \n        \n\n        \n          {{msgs}} \n        \n\n        \n          Need an account? Signup\n          \n            Login\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                // @import '../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt5.jpg', center, contain);\n  background-size: cover;\n}\n\n.form {\n  display: flex;\n  justify-content: center;\n}\n\n.form-login {\n  border-radius: 4px;\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  padding: 1rem;\n  background-color: rgba(255,255,255,0.9);\n}\n\n.login-btn {\n  text-align: right;\n  margin-top: 2rem;\n\n  .sign-up {\n    font-size: 12px;\n    margin-bottom: 0.5rem;\n\n    a {\n      font-weight: 600;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Login                                                      {{validateFormService.getError(\\'email\\', loginForm.get(\\'email\\'))}}                                                          {{validateFormService.getError(\\'password\\', loginForm.get(\\'password\\'))}}                                    {{msgs}}                           Need an account? Signup                      Login                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginModule.html":{"url":"modules/LoginModule.html","title":"module - LoginModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_declarations\n\n\n\ncluster_LoginModule_imports\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nLoginFormComponent->LoginModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLoginModule -->\n\nSharedModule->LoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LoginFormComponent } from './login-form/login-form.component';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginFormComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    LoginFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ]\n})\n/**\n * Module for Login\n */\nexport class LoginModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/page-not-found/page-not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/page-not-found/page-not-found.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/page-not-found/page-not-found.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'eui-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\n/**\n * Class that represent the pageNotFound component in the app\n */\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        Page not found\n    \n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                @import '../shared/styles/variables';\n\n.container {\n    @include container();\n    @include background('/assets/imgs/patt2.jpg', center, cover);\n    background-size: cover;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Page not found    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileDetailComponent.html":{"url":"components/ProfileDetailComponent.html","title":"component - ProfileDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile-detail/profile-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-profile-detail\n            \n\n            \n                styleUrls\n                ./profile-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile-detail/profile-detail.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile-detail/profile-detail.component.ts:32\n                \n            \n\n\n            \n                \n                    get user from local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile-detail/profile-detail.component.ts:39\n                \n            \n\n\n            \n                \n                    Log out use from the system\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile-detail/profile-detail.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile-detail/profile-detail.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../core/user.service';\nimport { User } from '../../models/user.model';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport * as login from '../../store/login/login.actions';\n\n@Component({\n  selector: 'eui-profile-detail',\n  templateUrl: './profile-detail.component.html',\n  styleUrls: ['./profile-detail.component.scss']\n})\n/**\n * Class that represent the detail profile component in the app\n */\nexport class ProfileDetailComponent implements OnInit {\n  user: User;\n\n  constructor(\n    private readonly userService: UserService,\n    private readonly router: Router,\n    private readonly store: Store,\n  ) {}\n\n  ngOnInit() {\n    this.getUser();\n  }\n\n  /**\n   * get user from local storage\n   */\n  getUser() {\n    this.user = JSON.parse(localStorage.getItem('user'));\n  }\n\n  /**\n   * Log out use from the system\n   */\n  logout() {\n    this.userService.logout();\n    this.store.dispatch(new login.Logged(false));\n    this.router.navigate(['/home']);\n  }\n\n}\n\n    \n\n    \n        \n  \n      User Profile\n  \n\n  \n    \n      \n        Email: \n         {{user.email}}\n      \n      \n        ID: \n         {{user.id}}\n      \n    \n  \n\n  \n    \n      Logout\n    \n  \n\n\n\n    \n\n    \n                \n                    ./profile-detail.component.scss\n                \n                // @import '../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt5.jpg', center, contain);\n  background-size: cover;\n}\n\n.wrap {\n  display: flex;\n  justify-content: center;\n}\n\n.userData {\n  margin-bottom: 20px;\n  padding: 1rem;\n  background-color: rgba(255,255,255,0.9);\n  border-radius: 4px;\n  min-width: 35%;\n  h4 {\n    display: inline-block;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        User Profile                      Email:          {{user.email}}                    ID:          {{user.id}}                        Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nProfileDetailComponent\n\nProfileDetailComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileDetailComponent->ProfileModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileDetailComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ProfileDetailComponent } from './profile-detail/profile-detail.component';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileDetailComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    ProfileDetailComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ]\n})\n/**\n * Module for Profile\n */\nexport class ProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\n/**\n * Angular material\n */\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { RouterModule } from '@angular/router';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\nimport 'hammerjs';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatListModule,\n    MatCardModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    RouterModule,\n    MatSlideToggleModule,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatListModule,\n    MatCardModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    RouterModule,\n    MatSlideToggleModule,\n    MatCheckboxModule,\n  ],\n  entryComponents: [],\n})\n\n/**\n * shared module contains component by angular material\n */\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupFormComponent.html":{"url":"components/SignupFormComponent.html","title":"component - SignupFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/signup/signup-form/signup-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-signup-form\n            \n\n            \n                styleUrls\n                ./signup-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signup-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                signupForm\n                            \n                            \n                                user\n                            \n                            \n                                    Public\n                                    Readonly\n                                validateFormService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validateFormService: ValidateFormService, fb: FormBuilder, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/signup/signup-form/signup-form.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validateFormService\n                                                  \n                                                        \n                                                                        ValidateFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup-form/signup-form.component.ts:39\n                \n            \n\n\n            \n                \n                    inicialize form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup-form/signup-form.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup-form/signup-form.component.ts:56\n                \n            \n\n\n            \n                \n                    Fired when user click on \"Signup\" button in the form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showPassword\n                        \n                        \n                    \n                \n            \n            \n                \nshowPassword(showPassword: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup-form/signup-form.component.ts:49\n                \n            \n\n\n            \n                \n                    change type of input when click in check show password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    showPassword\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('password', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup-form/signup-form.component.ts:21\n                            \n                        \n\n                \n                    \n                        ViewChild to be able to change input type in pasword\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup-form/signup-form.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup-form/signup-form.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            validateFormService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidateFormService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup-form/signup-form.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\nimport { UserService } from '../../core/user.service';\nimport { ValidateFormService } from '../../core/validate-form.service';\n\n@Component({\n  selector: 'eui-signup-form',\n  templateUrl: './signup-form.component.html',\n  styleUrls: ['./signup-form.component.scss']\n})\n/**\n * Class that represent the Signup component in the app\n */\nexport class SignupFormComponent implements OnInit {\n\n  /**\n   * ViewChild to be able to change input type in pasword\n   */\n  @ViewChild('password', {static: false}) password: ElementRef;\n  signupForm: FormGroup;\n  user: User;\n\n  constructor(\n    public readonly validateFormService: ValidateFormService,\n    private readonly fb: FormBuilder,\n    private readonly router: Router,\n    private readonly userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  /**\n   * inicialize form\n   */\n  createForm() {\n    this.signupForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /**\n   * change type of input when click in check show password\n   */\n  showPassword(showPassword: boolean) {\n    this.password.nativeElement.type = showPassword ? 'text' : 'password';\n  }\n\n  /**\n   * Fired when user click on \"Signup\" button in the form\n   */\n  onSubmit() {\n    this.user = this.signupForm.value;\n    this.userService.signup(this.user).subscribe(() => {\n      this.router.navigate(['/events']);\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n      Signup\n    \n\n    \n      \n        \n          \n          \n            {{validateFormService.getError('email', signupForm.get('email'))}}\n          \n        \n        \n          \n          \n            {{validateFormService.getError('password', signupForm.get('password'))}}\n          \n        \n          \n            Show password\n          \n\n\n        \n          Already have an account? Login\n          \n            Signup\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./signup-form.component.scss\n                \n                // @import '../../shared/styles/colors';\n@import '../../shared/styles/variables';\n\n\n.container {\n  @include container();\n  @include background('/assets/imgs/patt5.jpg', center, contain);\n  background-size: cover;\n}\n\n.form {\n  display: flex;\n  justify-content: center;\n}\n\n.form-signup {\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  padding: 1rem;\n  background-color: rgba(255,255,255,0.9);\n  border-radius: 4px;\n}\n\n.login-btn {\n  text-align: right;\n  margin-top: 2rem;\n\n  .login {\n    font-size: 12px;\n    margin-bottom: 0.5rem;\n\n    a {\n      font-weight: 600;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Signup                                                      {{validateFormService.getError(\\'email\\', signupForm.get(\\'email\\'))}}                                                          {{validateFormService.getError(\\'password\\', signupForm.get(\\'password\\'))}}                                        Show password                            Already have an account? Login                      Signup                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SignupModule.html":{"url":"modules/SignupModule.html","title":"module - SignupModule","body":"\n                   \n\n\n\n\n    Modules\n    SignupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SignupModule\n\n\n\ncluster_SignupModule_declarations\n\n\n\ncluster_SignupModule_imports\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\n\n\nSignupModule\n\nSignupModule\n\nSignupModule -->\n\nSignupFormComponent->SignupModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSignupModule -->\n\nSharedModule->SignupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/signup/signup.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SignupFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SignupFormComponent } from './signup-form/signup-form.component';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupFormComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    SignupFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ]\n})\n/**\n * Module for Signup\n */\nexport class SignupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.store.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        layout\n                                \n                                \n                                        login\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                    \n                                \n                                \n                                    \n                                        layout:     layoutReducer.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     layoutReducer.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                    \n                                \n                                \n                                    \n                                        login:     loginReducer.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     loginReducer.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap } from '@ngrx/store';\n\nimport * as loginReducer from './store/login/login.redux';\nimport * as layoutReducer from './store/layout/layout.redux';\n\nexport interface State {\n  login: loginReducer.State;\n  layout: layoutReducer.State;\n}\n\nexport const reducers: ActionReducerMap = {\n  login: loginReducer.reducer,\n  layout: layoutReducer.reducer,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-1.html":{"url":"interfaces/State-1.html","title":"interface - State-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/layout/layout.redux.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        filteredEvents\n                                \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filteredEvents\n                                    \n                                \n                                \n                                    \n                                        filteredEvents:         Event[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Event[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as layout from './layout.actions';\nimport { Event } from '../../models/event.model';\n\nexport interface State {\n  filteredEvents: Event[];\n  loading: boolean;\n  error: any;\n}\n\nexport const initialState: State = {\n  filteredEvents: [],\n  loading: false,\n  error: null\n};\n\nexport function reducer(state: State = initialState, action: layout.Actions): State {\n  switch (action.type) {\n    case layout.GET_FILTERED_EVENTS:\n      return {\n        ...state,\n        filteredEvents: [],\n        loading: true,\n        error: null\n      };\n\n    case layout.GET_FILTERED_EVENTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        filteredEvents: action.payload,\n        error: null\n      };\n\n    case layout.GET_FILTERED_EVENTS_ERROR:\n      return {\n        ...state,\n        filteredEvents: [],\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-2.html":{"url":"interfaces/State-2.html","title":"interface - State-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/login/login.redux.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        logged\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logged\n                                    \n                                \n                                \n                                    \n                                        logged:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as login from './login.actions';\n\nexport interface State {\n  logged: boolean;\n}\n\nexport const initialState: State = {\n  logged: false\n};\n\nexport function reducer(state: State = initialState, action: login.Actions): State {\n\n  if (action.type === login.LOGGED) {\n    return {\n      ...state,\n      logged: action.payload\n    };\n  } else {\n    return state;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/toolbar/toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eui-toolbar\n            \n\n            \n                styleUrls\n                ./toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                subscriptionLogin\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/toolbar/toolbar.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/toolbar/toolbar.component.ts:35\n                \n            \n\n\n            \n                \n                    After destroy the component loginSuscription need unsubscribe.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/toolbar/toolbar.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toolbar/toolbar.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubscriptionLike\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toolbar/toolbar.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toolbar/toolbar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { SubscriptionLike } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\n\n@Component({\n  selector: 'eui-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\n/**\n * Class that represent the toolbar component in top\n */\nexport class ToolbarComponent implements OnInit, OnDestroy {\n  user: User;\n  isAuthenticated: boolean;\n  subscriptionLogin: SubscriptionLike;\n  constructor(\n    private readonly store: Store\n  ) {}\n\n  ngOnInit() {\n    this.subscriptionLogin = this.store.pipe(select('login')).subscribe(state => {\n      if (state) {\n        this.isAuthenticated = state.logged;\n        if ( this.isAuthenticated) {\n          this.user = JSON.parse(localStorage.getItem('user'));\n        }\n      }\n    });\n  }\n  /**\n   * After destroy the component loginSuscription need unsubscribe.\n   */\n  ngOnDestroy() {\n    if (this.subscriptionLogin) {\n      this.subscriptionLogin.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  Home\n  Events\n  {{user.email}}\n  Login\n\n\n    \n\n    \n                \n                    ./toolbar.component.scss\n                \n                .toolbar {\n\n    .option {\n      margin-left: 10px;\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Home  Events  {{user.email}}  Login'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'eui-root'},{'name': 'EventDetailComponent', 'selector': 'eui-event-detail'},{'name': 'EventFormComponent', 'selector': 'eui-event-form'},{'name': 'EventListComponent', 'selector': 'eui-event-list'},{'name': 'HomePageComponent', 'selector': 'eui-home-page'},{'name': 'LoginFormComponent', 'selector': 'eui-login-form'},{'name': 'PageNotFoundComponent', 'selector': 'eui-page-not-found'},{'name': 'ProfileDetailComponent', 'selector': 'eui-profile-detail'},{'name': 'SignupFormComponent', 'selector': 'eui-signup-form'},{'name': 'ToolbarComponent', 'selector': 'eui-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                interface used to store the user\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUser\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                setUser\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorService: ErrorService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkUser\n                        \n                        \n                    \n                \n            \n            \n                \ncheckUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:82\n                \n            \n\n\n            \n                \n                    Return true if user is authenticated, false in other case.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:53\n                \n            \n\n\n            \n                \n                    Log in user in the system if the password is correct.\nIf the password is incorrect return a string message\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Use to log in\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:74\n                \n            \n\n\n            \n                \n                    Log out the user in the system\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:90\n                \n            \n\n\n            \n                \n                    Determine if user is authenticated and then set result in isAuthenticated properti\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/user.service.ts:29\n                \n            \n\n\n            \n                \n                    Sign up the user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User to sign up\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { catchError, retry, map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { User } from '../models/user.model';\nimport * as login from '../store/login/login.actions';\nimport { ErrorService } from './error.service';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly errorService: ErrorService,\n    private readonly store: Store,\n  ) {}\n\n  isAuthenticated: boolean;\n\n  /**\n   * Sign up the user\n   *\n   * @param user User to sign up\n   */\n  signup(user: User): Observable {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    return this.http\n      .post(environment.apiURL + 'users/', user, { headers })\n      .pipe(\n        retry(3),\n        map(r => {\n          localStorage.setItem('user', JSON.stringify(r));\n          this.setUser();\n        }),\n        catchError(this.errorService.handleError)\n      );\n  }\n\n  /**\n   * Log in user in the system if the password is correct.\n   *\n   * If the password is incorrect return a string message\n   *\n   * @param user Use to log in\n   */\n  login(user: User): Observable {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    return this.http.get(`${environment.apiURL}users?email=${user.email}`, { headers }).pipe(\n      retry(3),\n      map(us => {\n        if (us[0].email && us[0].password === user.password) {\n          localStorage.setItem('user', JSON.stringify(us[0]));\n          this.setUser();\n        }\n        return us[0].password === user.password ? us[0] : 'Password not valid.';\n      }),\n      catchError(this.errorService.handleError)\n    );\n  }\n\n  /**\n   * Log out the user in the system\n   */\n  logout() {\n    localStorage.setItem('user', '');\n    return false;\n  }\n\n  /**\n   * Return true if user is authenticated, false in other case.\n   */\n  checkUser(): boolean {\n    this.setUser();\n    return this.isAuthenticated;\n  }\n\n  /**\n   * Determine if user is authenticated and then set result in isAuthenticated properti\n   */\n  private setUser() {\n    this.isAuthenticated = true;\n    this.isAuthenticated = Boolean(localStorage.getItem('user'));\n    this.isAuthenticated ? this.store.dispatch(new login.Logged(true)) : this.store.dispatch(new login.Logged(false));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateFormService.html":{"url":"injectables/ValidateFormService.html","title":"injectable - ValidateFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validate-form.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/validate-form.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError(name: string, field: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validate-form.service.ts:13\n                \n            \n\n\n            \n                \n                    If field has errors, return an error message explaining it. An empty string if it has not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Field name\n\n                                    \n                                \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Field object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateFormService {\n  constructor() {}\n\n  /**\n   * If field has errors, return an error message explaining it. An empty string if it has not.\n   *\n   * @param name Field name\n   * @param field Field object\n   */\n  getError(name: string, field: any): string {\n    if (field.errors) {\n      if (field.errors.required) {\n        return `${name} is required`;\n      } else if (field.errors.minlength) {\n        return `${name} min length is ${field.errors.minlength.requiredLength}`;\n      } else if (field.errors.maxlength) {\n        return `${name} max length is ${field.errors.maxlength.requiredLength}`;\n      } else if (field.errors.email) {\n        return `${name} isn't a valid email`;\n      }\n    }\n    return '';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.store.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.store.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/auth-guard.service.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/constants-service.ts\n            \n            variable\n            HTTP_HEADER_KEY_CONTENT_TYPE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/constants-service.ts\n            \n            variable\n            HTTP_HEADER_VALUE_APPLICATION_JSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/event.service.ts\n            \n            injectable\n            EventService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/core/images.service.ts\n            \n            injectable\n            ImagesService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/user.service.ts\n            \n            injectable\n            UserService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/core/validate-form.service.ts\n            \n            injectable\n            ValidateFormService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/events/event-detail/event-detail.component.ts\n            \n            component\n            EventDetailComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/events/event-form/event-form.component.ts\n            \n            component\n            EventFormComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/events/event-list/event-list.component.ts\n            \n            component\n            EventListComponent\n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                src/app/home-page/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/login/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/models/event.model.ts\n            \n            interface\n            Event\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            User\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/profile/profile-detail/profile-detail.component.ts\n            \n            component\n            ProfileDetailComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/signup/signup-form/signup-form.component.ts\n            \n            component\n            SignupFormComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            class\n            GetFilteredEvents\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            class\n            GetFilteredEventsError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            class\n            GetFilteredEventsSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            variable\n            GET_FILTERED_EVENTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            variable\n            GET_FILTERED_EVENTS_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.actions.ts\n            \n            variable\n            GET_FILTERED_EVENTS_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.effects.ts\n            \n            injectable\n            LayoutEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.redux.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.redux.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/layout/layout.redux.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/login/login.actions.ts\n            \n            class\n            Logged\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/login/login.actions.ts\n            \n            variable\n            LOGGED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/login/login.redux.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/store/login/login.redux.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/login/login.redux.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.0.1\n        \n            @angular/cdk : ^8.0.1\n        \n            @angular/common : ~8.0.1\n        \n            @angular/compiler : ~8.0.1\n        \n            @angular/core : ~8.0.1\n        \n            @angular/forms : ~8.0.1\n        \n            @angular/material : ^8.0.1\n        \n            @angular/platform-browser : ~8.0.1\n        \n            @angular/platform-browser-dynamic : ~8.0.1\n        \n            @angular/router : ~8.0.1\n        \n            @ngrx/effects : ^8.0.1\n        \n            @ngrx/store : ^8.0.1\n        \n            hammerjs : ^2.0.8\n        \n            i : ^0.3.6\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            reducer   (src/.../layout.redux.ts)\n                        \n                        \n                            reducer   (src/.../login.redux.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/layout/layout.redux.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/store/login/login.redux.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEventsUi\nThis project was generated with Angular CLI version 8.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SignupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_declarations\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_SignupModule\n\n\n\ncluster_SignupModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nSharedModule->LoginModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nSignupModule\n\nSignupModule\n\nSignupModule -->\n\nSharedModule->SignupModule\n\n\n\n\n\nErrorService\n\nErrorService\n\nCoreModule -->\n\nErrorService->CoreModule\n\n\n\n\n\nEventService\n\nEventService\n\nCoreModule -->\n\nEventService->CoreModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nCoreModule -->\n\nImagesService->CoreModule\n\n\n\n\n\nUserService\n\nUserService\n\nCoreModule -->\n\nUserService->CoreModule\n\n\n\n\n\nValidateFormService\n\nValidateFormService\n\nCoreModule -->\n\nValidateFormService->CoreModule\n\n\n\n\n\nEventDetailComponent\n\nEventDetailComponent\n\nEventsModule -->\n\nEventDetailComponent->EventsModule\n\n\n\n\n\nEventFormComponent\n\nEventFormComponent\n\nEventsModule -->\n\nEventFormComponent->EventsModule\n\n\n\n\n\nEventListComponent\n\nEventListComponent\n\nEventsModule -->\n\nEventListComponent->EventsModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nLoginModule -->\n\nLoginFormComponent->LoginModule\n\n\n\n\n\nProfileDetailComponent\n\nProfileDetailComponent\n\nProfileModule -->\n\nProfileDetailComponent->ProfileModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nSignupModule -->\n\nSignupFormComponent->SignupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Actions   (src/.../layout.actions.ts)\n                        \n                        \n                            Actions   (src/.../login.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/layout/layout.actions.ts\n    \n    \n        \n            \n                \n                    \n                    Actions\n                \n            \n            \n                \n                            GetFilteredEvents | GetFilteredEventsSuccess | GetFilteredEventsError\n\n                \n            \n        \n    \n    src/app/store/login/login.actions.ts\n    \n    \n        \n            \n                \n                    \n                    Actions\n                \n            \n            \n                \n                            Logged\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            GET_FILTERED_EVENTS   (src/.../layout.actions.ts)\n                        \n                        \n                            GET_FILTERED_EVENTS_ERROR   (src/.../layout.actions.ts)\n                        \n                        \n                            GET_FILTERED_EVENTS_SUCCESS   (src/.../layout.actions.ts)\n                        \n                        \n                            HTTP_HEADER_KEY_CONTENT_TYPE   (src/.../constants-service.ts)\n                        \n                        \n                            HTTP_HEADER_VALUE_APPLICATION_JSON   (src/.../constants-service.ts)\n                        \n                        \n                            initialState   (src/.../login.redux.ts)\n                        \n                        \n                            initialState   (src/.../layout.redux.ts)\n                        \n                        \n                            LOGGED   (src/.../login.actions.ts)\n                        \n                        \n                            reducers   (src/.../app.store.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiURL: 'http://localhost:3000/'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiURL: 'http://server.open-events.site/'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/layout/layout.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GET_FILTERED_EVENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'layout/GET_FILTERED_EVENTS'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GET_FILTERED_EVENTS_ERROR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'layout/GET_FILTERED_EVENTS_ERROR'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GET_FILTERED_EVENTS_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'layout/GET_FILTERED_EVENTS_SUCCESS'\n                        \n                    \n\n\n            \n        \n\n    src/app/core/constants-service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_HEADER_KEY_CONTENT_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Content-Type'\n                        \n                    \n\n                \n                    \n                        General constants\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_HEADER_VALUE_APPLICATION_JSON\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'application/json'\n                        \n                    \n\n\n            \n        \n\n    src/app/store/login/login.redux.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  logged: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/layout/layout.redux.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  filteredEvents: [],\n  loading: false,\n  error: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/login/login.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOGGED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'login/logged'\n                        \n                    \n\n\n            \n        \n\n    src/app/app.store.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  login: loginReducer.reducer,\n  layout: layoutReducer.reducer,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
